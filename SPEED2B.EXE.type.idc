//
// +-------------------------------------------------------------------------+
// |      This file was generated by The Interactive Disassembler (IDA)      |
// |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
// |                            Freeware version                             |
// +-------------------------------------------------------------------------+
//
//
//      This file contains the user-defined type definitions.
//      To use it press F2 in IDA and enter the name of this file.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();
	set_inf_attr(INF_LOW_OFF, 0x10000);
	set_inf_attr(INF_HIGH_OFF, 0xA4265000);
}

static Enums_0(id) {

	id = add_enum(-1,"__TI_flags",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"TI_IsConst",	0X1,	0x1);
	add_enum_member(id,"TI_IsVolatile",	0X2,	0x2);
	add_enum_member(id,"TI_IsUnaligned",	0X4,	0x4);
	add_enum_member(id,"TI_IsPure",	0X8,	0x8);
	add_enum_member(id,"TI_IsWinRT",	0X10,	0x10);
	id = add_enum(-1,"__CT_flags",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"CT_IsSimpleType",	0X1,	0x1);
	add_enum_member(id,"CT_ByReferenceOnly",	0X2,	0x2);
	add_enum_member(id,"CT_HasVirtualBase",	0X4,	0x4);
	add_enum_member(id,"CT_IsWinRTHandle",	0X8,	0x8);
	add_enum_member(id,"CT_IsStdBadAlloc",	0X10,	0x10);
	id = add_enum(-1,"MACRO_WA",0x2220000);
	add_enum_member(id,"WA_INACTIVE",	0,	-1);
	add_enum_member(id,"WA_ACTIVE",	0X1,	-1);
	add_enum_member(id,"WA_CLICKACTIVE",	0X2,	-1);
	add_enum_member(id,"WM_SETFOCUS",	0X7,	-1);
	add_enum_member(id,"WM_KILLFOCUS",	0X8,	-1);
	add_enum_member(id,"WM_ENABLE",	0XA,	-1);
	add_enum_member(id,"WM_SETREDRAW",	0XB,	-1);
	add_enum_member(id,"WM_SETTEXT",	0XC,	-1);
	add_enum_member(id,"WM_GETTEXT",	0XD,	-1);
	add_enum_member(id,"WM_GETTEXTLENGTH",	0XE,	-1);
	add_enum_member(id,"WM_PAINT",	0XF,	-1);
	add_enum_member(id,"WM_CLOSE",	0X10,	-1);
	add_enum_member(id,"WM_QUERYENDSESSION",	0X11,	-1);
	add_enum_member(id,"WM_QUIT",	0X12,	-1);
	add_enum_member(id,"WM_QUERYOPEN",	0X13,	-1);
	add_enum_member(id,"WM_ERASEBKGND",	0X14,	-1);
	add_enum_member(id,"WM_SYSCOLORCHANGE",	0X15,	-1);
	add_enum_member(id,"WM_ENDSESSION",	0X16,	-1);
	add_enum_member(id,"WM_SHOWWINDOW",	0X18,	-1);
	add_enum_member(id,"WM_WININICHANGE",	0X1A,	-1);
	add_enum_member(id,"WM_SETTINGCHANGE",	0X1A,	-1);
	add_enum_member(id,"WM_DEVMODECHANGE",	0X1B,	-1);
	add_enum_member(id,"WM_ACTIVATEAPP",	0X1C,	-1);
	add_enum_member(id,"WM_FONTCHANGE",	0X1D,	-1);
	add_enum_member(id,"WM_TIMECHANGE",	0X1E,	-1);
	add_enum_member(id,"WM_CANCELMODE",	0X1F,	-1);
	add_enum_member(id,"WM_SETCURSOR",	0X20,	-1);
	add_enum_member(id,"WM_MOUSEACTIVATE",	0X21,	-1);
	add_enum_member(id,"WM_CHILDACTIVATE",	0X22,	-1);
	add_enum_member(id,"WM_QUEUESYNC",	0X23,	-1);
	add_enum_member(id,"WM_GETMINMAXINFO",	0X24,	-1);
	add_enum_member(id,"WM_PAINTICON",	0X26,	-1);
	add_enum_member(id,"WM_ICONERASEBKGND",	0X27,	-1);
	add_enum_member(id,"WM_NEXTDLGCTL",	0X28,	-1);
	add_enum_member(id,"WM_SPOOLERSTATUS",	0X2A,	-1);
	add_enum_member(id,"WM_DRAWITEM",	0X2B,	-1);
	add_enum_member(id,"WM_MEASUREITEM",	0X2C,	-1);
	add_enum_member(id,"WM_DELETEITEM",	0X2D,	-1);
	add_enum_member(id,"WM_VKEYTOITEM",	0X2E,	-1);
	add_enum_member(id,"WM_CHARTOITEM",	0X2F,	-1);
	add_enum_member(id,"WM_SETFONT",	0X30,	-1);
	add_enum_member(id,"WM_GETFONT",	0X31,	-1);
	add_enum_member(id,"WM_SETHOTKEY",	0X32,	-1);
	add_enum_member(id,"WM_GETHOTKEY",	0X33,	-1);
	add_enum_member(id,"WM_QUERYDRAGICON",	0X37,	-1);
	add_enum_member(id,"WM_COMPAREITEM",	0X39,	-1);
	add_enum_member(id,"WM_GETOBJECT",	0X3D,	-1);
	add_enum_member(id,"WM_COMPACTING",	0X41,	-1);
	add_enum_member(id,"WM_COMMNOTIFY",	0X44,	-1);
	add_enum_member(id,"WM_WINDOWPOSCHANGING",	0X46,	-1);
	add_enum_member(id,"WM_WINDOWPOSCHANGED",	0X47,	-1);
	add_enum_member(id,"WM_POWER",	0X48,	-1);
	add_enum_member(id,"WM_COPYDATA",	0X4A,	-1);
	add_enum_member(id,"WM_CANCELJOURNAL",	0X4B,	-1);
	add_enum_member(id,"WM_NOTIFY",	0X4E,	-1);
	add_enum_member(id,"WM_INPUTLANGCHANGEREQUEST",	0X50,	-1);
	add_enum_member(id,"WM_INPUTLANGCHANGE",	0X51,	-1);
	add_enum_member(id,"WM_TCARD",	0X52,	-1);
	add_enum_member(id,"WM_HELP",	0X53,	-1);
	add_enum_member(id,"WM_USERCHANGED",	0X54,	-1);
	add_enum_member(id,"WM_NOTIFYFORMAT",	0X55,	-1);
	add_enum_member(id,"WM_CONTEXTMENU",	0X7B,	-1);
	add_enum_member(id,"WM_STYLECHANGING",	0X7C,	-1);
	add_enum_member(id,"WM_STYLECHANGED",	0X7D,	-1);
	add_enum_member(id,"WM_DISPLAYCHANGE",	0X7E,	-1);
	add_enum_member(id,"WM_GETICON",	0X7F,	-1);
	add_enum_member(id,"WM_SETICON",	0X80,	-1);
	add_enum_member(id,"WM_NCCREATE",	0X81,	-1);
	add_enum_member(id,"WM_NCDESTROY",	0X82,	-1);
	add_enum_member(id,"WM_NCCALCSIZE",	0X83,	-1);
	add_enum_member(id,"WM_NCHITTEST",	0X84,	-1);
	add_enum_member(id,"WM_NCPAINT",	0X85,	-1);
	add_enum_member(id,"WM_NCACTIVATE",	0X86,	-1);
	add_enum_member(id,"WM_GETDLGCODE",	0X87,	-1);
	add_enum_member(id,"WM_SYNCPAINT",	0X88,	-1);
	add_enum_member(id,"WM_NCMOUSEMOVE",	0XA0,	-1);
	add_enum_member(id,"WM_NCLBUTTONDOWN",	0XA1,	-1);
	add_enum_member(id,"WM_NCLBUTTONUP",	0XA2,	-1);
	add_enum_member(id,"WM_NCLBUTTONDBLCLK",	0XA3,	-1);
	add_enum_member(id,"WM_NCRBUTTONDOWN",	0XA4,	-1);
	add_enum_member(id,"WM_NCRBUTTONUP",	0XA5,	-1);
	add_enum_member(id,"WM_NCRBUTTONDBLCLK",	0XA6,	-1);
	add_enum_member(id,"WM_NCMBUTTONDOWN",	0XA7,	-1);
	add_enum_member(id,"WM_NCMBUTTONUP",	0XA8,	-1);
	add_enum_member(id,"WM_NCMBUTTONDBLCLK",	0XA9,	-1);
	add_enum_member(id,"WM_KEYFIRST",	0X100,	-1);
	add_enum_member(id,"WM_KEYDOWN",	0X100,	-1);
	add_enum_member(id,"WM_KEYUP",	0X101,	-1);
	add_enum_member(id,"WM_CHAR",	0X102,	-1);
	add_enum_member(id,"WM_DEADCHAR",	0X103,	-1);
	add_enum_member(id,"WM_SYSKEYDOWN",	0X104,	-1);
	add_enum_member(id,"WM_SYSKEYUP",	0X105,	-1);
	add_enum_member(id,"WM_SYSCHAR",	0X106,	-1);
	add_enum_member(id,"WM_SYSDEADCHAR",	0X107,	-1);
	add_enum_member(id,"WM_KEYLAST",	0X108,	-1);
	add_enum_member(id,"WM_IME_STARTCOMPOSITION",	0X10D,	-1);
	add_enum_member(id,"WM_IME_ENDCOMPOSITION",	0X10E,	-1);
	add_enum_member(id,"WM_IME_COMPOSITION",	0X10F,	-1);
	add_enum_member(id,"WM_IME_KEYLAST",	0X10F,	-1);
	add_enum_member(id,"WM_INITDIALOG",	0X110,	-1);
	add_enum_member(id,"WM_COMMAND",	0X111,	-1);
	add_enum_member(id,"WM_SYSCOMMAND",	0X112,	-1);
	add_enum_member(id,"WM_TIMER",	0X113,	-1);
	add_enum_member(id,"WM_HSCROLL",	0X114,	-1);
	add_enum_member(id,"WM_VSCROLL",	0X115,	-1);
	add_enum_member(id,"WM_INITMENU",	0X116,	-1);
	add_enum_member(id,"WM_INITMENUPOPUP",	0X117,	-1);
	add_enum_member(id,"WM_MENUSELECT",	0X11F,	-1);
	add_enum_member(id,"WM_MENUCHAR",	0X120,	-1);
	add_enum_member(id,"WM_ENTERIDLE",	0X121,	-1);
	add_enum_member(id,"WM_MENURBUTTONUP",	0X122,	-1);
	add_enum_member(id,"WM_MENUDRAG",	0X123,	-1);
	add_enum_member(id,"WM_MENUGETOBJECT",	0X124,	-1);
	add_enum_member(id,"WM_UNINITMENUPOPUP",	0X125,	-1);
	add_enum_member(id,"WM_MENUCOMMAND",	0X126,	-1);
	add_enum_member(id,"WM_CTLCOLORMSGBOX",	0X132,	-1);
	add_enum_member(id,"WM_CTLCOLOREDIT",	0X133,	-1);
	add_enum_member(id,"WM_CTLCOLORLISTBOX",	0X134,	-1);
	add_enum_member(id,"WM_CTLCOLORBTN",	0X135,	-1);
	add_enum_member(id,"WM_CTLCOLORDLG",	0X136,	-1);
	add_enum_member(id,"WM_CTLCOLORSCROLLBAR",	0X137,	-1);
	add_enum_member(id,"WM_CTLCOLORSTATIC",	0X138,	-1);
	add_enum_member(id,"WM_MOUSEFIRST",	0X200,	-1);
	add_enum_member(id,"WM_MOUSEMOVE",	0X200,	-1);
	add_enum_member(id,"WM_LBUTTONDOWN",	0X201,	-1);
	add_enum_member(id,"WM_LBUTTONUP",	0X202,	-1);
	add_enum_member(id,"WM_LBUTTONDBLCLK",	0X203,	-1);
	add_enum_member(id,"WM_RBUTTONDOWN",	0X204,	-1);
	add_enum_member(id,"WM_RBUTTONUP",	0X205,	-1);
	add_enum_member(id,"WM_RBUTTONDBLCLK",	0X206,	-1);
	add_enum_member(id,"WM_MBUTTONDOWN",	0X207,	-1);
	add_enum_member(id,"WM_MBUTTONUP",	0X208,	-1);
	add_enum_member(id,"WM_MBUTTONDBLCLK",	0X209,	-1);
	add_enum_member(id,"WM_MOUSEWHEEL",	0X20A,	-1);
	add_enum_member(id,"WM_MOUSELAST",	0X20A,	-1);
	add_enum_member(id,"WM_PARENTNOTIFY",	0X210,	-1);
	add_enum_member(id,"WM_ENTERMENULOOP",	0X211,	-1);
	add_enum_member(id,"WM_EXITMENULOOP",	0X212,	-1);
	add_enum_member(id,"WM_NEXTMENU",	0X213,	-1);
	add_enum_member(id,"WM_SIZING",	0X214,	-1);
	add_enum_member(id,"WM_CAPTURECHANGED",	0X215,	-1);
	add_enum_member(id,"WM_MOVING",	0X216,	-1);
	add_enum_member(id,"WM_POWERBROADCAST",	0X218,	-1);
	add_enum_member(id,"WM_DEVICECHANGE",	0X219,	-1);
	add_enum_member(id,"WM_MDICREATE",	0X220,	-1);
	add_enum_member(id,"WM_MDIDESTROY",	0X221,	-1);
	add_enum_member(id,"WM_MDIACTIVATE",	0X222,	-1);
	add_enum_member(id,"WM_MDIRESTORE",	0X223,	-1);
	add_enum_member(id,"WM_MDINEXT",	0X224,	-1);
	add_enum_member(id,"WM_MDIMAXIMIZE",	0X225,	-1);
	add_enum_member(id,"WM_MDITILE",	0X226,	-1);
	add_enum_member(id,"WM_MDICASCADE",	0X227,	-1);
	add_enum_member(id,"WM_MDIICONARRANGE",	0X228,	-1);
	add_enum_member(id,"WM_MDIGETACTIVE",	0X229,	-1);
	add_enum_member(id,"WM_MDISETMENU",	0X230,	-1);
	add_enum_member(id,"WM_ENTERSIZEMOVE",	0X231,	-1);
	add_enum_member(id,"WM_EXITSIZEMOVE",	0X232,	-1);
	add_enum_member(id,"WM_DROPFILES",	0X233,	-1);
	add_enum_member(id,"WM_MDIREFRESHMENU",	0X234,	-1);
	add_enum_member(id,"WM_IME_SETCONTEXT",	0X281,	-1);
	add_enum_member(id,"WM_IME_NOTIFY",	0X282,	-1);
	add_enum_member(id,"WM_IME_CONTROL",	0X283,	-1);
	add_enum_member(id,"WM_IME_COMPOSITIONFULL",	0X284,	-1);
	add_enum_member(id,"WM_IME_SELECT",	0X285,	-1);
	add_enum_member(id,"WM_IME_CHAR",	0X286,	-1);
	add_enum_member(id,"WM_IME_REQUEST",	0X288,	-1);
	add_enum_member(id,"WM_IME_KEYDOWN",	0X290,	-1);
	add_enum_member(id,"WM_IME_KEYUP",	0X291,	-1);
	add_enum_member(id,"WM_MOUSEHOVER",	0X2A1,	-1);
	add_enum_member(id,"WM_MOUSELEAVE",	0X2A3,	-1);
	add_enum_member(id,"WM_CUT",	0X300,	-1);
	add_enum_member(id,"WM_COPY",	0X301,	-1);
	add_enum_member(id,"WM_PASTE",	0X302,	-1);
	add_enum_member(id,"WM_CLEAR",	0X303,	-1);
	add_enum_member(id,"WM_UNDO",	0X304,	-1);
	add_enum_member(id,"WM_RENDERFORMAT",	0X305,	-1);
	add_enum_member(id,"WM_RENDERALLFORMATS",	0X306,	-1);
	add_enum_member(id,"WM_DESTROYCLIPBOARD",	0X307,	-1);
	add_enum_member(id,"WM_DRAWCLIPBOARD",	0X308,	-1);
	add_enum_member(id,"WM_PAINTCLIPBOARD",	0X309,	-1);
	add_enum_member(id,"WM_VSCROLLCLIPBOARD",	0X30A,	-1);
	add_enum_member(id,"WM_SIZECLIPBOARD",	0X30B,	-1);
	add_enum_member(id,"WM_ASKCBFORMATNAME",	0X30C,	-1);
	add_enum_member(id,"WM_CHANGECBCHAIN",	0X30D,	-1);
	add_enum_member(id,"WM_HSCROLLCLIPBOARD",	0X30E,	-1);
	add_enum_member(id,"WM_QUERYNEWPALETTE",	0X30F,	-1);
	add_enum_member(id,"WM_PALETTEISCHANGING",	0X310,	-1);
	add_enum_member(id,"WM_PALETTECHANGED",	0X311,	-1);
	add_enum_member(id,"WM_HOTKEY",	0X312,	-1);
	add_enum_member(id,"WM_PRINT",	0X317,	-1);
	add_enum_member(id,"WM_PRINTCLIENT",	0X318,	-1);
	add_enum_member(id,"WM_HANDHELDFIRST",	0X358,	-1);
	add_enum_member(id,"WM_HANDHELDLAST",	0X35F,	-1);
	add_enum_member(id,"WM_AFXFIRST",	0X360,	-1);
	add_enum_member(id,"WM_AFXLAST",	0X37F,	-1);
	add_enum_member(id,"WM_PENWINFIRST",	0X380,	-1);
	add_enum_member(id,"WM_PENWINLAST",	0X38F,	-1);
	add_enum_member(id,"WM_USER",	0X400,	-1);
	add_enum_member(id,"WM_APP",	0X8000,	-1);
	id = add_enum(-1,"DINPUT_GUIDS",0x1100000);
	add_enum_member(id,"GUID_SysMouse",	0X6F1D2B60,	-1);
	add_enum_member(id,"GUID_SysKeyboard",	0X6F1D2B61,	-1);
	add_enum_member(id,"GUID_Joystick",	0X6F1D2B70,	-1);
	id = add_enum(-1,"MACRO_SC",0x1100000);
	add_enum_member(id,"SC_SIZE",	0XF000,	-1);
	add_enum_member(id,"SC_MOVE",	0XF010,	-1);
	add_enum_member(id,"SC_MINIMIZE",	0XF020,	-1);
	add_enum_member(id,"SC_MAXIMIZE",	0XF030,	-1);
	add_enum_member(id,"SC_NEXTWINDOW",	0XF040,	-1);
	add_enum_member(id,"SC_PREVWINDOW",	0XF050,	-1);
	add_enum_member(id,"SC_CLOSE",	0XF060,	-1);
	add_enum_member(id,"SC_VSCROLL",	0XF070,	-1);
	add_enum_member(id,"SC_HSCROLL",	0XF080,	-1);
	add_enum_member(id,"SC_MOUSEMENU",	0XF090,	-1);
	add_enum_member(id,"SC_KEYMENU",	0XF100,	-1);
	add_enum_member(id,"SC_ARRANGE",	0XF110,	-1);
	add_enum_member(id,"SC_RESTORE",	0XF120,	-1);
	add_enum_member(id,"SC_TASKLIST",	0XF130,	-1);
	add_enum_member(id,"SC_SCREENSAVE",	0XF140,	-1);
	add_enum_member(id,"SC_HOTKEY",	0XF150,	-1);
	add_enum_member(id,"SC_DEFAULT",	0XF160,	-1);
	add_enum_member(id,"SC_MONITORPOWER",	0XF170,	-1);
	add_enum_member(id,"SC_CONTEXTHELP",	0XF180,	-1);
	id = add_enum(-1,"D3DDEVTYPE",0x1100000);
	add_enum_member(id,"D3DDEVTYPE_HAL",	0X1,	-1);
	add_enum_member(id,"D3DDEVTYPE_REF",	0X2,	-1);
	add_enum_member(id,"D3DDEVTYPE_SW",	0X3,	-1);
	add_enum_member(id,"D3DDEVTYPE_NULLREF",	0X4,	-1);
	add_enum_member(id,"D3DDEVTYPE_FORCE_DWORD",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"D3DCAPS3",0x1100000);
	add_enum_member(id,"D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD",	0X20,	-1);
	add_enum_member(id,"D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION",	0X80,	-1);
	add_enum_member(id,"D3DCAPS3_COPY_TO_VIDMEM",	0X100,	-1);
	add_enum_member(id,"D3DCAPS3_COPY_TO_SYSTEMMEM",	0X200,	-1);
	add_enum_member(id,"D3DCAPS3_DXVAHD",	0X400,	-1);
	add_enum_member(id,"D3DCAPS3_RESERVED",	0X80000001,	-1);
	id = add_enum(-1,"_D3DFORMAT",0x2200000);
	set_enum_cmt(id,"for more see {https://msdn.microsoft.com/en-us/library/windows/desktop/bb172558(v=vs.85).aspx} ||| a",0);
	add_enum_member(id,"D3DFMT_UNKNOWN",	0,	-1);
	add_enum_member(id,"D3DFMT_R8G8B8",	0X14,	-1);
	add_enum_member(id,"D3DFMT_A8R8G8B8",	0X15,	-1);
	add_enum_member(id,"D3DFMT_X8R8G8B8",	0X16,	-1);
	id = add_enum(-1,"D3DMULTISAMPLE_TYPE",0x1100000);
	add_enum_member(id,"D3DMULTISAMPLE_NONE",	0,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_NONMASKABLE",	0X1,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_2_SAMPLES",	0X2,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_3_SAMPLES",	0X3,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_4_SAMPLES",	0X4,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_5_SAMPLES",	0X5,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_6_SAMPLES",	0X6,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_7_SAMPLES",	0X7,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_8_SAMPLES",	0X8,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_9_SAMPLES",	0X9,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_10_SAMPLES",	0XA,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_11_SAMPLES",	0XB,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_12_SAMPLES",	0XC,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_13_SAMPLES",	0XD,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_14_SAMPLES",	0XE,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_15_SAMPLES",	0XF,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_16_SAMPLES",	0X10,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_FORCE_DWORD",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"D3DSWAPEFFECT",0x1100000);
	add_enum_member(id,"D3DSWAPEFFECT_DISCARD",	0X1,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_FLIP",	0X2,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_COPY",	0X3,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_OVERLAY",	0X4,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_FLIPEX",	0X5,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_FORCE_DWORD",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"D3DERR",0x1100000);
	add_enum_member(id,"D3DERR_OK",	0,	-1);
	add_enum_member(id,"D3DERR_NOAUTOGEN",	0X8760870,	-1);
	add_enum_member(id,"D3DERR_OUTOFMEMORY",	0X8007000E,	-1);
	add_enum_member(id,"D3DERR_OUTOFVIDEOMEMORY",	0X8876017C,	-1);
	add_enum_member(id,"D3DERR_WRONGTEXTUREFORMAT",	0X88760818,	-1);
	add_enum_member(id,"D3DERR_UNSUPPORTEDCOLOROPERATION",	0X88760819,	-1);
	add_enum_member(id,"D3DERR_UNSUPPORTEDCOLORARG",	0X8876081A,	-1);
	add_enum_member(id,"D3DERR_UNSUPPORTEDALPHAOPERATION",	0X8876081B,	-1);
	add_enum_member(id,"D3DERR_UNSUPPORTEDALPHAARG",	0X8876081C,	-1);
	add_enum_member(id,"D3DERR_TOOMANYOPERATIONS",	0X8876081D,	-1);
	add_enum_member(id,"D3DERR_CONFLICTINGTEXTUREFILTER",	0X8876081E,	-1);
	add_enum_member(id,"D3DERR_UNSUPPORTEDFACTORVALUE",	0X8876081F,	-1);
	add_enum_member(id,"D3DERR_CONFLICTINGRENDERSTATE",	0X88760821,	-1);
	add_enum_member(id,"D3DERR_UNSUPPORTEDTEXTUREFILTER",	0X88760822,	-1);
	add_enum_member(id,"D3DERR_CONFLICTINGTEXTUREPALETTE",	0X88760826,	-1);
	add_enum_member(id,"D3DERR_DRIVERINTERNALERROR",	0X88760827,	-1);
	add_enum_member(id,"D3DERR_NOTFOUND",	0X88760866,	-1);
	add_enum_member(id,"D3DERR_MOREDATA",	0X88760867,	-1);
	add_enum_member(id,"D3DERR_DEVICELOST",	0X88760868,	-1);
	add_enum_member(id,"D3DERR_DEVICENORESET",	0X88760869,	-1);
	add_enum_member(id,"D3DERR_NOTAVAILABLE",	0X8876086A,	-1);
	add_enum_member(id,"D3DERR_INVALIDDEVICE",	0X8876086B,	-1);
	add_enum_member(id,"D3DERR_INVALIDCALL",	0X8876086C,	-1);
	add_enum_member(id,"D3DERR_DRIVERINVALIDCALL",	0X8876086D,	-1);
	id = add_enum(-1,"D3DCLEAR",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"D3DCLEAR_TARGET",	0X1,	0x1);
	add_enum_member(id,"D3DCLEAR_ZBUFFER",	0X2,	0x2);
	add_enum_member(id,"D3DCLEAR_STENCIL",	0X4,	0x4);
	id = add_enum(-1,"D3DCREATE",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"D3DCREATE_FPU_PRESERVE",	0X2,	0x2);
	add_enum_member(id,"D3DCREATE_MULTITHREADED",	0X4,	0x4);
	add_enum_member(id,"D3DCREATE_PUREDEVICE",	0X10,	0x10);
	add_enum_member(id,"D3DCREATE_SOFTWARE_VERTEXPROCESSING",	0X20,	0x20);
	add_enum_member(id,"D3DCREATE_HARDWARE_VERTEXPROCESSING",	0X40,	0x40);
	add_enum_member(id,"D3DCREATE_MIXED_VERTEXPROCESSING",	0X80,	0x80);
	add_enum_member(id,"D3DCREATE_DISABLE_DRIVER_MANAGEMENT",	0X100,	0x100);
	add_enum_member(id,"D3DCREATE_ADAPTERGROUP_DEVICE",	0X200,	0x200);
	add_enum_member(id,"D3DCREATE_DISABLE_DRIVER_MANAGEMENT_EX",	0X400,	0x400);
	add_enum_member(id,"D3DCREATE_NOWINDOWCHANGES",	0X800,	0x800);
	id = add_enum(-1,"D3DDECLTYPE",0x2200000);
	add_enum_member(id,"D3DDECLTYPE_FLOAT1",	0,	-1);
	add_enum_member(id,"D3DDECLTYPE_FLOAT2",	0X1,	-1);
	add_enum_member(id,"D3DDECLTYPE_FLOAT3",	0X2,	-1);
	add_enum_member(id,"D3DDECLTYPE_FLOAT4",	0X3,	-1);
	add_enum_member(id,"D3DDECLTYPE_D3DCOLOR",	0X4,	-1);
	add_enum_member(id,"D3DDECLTYPE_UBYTE4",	0X5,	-1);
	add_enum_member(id,"D3DDECLTYPE_SHORT2",	0X6,	-1);
	add_enum_member(id,"D3DDECLTYPE_SHORT4",	0X7,	-1);
	add_enum_member(id,"D3DDECLTYPE_UBYTE4N",	0X8,	-1);
	set_enum_member_cmt(get_enum_member(id,0X8,0,-1),"from here only for vshaders >= 2.0",0);
	add_enum_member(id,"D3DDECLTYPE_SHORT2N",	0X9,	-1);
	add_enum_member(id,"D3DDECLTYPE_SHORT4N",	0XA,	-1);
	add_enum_member(id,"D3DDECLTYPE_USHORT2N",	0XB,	-1);
	add_enum_member(id,"D3DDECLTYPE_USHORT4N",	0XC,	-1);
	add_enum_member(id,"D3DDECLTYPE_UDEC3",	0XD,	-1);
	add_enum_member(id,"D3DDECLTYPE_DEC3N",	0XE,	-1);
	add_enum_member(id,"D3DDECLTYPE_FLOAT16_2",	0XF,	-1);
	add_enum_member(id,"D3DDECLTYPE_FLOAT16_4",	0X10,	-1);
	add_enum_member(id,"D3DDECLTYPE_UNUSED",	0X11,	-1);
	set_enum_member_cmt(get_enum_member(id,0X11,0,-1),"used in D3DDEC_END macro",0);
	id = add_enum(-1,"D3DDECLUSAGE",0x2200000);
	add_enum_member(id,"D3DDECLUSAGE_POSITION",	0,	-1);
	add_enum_member(id,"D3DDECLUSAGE_BLENDWEIGHT",	0X1,	-1);
	add_enum_member(id,"D3DDECLUSAGE_BLENDINDICES",	0X2,	-1);
	add_enum_member(id,"D3DDECLUSAGE_NORMAL",	0X3,	-1);
	add_enum_member(id,"D3DDECLUSAGE_PSIZE",	0X4,	-1);
	add_enum_member(id,"D3DDECLUSAGE_TEXCOORD",	0X5,	-1);
	add_enum_member(id,"D3DDECLUSAGE_RANGENT",	0X6,	-1);
	add_enum_member(id,"D3DDECLUSAGE_BINORMAL",	0X7,	-1);
	add_enum_member(id,"D3DDECLUSAGE_TESSFACTOR",	0X8,	-1);
	add_enum_member(id,"D3DDECLUSAGE_POSITIONT",	0X9,	-1);
	add_enum_member(id,"D3DDECLUSAGE_COLOR",	0XA,	-1);
	add_enum_member(id,"D3DDECLUSAGE_FOG",	0XB,	-1);
	add_enum_member(id,"D3DDECLUSAGE_DEPTH",	0XC,	-1);
	add_enum_member(id,"D3DDECLUSAGE_SAMPLE",	0XD,	-1);
	id = add_enum(-1,"D3DPTFILTERCAPS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"D3DPTFILTERCAPS_MINFPOINT",	0X100,	0x100);
	add_enum_member(id,"D3DPTFILTERCAPS_MINFLINEAR",	0X200,	0x200);
	add_enum_member(id,"D3DPTFILTERCAPS_MINFANISOTROPIC",	0X400,	0x400);
	add_enum_member(id,"D3DPTFILTERCAPS_MINFPYRAMIDALQUAD",	0X800,	0x800);
	add_enum_member(id,"D3DPTFILTERCAPS_MINFGAUSSIANQUAD",	0X1000,	0x1000);
	add_enum_member(id,"D3DPTFILTERCAPS_MIPFPOINT",	0X10000,	0x10000);
	add_enum_member(id,"D3DPTFILTERCAPS_MIPFLINEAR",	0X20000,	0x20000);
	add_enum_member(id,"D3DPTFILTERCAPS_CONVOLUTIONMONO",	0X40000,	0x40000);
	set_enum_member_cmt(get_enum_member(id,0X40000,0,0x40000),"D3D9Ex only",0);
	add_enum_member(id,"D3DPTFILTERCAPS_MAGFPOINT",	0X1000000,	0x1000000);
	add_enum_member(id,"D3DPTFILTERCAPS_MAGFLINEAR",	0X2000000,	0x2000000);
	add_enum_member(id,"D3DPTFILTERCAPS_MAGFANISOTROPIC",	0X4000000,	0x4000000);
	add_enum_member(id,"D3DPTFILTERCAPS_MAGFPYRAMIDALQUAD",	0X8000000,	0x8000000);
	add_enum_member(id,"D3DPTFILTERCAPS_MAGFGAUSSIANQUAD",	0X10000000,	0x10000000);
	id = add_enum(-1,"MACRO_HKEY",0x1100000);
	add_enum_member(id,"HKEY_CLASSES_ROOT",	0X80000000,	-1);
	add_enum_member(id,"HKEY_CURRENT_USER",	0X80000001,	-1);
	add_enum_member(id,"HKEY_LOCAL_MACHINE",	0X80000002,	-1);
	add_enum_member(id,"HKEY_USERS",	0X80000003,	-1);
	add_enum_member(id,"HKEY_PERFORMANCE_DATA",	0X80000004,	-1);
	add_enum_member(id,"HKEY_CURRENT_CONFIG",	0X80000005,	-1);
	add_enum_member(id,"HKEY_DYN_DATA",	0X80000006,	-1);
	id = add_enum(-1,"MACRO_KEY",0x1100000);
	add_enum_member(id,"KEY_QUERY_VALUE",	0X1,	-1);
	add_enum_member(id,"KEY_SET_VALUE",	0X2,	-1);
	add_enum_member(id,"KEY_CREATE_SUB_KEY",	0X4,	-1);
	add_enum_member(id,"KEY_ENUMERATE_SUB_KEYS",	0X8,	-1);
	add_enum_member(id,"KEY_NOTIFY",	0X10,	-1);
	add_enum_member(id,"KEY_CREATE_LINK",	0X20,	-1);
	add_enum_member(id,"KEY_READ",	0X20019,	-1);
	id = add_enum(-1,"MACRO_SW",0x2220000);
	add_enum_member(id,"SW_HIDE",	0,	-1);
	add_enum_member(id,"SW_SHOWNORMAL",	0X1,	-1);
	id = add_enum(-1,"MACRO_GWL",0x2220000);
	add_enum_member(id,"GWL_USERDATA",	0XFFFFFFEB,	-1);
	add_enum_member(id,"GWL_EXSTYLE",	0XFFFFFFEC,	-1);
	add_enum_member(id,"GWL_STYLE",	0XFFFFFFF0,	-1);
	add_enum_member(id,"GWL_ID",	0XFFFFFFF4,	-1);
	add_enum_member(id,"GWL_HWNDPARENT",	0XFFFFFFF8,	-1);
	add_enum_member(id,"GWL_HINSTANCE",	0XFFFFFFFA,	-1);
	add_enum_member(id,"GWL_WNDPROC",	0XFFFFFFFC,	-1);
	id = add_enum(-1,"MACRO_WS_CHILD",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"WS_CAPTION",	0XC00000,	0xC00000);
	add_enum_member(id,"WS_MAXIMIZE",	0X1000000,	0x1000000);
	add_enum_member(id,"WS_CLIPCHILDREN",	0X2000000,	0x2000000);
	add_enum_member(id,"WS_CLIPSIBLINGS",	0X4000000,	0x4000000);
	add_enum_member(id,"WS_DISABLED",	0X8000000,	0x8000000);
	add_enum_member(id,"WS_VISIBLE",	0X10000000,	0x10000000);
	add_enum_member(id,"WS_MINIMIZE",	0X20000000,	0x20000000);
	add_enum_member(id,"WS_CHILD",	0X40000000,	0x40000000);
	id = add_enum(-1,"MACRO_VK",0x1100000);
	add_enum_member(id,"VK_LBUTTON",	0X1,	-1);
	add_enum_member(id,"VK_RBUTTON",	0X2,	-1);
	add_enum_member(id,"VK_CANCEL",	0X3,	-1);
	add_enum_member(id,"VK_MBUTTON",	0X4,	-1);
	add_enum_member(id,"VK_XBUTTON1",	0X5,	-1);
	add_enum_member(id,"VK_XBUTTON2",	0X6,	-1);
	add_enum_member(id,"VK_BACK",	0X8,	-1);
	add_enum_member(id,"VK_TAB",	0X9,	-1);
	add_enum_member(id,"VK_CLEAR",	0XC,	-1);
	add_enum_member(id,"VK_RETURN",	0XD,	-1);
	add_enum_member(id,"VK_SHIFT",	0X10,	-1);
	add_enum_member(id,"VK_CONTROL",	0X11,	-1);
	add_enum_member(id,"VK_MENU",	0X12,	-1);
	add_enum_member(id,"VK_PAUSE",	0X13,	-1);
	add_enum_member(id,"VK_CAPITAL",	0X14,	-1);
	add_enum_member(id,"VK_KANA",	0X15,	-1);
	add_enum_member(id,"VK_HANGEUL",	0X15,	-1);
	add_enum_member(id,"VK_HANGUL",	0X15,	-1);
	add_enum_member(id,"VK_JUNJA",	0X17,	-1);
	add_enum_member(id,"VK_FINAL",	0X18,	-1);
	add_enum_member(id,"VK_HANJA",	0X19,	-1);
	add_enum_member(id,"VK_KANJI",	0X19,	-1);
	add_enum_member(id,"VK_ESCAPE",	0X1B,	-1);
	add_enum_member(id,"VK_CONVERT",	0X1C,	-1);
	add_enum_member(id,"VK_NONCONVERT",	0X1D,	-1);
	add_enum_member(id,"VK_ACCEPT",	0X1E,	-1);
	add_enum_member(id,"VK_MODECHANGE",	0X1F,	-1);
	add_enum_member(id,"VK_SPACE",	0X20,	-1);
	add_enum_member(id,"VK_PRIOR",	0X21,	-1);
	add_enum_member(id,"VK_NEXT",	0X22,	-1);
	add_enum_member(id,"VK_END",	0X23,	-1);
	add_enum_member(id,"VK_HOME",	0X24,	-1);
	add_enum_member(id,"VK_LEFT",	0X25,	-1);
	add_enum_member(id,"VK_UP",	0X26,	-1);
	add_enum_member(id,"VK_RIGHT",	0X27,	-1);
	add_enum_member(id,"VK_DOWN",	0X28,	-1);
	add_enum_member(id,"VK_SELECT",	0X29,	-1);
	add_enum_member(id,"VK_PRINT",	0X2A,	-1);
	add_enum_member(id,"VK_EXECUTE",	0X2B,	-1);
	add_enum_member(id,"VK_SNAPSHOT",	0X2C,	-1);
	add_enum_member(id,"VK_INSERT",	0X2D,	-1);
	add_enum_member(id,"VK_DELETE",	0X2E,	-1);
	add_enum_member(id,"VK_HELP",	0X2F,	-1);
	add_enum_member(id,"VK_LWIN",	0X5B,	-1);
	add_enum_member(id,"VK_RWIN",	0X5C,	-1);
	add_enum_member(id,"VK_APPS",	0X5D,	-1);
	add_enum_member(id,"VK_SLEEP",	0X5F,	-1);
	add_enum_member(id,"VK_NUMPAD0",	0X60,	-1);
	add_enum_member(id,"VK_NUMPAD1",	0X61,	-1);
	add_enum_member(id,"VK_NUMPAD2",	0X62,	-1);
	add_enum_member(id,"VK_NUMPAD3",	0X63,	-1);
	add_enum_member(id,"VK_NUMPAD4",	0X64,	-1);
	add_enum_member(id,"VK_NUMPAD5",	0X65,	-1);
	add_enum_member(id,"VK_NUMPAD6",	0X66,	-1);
	add_enum_member(id,"VK_NUMPAD7",	0X67,	-1);
	add_enum_member(id,"VK_NUMPAD8",	0X68,	-1);
	add_enum_member(id,"VK_NUMPAD9",	0X69,	-1);
	add_enum_member(id,"VK_MULTIPLY",	0X6A,	-1);
	add_enum_member(id,"VK_ADD",	0X6B,	-1);
	add_enum_member(id,"VK_SEPARATOR",	0X6C,	-1);
	add_enum_member(id,"VK_SUBTRACT",	0X6D,	-1);
	add_enum_member(id,"VK_DECIMAL",	0X6E,	-1);
	add_enum_member(id,"VK_DIVIDE",	0X6F,	-1);
	add_enum_member(id,"VK_F1",	0X70,	-1);
	add_enum_member(id,"VK_F2",	0X71,	-1);
	add_enum_member(id,"VK_F3",	0X72,	-1);
	add_enum_member(id,"VK_F4",	0X73,	-1);
	add_enum_member(id,"VK_F5",	0X74,	-1);
	add_enum_member(id,"VK_F6",	0X75,	-1);
	add_enum_member(id,"VK_F7",	0X76,	-1);
	add_enum_member(id,"VK_F8",	0X77,	-1);
	add_enum_member(id,"VK_F9",	0X78,	-1);
	add_enum_member(id,"VK_F10",	0X79,	-1);
	add_enum_member(id,"VK_F11",	0X7A,	-1);
	add_enum_member(id,"VK_F12",	0X7B,	-1);
	add_enum_member(id,"VK_F13",	0X7C,	-1);
	add_enum_member(id,"VK_F14",	0X7D,	-1);
	add_enum_member(id,"VK_F15",	0X7E,	-1);
	add_enum_member(id,"VK_F16",	0X7F,	-1);
	add_enum_member(id,"VK_F17",	0X80,	-1);
	add_enum_member(id,"VK_F18",	0X81,	-1);
	add_enum_member(id,"VK_F19",	0X82,	-1);
	add_enum_member(id,"VK_F20",	0X83,	-1);
	add_enum_member(id,"VK_F21",	0X84,	-1);
	add_enum_member(id,"VK_F22",	0X85,	-1);
	add_enum_member(id,"VK_F23",	0X86,	-1);
	add_enum_member(id,"VK_F24",	0X87,	-1);
	add_enum_member(id,"VK_NUMLOCK",	0X90,	-1);
	add_enum_member(id,"VK_SCROLL",	0X91,	-1);
	add_enum_member(id,"VK_OEM_NEC_EQUAL",	0X92,	-1);
	add_enum_member(id,"VK_OEM_FJ_JISHO",	0X92,	-1);
	add_enum_member(id,"VK_OEM_FJ_MASSHOU",	0X93,	-1);
	add_enum_member(id,"VK_OEM_FJ_TOUROKU",	0X94,	-1);
	add_enum_member(id,"VK_OEM_FJ_LOYA",	0X95,	-1);
	add_enum_member(id,"VK_OEM_FJ_ROYA",	0X96,	-1);
	add_enum_member(id,"VK_LSHIFT",	0XA0,	-1);
	add_enum_member(id,"VK_RSHIFT",	0XA1,	-1);
	add_enum_member(id,"VK_LCONTROL",	0XA2,	-1);
	add_enum_member(id,"VK_RCONTROL",	0XA3,	-1);
	add_enum_member(id,"VK_LMENU",	0XA4,	-1);
	add_enum_member(id,"VK_RMENU",	0XA5,	-1);
	add_enum_member(id,"VK_BROWSER_BACK",	0XA6,	-1);
	add_enum_member(id,"VK_BROWSER_FORWARD",	0XA7,	-1);
	add_enum_member(id,"VK_BROWSER_REFRESH",	0XA8,	-1);
	add_enum_member(id,"VK_BROWSER_STOP",	0XA9,	-1);
	add_enum_member(id,"VK_BROWSER_SEARCH",	0XAA,	-1);
	add_enum_member(id,"VK_BROWSER_FAVORITES",	0XAB,	-1);
	add_enum_member(id,"VK_BROWSER_HOME",	0XAC,	-1);
	add_enum_member(id,"VK_VOLUME_MUTE",	0XAD,	-1);
	add_enum_member(id,"VK_VOLUME_DOWN",	0XAE,	-1);
	add_enum_member(id,"VK_VOLUME_UP",	0XAF,	-1);
	add_enum_member(id,"VK_MEDIA_NEXT_TRACK",	0XB0,	-1);
	add_enum_member(id,"VK_MEDIA_PREV_TRACK",	0XB1,	-1);
	add_enum_member(id,"VK_MEDIA_STOP",	0XB2,	-1);
	add_enum_member(id,"VK_MEDIA_PLAY_PAUSE",	0XB3,	-1);
	add_enum_member(id,"VK_LAUNCH_MAIL",	0XB4,	-1);
	add_enum_member(id,"VK_LAUNCH_MEDIA_SELECT",	0XB5,	-1);
	add_enum_member(id,"VK_LAUNCH_APP1",	0XB6,	-1);
	add_enum_member(id,"VK_LAUNCH_APP2",	0XB7,	-1);
	add_enum_member(id,"VK_OEM_1",	0XBA,	-1);
	add_enum_member(id,"VK_OEM_PLUS",	0XBB,	-1);
	add_enum_member(id,"VK_OEM_COMMA",	0XBC,	-1);
	add_enum_member(id,"VK_OEM_MINUS",	0XBD,	-1);
	add_enum_member(id,"VK_OEM_PERIOD",	0XBE,	-1);
	add_enum_member(id,"VK_OEM_2",	0XBF,	-1);
	add_enum_member(id,"VK_OEM_3",	0XC0,	-1);
	add_enum_member(id,"VK_OEM_4",	0XDB,	-1);
	add_enum_member(id,"VK_OEM_5",	0XDC,	-1);
	add_enum_member(id,"VK_OEM_6",	0XDD,	-1);
	add_enum_member(id,"VK_OEM_7",	0XDE,	-1);
	add_enum_member(id,"VK_OEM_8",	0XDF,	-1);
	add_enum_member(id,"VK_OEM_AX",	0XE1,	-1);
	add_enum_member(id,"VK_OEM_102",	0XE2,	-1);
	add_enum_member(id,"VK_ICO_HELP",	0XE3,	-1);
	add_enum_member(id,"VK_ICO_00",	0XE4,	-1);
	add_enum_member(id,"VK_PROCESSKEY",	0XE5,	-1);
	add_enum_member(id,"VK_ICO_CLEAR",	0XE6,	-1);
	add_enum_member(id,"VK_PACKET",	0XE7,	-1);
	add_enum_member(id,"VK_OEM_RESET",	0XE9,	-1);
	add_enum_member(id,"VK_OEM_JUMP",	0XEA,	-1);
	add_enum_member(id,"VK_OEM_PA1",	0XEB,	-1);
	add_enum_member(id,"VK_OEM_PA2",	0XEC,	-1);
	add_enum_member(id,"VK_OEM_PA3",	0XED,	-1);
	add_enum_member(id,"VK_OEM_WSCTRL",	0XEE,	-1);
	add_enum_member(id,"VK_OEM_CUSEL",	0XEF,	-1);
	add_enum_member(id,"VK_OEM_ATTN",	0XF0,	-1);
	add_enum_member(id,"VK_OEM_FINISH",	0XF1,	-1);
	add_enum_member(id,"VK_OEM_COPY",	0XF2,	-1);
	add_enum_member(id,"VK_OEM_AUTO",	0XF3,	-1);
	add_enum_member(id,"VK_OEM_ENLW",	0XF4,	-1);
	add_enum_member(id,"VK_OEM_BACKTAB",	0XF5,	-1);
	add_enum_member(id,"VK_ATTN",	0XF6,	-1);
	add_enum_member(id,"VK_CRSEL",	0XF7,	-1);
	add_enum_member(id,"VK_EXSEL",	0XF8,	-1);
	add_enum_member(id,"VK_EREOF",	0XF9,	-1);
	add_enum_member(id,"VK_PLAY",	0XFA,	-1);
	add_enum_member(id,"VK_ZOOM",	0XFB,	-1);
	add_enum_member(id,"VK_NONAME",	0XFC,	-1);
	add_enum_member(id,"VK_PA1",	0XFD,	-1);
	add_enum_member(id,"VK_OEM_CLEAR",	0XFE,	-1);
	id = add_enum(-1,"MACRO_REG",0x1100000);
	add_enum_member(id,"REG_OPTION_RESERVED",	0,	-1);
	add_enum_member(id,"REG_OPTION_NON_VOLATILE",	0,	-1);
	add_enum_member(id,"REG_NONE",	0,	-1);
	add_enum_member(id,"REG_OPTION_VOLATILE",	0X1,	-1);
	add_enum_member(id,"REG_CREATED_NEW_KEY",	0X1,	-1);
	add_enum_member(id,"REG_STANDARD_FORMAT",	0X1,	-1);
	add_enum_member(id,"REG_WHOLE_HIVE_VOLATILE",	0X1,	-1);
	add_enum_member(id,"REG_FORCE_UNLOAD",	0X1,	-1);
	add_enum_member(id,"REG_NOTIFY_CHANGE_NAME",	0X1,	-1);
	add_enum_member(id,"REG_SZ",	0X1,	-1);
	add_enum_member(id,"REG_OPTION_CREATE_LINK",	0X2,	-1);
	add_enum_member(id,"REG_OPENED_EXISTING_KEY",	0X2,	-1);
	add_enum_member(id,"REG_LATEST_FORMAT",	0X2,	-1);
	add_enum_member(id,"REG_REFRESH_HIVE",	0X2,	-1);
	add_enum_member(id,"REG_NOTIFY_CHANGE_ATTRIBUTES",	0X2,	-1);
	add_enum_member(id,"REG_EXPAND_SZ",	0X2,	-1);
	add_enum_member(id,"REG_BINARY",	0X3,	-1);
	add_enum_member(id,"REG_OPTION_BACKUP_RESTORE",	0X4,	-1);
	add_enum_member(id,"REG_NO_COMPRESSION",	0X4,	-1);
	add_enum_member(id,"REG_NO_LAZY_FLUSH",	0X4,	-1);
	add_enum_member(id,"REG_NOTIFY_CHANGE_LAST_SET",	0X4,	-1);
	add_enum_member(id,"REG_DWORD",	0X4,	-1);
	add_enum_member(id,"REG_DWORD_LITTLE_ENDIAN",	0X4,	-1);
	add_enum_member(id,"REG_DWORD_BIG_ENDIAN",	0X5,	-1);
	add_enum_member(id,"REG_LINK",	0X6,	-1);
	add_enum_member(id,"REG_MULTI_SZ",	0X7,	-1);
	add_enum_member(id,"REG_OPTION_OPEN_LINK",	0X8,	-1);
	add_enum_member(id,"REG_FORCE_RESTORE",	0X8,	-1);
	add_enum_member(id,"REG_NOTIFY_CHANGE_SECURITY",	0X8,	-1);
	add_enum_member(id,"REG_RESOURCE_LIST",	0X8,	-1);
	add_enum_member(id,"REG_FULL_RESOURCE_DESCRIPTOR",	0X9,	-1);
	add_enum_member(id,"REG_RESOURCE_REQUIREMENTS_LIST",	0XA,	-1);
	add_enum_member(id,"REG_QWORD",	0XB,	-1);
	add_enum_member(id,"REG_QWORD_LITTLE_ENDIAN",	0XB,	-1);
	add_enum_member(id,"REG_OPEN_LEGAL_OPTION",	0XC,	-1);
	add_enum_member(id,"REG_LEGAL_OPTION",	0XF,	-1);
	add_enum_member(id,"REG_LEGAL_CHANGE_FILTER",	0XF,	-1);
	add_enum_member(id,"REG_APP_HIVE",	0X10,	-1);
	add_enum_member(id,"REG_PROCESS_PRIVATE",	0X20,	-1);
	add_enum_member(id,"REG_START_JOURNAL",	0X40,	-1);
	add_enum_member(id,"REG_HIVE_EXACT_FILE_GROWTH",	0X80,	-1);
	add_enum_member(id,"REG_HIVE_NO_RM",	0X100,	-1);
	add_enum_member(id,"REG_HIVE_SINGLE_LOG",	0X200,	-1);
	add_enum_member(id,"REG_BOOT_HIVE",	0X400,	-1);
	id = add_enum(-1,"MACRO_INVALID_HANDLE_VALUE",0x2220000);
	set_enum_bf(id,1);
	id = add_enum(-1,"MACRO_SM",0x2220000);
	add_enum_member(id,"SM_CXSCREEN",	0,	-1);
	add_enum_member(id,"SM_CYSCREEN",	0X1,	-1);
	add_enum_member(id,"SM_CXVSCROLL",	0X2,	-1);
	add_enum_member(id,"SM_CYHSCROLL",	0X3,	-1);
	add_enum_member(id,"SM_CYCAPTION",	0X4,	-1);
	add_enum_member(id,"SM_CXBORDER",	0X5,	-1);
	add_enum_member(id,"SM_CYBORDER",	0X6,	-1);
	add_enum_member(id,"SM_CXDLGFRAME",	0X7,	-1);
	add_enum_member(id,"SM_CXFIXEDFRAME",	0X7,	-1);
	add_enum_member(id,"SM_CYDLGFRAME",	0X8,	-1);
	add_enum_member(id,"SM_CYFIXEDFRAME",	0X8,	-1);
	add_enum_member(id,"SM_CYVTHUMB",	0X9,	-1);
	add_enum_member(id,"SM_CXHTHUMB",	0XA,	-1);
	add_enum_member(id,"SM_CXICON",	0XB,	-1);
	add_enum_member(id,"SM_CYICON",	0XC,	-1);
	add_enum_member(id,"SM_CXCURSOR",	0XD,	-1);
	add_enum_member(id,"SM_CYCURSOR",	0XE,	-1);
	add_enum_member(id,"SM_CYMENU",	0XF,	-1);
	add_enum_member(id,"SM_CXFULLSCREEN",	0X10,	-1);
	add_enum_member(id,"SM_CYFULLSCREEN",	0X11,	-1);
	add_enum_member(id,"SM_CYKANJIWINDOW",	0X12,	-1);
	add_enum_member(id,"SM_MOUSEPRESENT",	0X13,	-1);
	add_enum_member(id,"SM_CYVSCROLL",	0X14,	-1);
	add_enum_member(id,"SM_CXHSCROLL",	0X15,	-1);
	add_enum_member(id,"SM_DEBUG",	0X16,	-1);
	add_enum_member(id,"SM_SWAPBUTTON",	0X17,	-1);
	add_enum_member(id,"SM_RESERVED1",	0X18,	-1);
	add_enum_member(id,"SM_RESERVED2",	0X19,	-1);
	add_enum_member(id,"SM_RESERVED3",	0X1A,	-1);
	add_enum_member(id,"SM_RESERVED4",	0X1B,	-1);
	add_enum_member(id,"SM_CXMIN",	0X1C,	-1);
	add_enum_member(id,"SM_CYMIN",	0X1D,	-1);
	add_enum_member(id,"SM_CXSIZE",	0X1E,	-1);
	add_enum_member(id,"SM_CYSIZE",	0X1F,	-1);
	add_enum_member(id,"SM_CXFRAME",	0X20,	-1);
	add_enum_member(id,"SM_CXSIZEFRAME",	0X20,	-1);
	add_enum_member(id,"SM_CYFRAME",	0X21,	-1);
	add_enum_member(id,"SM_CYSIZEFRAME",	0X21,	-1);
	add_enum_member(id,"SM_CXMINTRACK",	0X22,	-1);
	add_enum_member(id,"SM_CYMINTRACK",	0X23,	-1);
	add_enum_member(id,"SM_CXDOUBLECLK",	0X24,	-1);
	add_enum_member(id,"SM_CYDOUBLECLK",	0X25,	-1);
	add_enum_member(id,"SM_CXICONSPACING",	0X26,	-1);
	add_enum_member(id,"SM_CYICONSPACING",	0X27,	-1);
	add_enum_member(id,"SM_MENUDROPALIGNMENT",	0X28,	-1);
	add_enum_member(id,"SM_PENWINDOWS",	0X29,	-1);
	add_enum_member(id,"SM_DBCSENABLED",	0X2A,	-1);
	add_enum_member(id,"SM_CMOUSEBUTTONS",	0X2B,	-1);
	add_enum_member(id,"SM_SECURE",	0X2C,	-1);
	add_enum_member(id,"SM_CXEDGE",	0X2D,	-1);
	add_enum_member(id,"SM_CYEDGE",	0X2E,	-1);
	add_enum_member(id,"SM_CXMINSPACING",	0X2F,	-1);
	add_enum_member(id,"SM_CYMINSPACING",	0X30,	-1);
	add_enum_member(id,"SM_CXSMICON",	0X31,	-1);
	add_enum_member(id,"SM_CYSMICON",	0X32,	-1);
	add_enum_member(id,"SM_CYSMCAPTION",	0X33,	-1);
	add_enum_member(id,"SM_CXSMSIZE",	0X34,	-1);
	add_enum_member(id,"SM_CYSMSIZE",	0X35,	-1);
	add_enum_member(id,"SM_CXMENUSIZE",	0X36,	-1);
	add_enum_member(id,"SM_CYMENUSIZE",	0X37,	-1);
	add_enum_member(id,"SM_ARRANGE",	0X38,	-1);
	add_enum_member(id,"SM_CXMINIMIZED",	0X39,	-1);
	add_enum_member(id,"SM_CYMINIMIZED",	0X3A,	-1);
	add_enum_member(id,"SM_CXMAXTRACK",	0X3B,	-1);
	add_enum_member(id,"SM_CYMAXTRACK",	0X3C,	-1);
	add_enum_member(id,"SM_CXMAXIMIZED",	0X3D,	-1);
	add_enum_member(id,"SM_CYMAXIMIZED",	0X3E,	-1);
	add_enum_member(id,"SM_NETWORK",	0X3F,	-1);
	add_enum_member(id,"SM_CLEANBOOT",	0X43,	-1);
	add_enum_member(id,"SM_CXDRAG",	0X44,	-1);
	add_enum_member(id,"SM_CYDRAG",	0X45,	-1);
	add_enum_member(id,"SM_SHOWSOUNDS",	0X46,	-1);
	add_enum_member(id,"SM_CXMENUCHECK",	0X47,	-1);
	add_enum_member(id,"SM_CYMENUCHECK",	0X48,	-1);
	add_enum_member(id,"SM_SLOWMACHINE",	0X49,	-1);
	add_enum_member(id,"SM_MIDEASTENABLED",	0X4A,	-1);
	add_enum_member(id,"SM_MOUSEWHEELPRESENT",	0X4B,	-1);
	add_enum_member(id,"SM_XVIRTUALSCREEN",	0X4C,	-1);
	add_enum_member(id,"SM_YVIRTUALSCREEN",	0X4D,	-1);
	add_enum_member(id,"SM_CXVIRTUALSCREEN",	0X4E,	-1);
	add_enum_member(id,"SM_CYVIRTUALSCREEN",	0X4F,	-1);
	add_enum_member(id,"SM_CMONITORS",	0X50,	-1);
	add_enum_member(id,"SM_SAMEDISPLAYFORMAT",	0X51,	-1);
	add_enum_member(id,"SM_IMMENABLED",	0X52,	-1);
	add_enum_member(id,"SM_CXFOCUSBORDER",	0X53,	-1);
	add_enum_member(id,"SM_CYFOCUSBORDER",	0X54,	-1);
	add_enum_member(id,"SM_TABLETPC",	0X56,	-1);
	add_enum_member(id,"SM_MEDIACENTER",	0X57,	-1);
	add_enum_member(id,"SM_STARTER",	0X58,	-1);
	add_enum_member(id,"SM_SERVERR2",	0X59,	-1);
	add_enum_member(id,"SM_CMETRICS",	0X5B,	-1);
	add_enum_member(id,"SM_REMOTESESSION",	0X1000,	-1);
	add_enum_member(id,"SM_SHUTTINGDOWN",	0X2000,	-1);
	add_enum_member(id,"SM_REMOTECONTROL",	0X2001,	-1);
	add_enum_member(id,"SM_CARETBLINKINGENABLED",	0X2002,	-1);
	id = add_enum(-1,"MACRO_DIERR",0x2220000);
	add_enum_member(id,"DIERR_UNSUPPORTED",	0X80004001,	-1);
	add_enum_member(id,"DIERR_NOINTERFACE",	0X80004002,	-1);
	add_enum_member(id,"DIERR_GENERIC",	0X80004005,	-1);
	add_enum_member(id,"DIERR_NOAGGREGATION",	0X80040110,	-1);
	add_enum_member(id,"DIERR_DEVICENOTREG",	0X80040154,	-1);
	add_enum_member(id,"DIERR_INSUFFICIENTPRIVS",	0X80040200,	-1);
	add_enum_member(id,"DIERR_DEVICEFULL",	0X80040201,	-1);
	add_enum_member(id,"DIERR_MOREDATA",	0X80040202,	-1);
	add_enum_member(id,"DIERR_NOTDOWNLOADED",	0X80040203,	-1);
	add_enum_member(id,"DIERR_HASEFFECTS",	0X80040204,	-1);
	add_enum_member(id,"DIERR_NOTEXCLUSIVEACQUIRED",	0X80040205,	-1);
	add_enum_member(id,"DIERR_INCOMPLETEEFFECT",	0X80040206,	-1);
	add_enum_member(id,"DIERR_NOTBUFFERED",	0X80040207,	-1);
	add_enum_member(id,"DIERR_EFFECTPLAYING",	0X80040208,	-1);
	add_enum_member(id,"DIERR_UNPLUGGED",	0X80040209,	-1);
	add_enum_member(id,"DIERR_REPORTFULL",	0X8004020A,	-1);
	add_enum_member(id,"DIERR_NOTFOUND",	0X80070002,	-1);
	add_enum_member(id,"DIERR_OBJECTNOTFOUND",	0X80070002,	-1);
	add_enum_member(id,"DIERR_OTHERAPPHASPRIO",	0X80070005,	-1);
	add_enum_member(id,"DIERR_READONLY",	0X80070005,	-1);
	add_enum_member(id,"DIERR_HANDLEEXISTS",	0X80070005,	-1);
	add_enum_member(id,"DIERR_NOTACQUIRED",	0X8007000C,	-1);
	add_enum_member(id,"DIERR_OUTOFMEMORY",	0X8007000E,	-1);
	add_enum_member(id,"DIERR_NOTINITIALIZED",	0X80070015,	-1);
	add_enum_member(id,"DIERR_INPUTLOST",	0X8007001E,	-1);
	add_enum_member(id,"DIERR_INVALIDPARAM",	0X80070057,	-1);
	add_enum_member(id,"DIERR_BADDRIVERVER",	0X80070077,	-1);
	add_enum_member(id,"DIERR_ACQUIRED",	0X800700AA,	-1);
	add_enum_member(id,"DIERR_OLDDIRECTINPUTVERSION",	0X8007047E,	-1);
	add_enum_member(id,"DIERR_BETADIRECTINPUTVERSION",	0X80070481,	-1);
	add_enum_member(id,"DIERR_ALREADYINITIALIZED",	0X800704DF,	-1);
	id = add_enum(-1,"LANGUAGE_LABELS",0xffffffff);
	add_enum_member(id,"GO",	0X535,	-1);
	add_enum_member(id,"NO",	0X61C,	-1);
	add_enum_member(id,"OK",	0X639,	-1);
	add_enum_member(id,"ON",	0X63C,	-1);
	add_enum_member(id,"KMS",	0XBCEA,	-1);
	add_enum_member(id,"MAX",	0XC3E5,	-1);
	add_enum_member(id,"MIN",	0XC4E3,	-1);
	add_enum_member(id,"OFF",	0XCCFA,	-1);
	add_enum_member(id,"RED",	0XD99A,	-1);
	add_enum_member(id,"YES",	0XF770,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF3_BODY",	0X75FF1,	-1);
	add_enum_member(id,"TYPE_3_MAGENTA_BLUE",	0XC5436,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_AM_TITLE",	0XF3AA9,	-1);
	add_enum_member(id,"BACK",	0X1335F0,	-1);
	add_enum_member(id,"BLUE",	0X136707,	-1);
	add_enum_member(id,"FEET",	0X1578C3,	-1);
	add_enum_member(id,"GREY",	0X163C76,	-1);
	add_enum_member(id,"HELP",	0X169268,	-1);
	add_enum_member(id,"LANG_SPANISH",	0X16E856,	-1);
	add_enum_member(id,"LAPS",	0X18B36F,	-1);
	add_enum_member(id,"LIME",	0X18D506,	-1);
	add_enum_member(id,"LOAD",	0X18ECFF,	-1);
	add_enum_member(id,"MALE",	0X193F3E,	-1);
	add_enum_member(id,"NONE",	0X1A076F,	-1);
	add_enum_member(id,"PHIL",	0X1B01CC,	-1);
	add_enum_member(id,"REAR",	0X1C0CC9,	-1);
	add_enum_member(id,"SAVE",	0X1C8ACE,	-1);
	add_enum_member(id,"TIME",	0X1D380E,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_PARENTAL_EMAIL",	0X20747C,	-1);
	add_enum_member(id,"OL_MSG_CONNECT_TO_LOBBY",	0X23E142,	-1);
	add_enum_member(id,"OL_DEMO_DISC_MSG",	0X269446,	-1);
	add_enum_member(id,"SPONSOR_BILSTEIN",	0X37776C,	-1);
	add_enum_member(id,"OLX_QUIT_STRING",	0X66568A,	-1);
	add_enum_member(id,"SPONSOR_INFO_BREMBO",	0X7F80B4,	-1);
	add_enum_member(id,"CSTATISTICS_REGION_NAME_1",	0X97E000,	-1);
	add_enum_member(id,"CSTATISTICS_REGION_NAME_2",	0X97E001,	-1);
	add_enum_member(id,"CSTATISTICS_REGION_NAME_3",	0X97E002,	-1);
	add_enum_member(id,"CSTATISTICS_REGION_NAME_4",	0X97E003,	-1);
	add_enum_member(id,"CSTATISTICS_REGION_NAME_5",	0X97E004,	-1);
	add_enum_member(id,"OLX_CAR_SELECT_TITLE",	0XD5F627,	-1);
	add_enum_member(id,"OLX_ENTER_PASSCODE",	0XD87A00,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_CAE_BODY",	0XF50BB0,	-1);
	add_enum_member(id,"VISUAL_PART_REAR_BUMPER",	0X15C767C,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_LANGUAGE",	0X17B2522,	-1);
	add_enum_member(id,"CANCEL_CHANGES",	0X18127BD,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_0_10",	0X18A7ED8,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_0_12",	0X18A7EDA,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_0_15",	0X18A7EDD,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_1_10",	0X18B0B39,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_1_12",	0X18B0B3B,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_1_15",	0X18B0B3E,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_2_10",	0X18B979A,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_2_12",	0X18B979C,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_2_15",	0X18B979F,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_3_10",	0X18C23FB,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_3_12",	0X18C23FD,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_3_15",	0X18C2400,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_4_10",	0X18CB05C,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_4_12",	0X18CB05E,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_4_15",	0X18CB061,	-1);
	add_enum_member(id,"HELP_OL_RANKINGS_MENU",	0X19A5232,	-1);
	add_enum_member(id,"HELP_ONLINE_CARLOT",	0X1A11990,	-1);
	add_enum_member(id,"CAR_NAME_MUSTANGGT",	0X1BA754E,	-1);
	add_enum_member(id,"HUD_LB_BLOWNENGINE",	0X1E66364,	-1);
	add_enum_member(id,"SMS_UNLOCK_27_SUBJECT",	0X1F1A2D4,	-1);
	add_enum_member(id,"ENGAGE_TIPS_FILTER_SUBJECT",	0X1FB58D9,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_INSTALL_WORSE_PACKAGE",	0X217453F,	-1);
	add_enum_member(id,"HELP_QR_TRACK_BUILDER",	0X21F3324,	-1);
	add_enum_member(id,"CAR_NAME_PEUGOT",	0X2300668,	-1);
	add_enum_member(id,"MONTH_JANUARY",	0X23C271E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF4_BODY",	0X25C8892,	-1);
	add_enum_member(id,"OL_MESS_VOIP_CHAT_ENDED",	0X266BA2C,	-1);
	add_enum_member(id,"PERF_CATEGORY_ENGINE",	0X26EEA5E,	-1);
	add_enum_member(id,"STYLE22_HOOD_CF",	0X27EBA65,	-1);
	add_enum_member(id,"VISUAL_PART_HOOD",	0X28F7092,	-1);
	add_enum_member(id,"CHUCK",	0X2902EED,	-1);
	add_enum_member(id,"VISUAL_PART_RIMS",	0X294D2A3,	-1);
	add_enum_member(id,"CREAM",	0X2956667,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AIRPORT_SUBJECT",	0X299D1B4,	-1);
	add_enum_member(id,"TRUNK_AUDIO_TITLE",	0X2AADAC5,	-1);
	add_enum_member(id,"OL_MSG_ALREADY_INVITED_PLAYER",	0X2AD727F,	-1);
	add_enum_member(id,"OL_MSG_ERROR_LOADING_NET_CONFIG",	0X2B00AA1,	-1);
	add_enum_member(id,"CREATE_NEW_PROFILE_MENU",	0X2B641C0,	-1);
	add_enum_member(id,"FRONT",	0X2CBDC28,	-1);
	add_enum_member(id,"OL_IS_ONLINE",	0X2D32A79,	-1);
	add_enum_member(id,"OPT_COLOR_CAL_BLURB",	0X2D48035,	-1);
	add_enum_member(id,"GREEN",	0X2DDC8F0,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_GENERIC",	0X2FA33B5,	-1);
	add_enum_member(id,"DVDSTATISTICS_DETAILS",	0X30353CD,	-1);
	add_enum_member(id,"UI_CRIB_ASK_SAVE_MAGAZINE",	0X3312F33,	-1);
	add_enum_member(id,"OL_MSG_ISP_TIMED_OUT",	0X33CE3D4,	-1);
	add_enum_member(id,"MILES",	0X3458A59,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_CAF_BODY",	0X34A3451,	-1);
	add_enum_member(id,"TUNING_NOS_DURATION_SECONDS",	0X35C9376,	-1);
	add_enum_member(id,"OCEAN",	0X36652C5,	-1);
	add_enum_member(id,"OL_EA_LOGIN_USE_EXISTING_ACCOUNT",	0X36E79B9,	-1);
	add_enum_member(id,"OWNED",	0X371711C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ENGBRK_SUBJECT",	0X37304EC,	-1);
	add_enum_member(id,"PSA_1",	0X3812413,	-1);
	add_enum_member(id,"PSA_2",	0X3812414,	-1);
	add_enum_member(id,"PSA_3",	0X3812415,	-1);
	add_enum_member(id,"PSA_4",	0X3812416,	-1);
	add_enum_member(id,"BUTTON_ANALOG_LOOKBACK_DOWN",	0X38A6E08,	-1);
	add_enum_member(id,"QR_GT",	0X3932CDC,	-1);
	add_enum_member(id,"RETRY",	0X39DF715,	-1);
	add_enum_member(id,"SCOTT",	0X3AEE1CC,	-1);
	add_enum_member(id,"OLX_MSG_REMOVE_FRIEND_CONFIRM_VOICE",	0X3B4C3DE,	-1);
	add_enum_member(id,"STOCK",	0X3B83203,	-1);
	add_enum_member(id,"LABEL_TORQUE",	0X3CB927E,	-1);
	add_enum_member(id,"OL_USE_EXISTING_FORGOT_ACCOUNT_NAME",	0X3CD7C4C,	-1);
	add_enum_member(id,"HELP_OL_LOBBY",	0X3D43F19,	-1);
	add_enum_member(id,"UI_CAREER_SAVE_GAME",	0X3EC7395,	-1);
	add_enum_member(id,"HELP_OL_MAIN_MENU",	0X3F07D3A,	-1);
	add_enum_member(id,"LAN_MAIN_TITLE",	0X3F6F2BF,	-1);
	add_enum_member(id,"WHITE",	0X3F9E820,	-1);
	add_enum_member(id,"XENON",	0X40A7027,	-1);
	add_enum_member(id,"UI_CAREER_BACK_TO_MAIN",	0X46E7D84,	-1);
	add_enum_member(id,"PC_DEMO_NEW_GMAEPLAY",	0X47277AE,	-1);
	add_enum_member(id,"OL_PARENTAL_PERMISSION",	0X47C8718,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_1_LARGE",	0X48C2116,	-1);
	add_enum_member(id,"OL_FEEDBACK_UNABLE_TO_SUBMIT",	0X4984589,	-1);
	add_enum_member(id,"CANCEL_CAREER_BUTTON",	0X4A28571,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TRLBRK_BODY",	0X4A99922,	-1);
	add_enum_member(id,"VISUAL_RATING",	0X4B28917,	-1);
	add_enum_member(id,"OL_HOST_OPTIONS",	0X4D88D82,	-1);
	add_enum_member(id,"OPT_CONTROLLER",	0X4DC6DB5,	-1);
	add_enum_member(id,"EN_BLUEPRINT_THE_BLOCK",	0X4FBC4B0,	-1);
	add_enum_member(id,"OL_GAMERTAG_BLOCKED",	0X50185F4,	-1);
	add_enum_member(id,"NEON_RED",	0X5054A89,	-1);
	add_enum_member(id,"PRS_PERFECT_SHIFT_PERCENT",	0X50B14E9,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_1_SMALL",	0X5111984,	-1);
	add_enum_member(id,"OL_PLAYER_STATS",	0X53D8734,	-1);
	add_enum_member(id,"QR_MODE_SELECT",	0X5416105,	-1);
	add_enum_member(id,"ENGAGE_ENTER_SHOP",	0X54B17DC,	-1);
	add_enum_member(id,"SPONSOR_YOKOHAMA",	0X55AD46B,	-1);
	add_enum_member(id,"SU_PERFORMANCE_SPRINGS_AND_SHOCKS",	0X57873B9,	-1);
	add_enum_member(id,"VISUAL_PART_BODY_KIT",	0X59710BD,	-1);
	add_enum_member(id,"HUD_SHIFT_PERFECT",	0X598B065,	-1);
	add_enum_member(id,"OL_VOICE_CHAT_DISC_QUESTION",	0X5997667,	-1);
	add_enum_member(id,"OL_CREATE_USER_ENTER_EMAIL",	0X5B2B70F,	-1);
	add_enum_member(id,"SMS_UNLOCK_37_SUBJECT",	0X5FC33F5,	-1);
	add_enum_member(id,"SMS_UNLOCK_50_BODY",	0X606418E,	-1);
	add_enum_member(id,"MU_PAUSE_TRACK_MAP",	0X61EF24F,	-1);
	add_enum_member(id,"QUICKEST_DRAG_FINISHED",	0X627094E,	-1);
	add_enum_member(id,"LABEL_TUNING_HORSEPOWER",	0X6285E80,	-1);
	add_enum_member(id,"OL_LOBBY_JOIN",	0X63D57A0,	-1);
	add_enum_member(id,"QR_DISTANCE_LABEL",	0X642806B,	-1);
	add_enum_member(id,"OL_MSG_LOGIN_CANNOT_CONNECT",	0X69B71E3,	-1);
	add_enum_member(id,"LOADING_TITLE_EA_TRAX",	0X6A63C01,	-1);
	add_enum_member(id,"OPT_SHOW_CROWD",	0X6CC3750,	-1);
	add_enum_member(id,"CONFIRM_CHANGE_REMOVE_VINYL_LAYER",	0X6D7902C,	-1);
	add_enum_member(id,"MAILBOX_NAME_SPECIAL_EVENTS",	0X6F8E5BF,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_BANNED",	0X7190CAB,	-1);
	add_enum_member(id,"ONLINE_PARENTAL_EMAIL_CONFIRM",	0X720FC4E,	-1);
	add_enum_member(id,"ASK_ENTER_SPON_SPRINT_SUBJECT",	0X7216A68,	-1);
	add_enum_member(id,"SPONSOR_STILLEN",	0X78290ED,	-1);
	add_enum_member(id,"GAME_ROOM_TITLE",	0X7901F16,	-1);
	add_enum_member(id,"LANG_ITALIAN",	0X7A41042,	-1);
	add_enum_member(id,"CONFIRM_RESUME_EXPLORE_LOST_PROGRESS",	0X7CD17B0,	-1);
	add_enum_member(id,"WT_LIGHTWEIGHT_WINDOWS",	0X7E0DE53,	-1);
	add_enum_member(id,"LAN_OL_LOBBY_REFRESH",	0X7F10319,	-1);
	add_enum_member(id,"PAINT_SHOP_CONFIRM_INSTALL_SETUP",	0X7F24787,	-1);
	add_enum_member(id,"OPT_LEFT_ANALOG_GAMECUBE",	0X80F7425,	-1);
	add_enum_member(id,"SMS_DELETE_MESSAGE",	0X836F968,	-1);
	add_enum_member(id,"LAVENDER",	0X8405FB0,	-1);
	add_enum_member(id,"OPT_PLAYER_SPLIT_TIME_TYPE",	0X84BC378,	-1);
	add_enum_member(id,"SMS_UNLOCK_51_BODY",	0X85B6A2F,	-1);
	add_enum_member(id,"HELP_CRIB",	0X8778F27,	-1);
	add_enum_member(id,"DEBUG_ASK_ENTER_SHORT_TRACK",	0X877CB04,	-1);
	add_enum_member(id,"QR_TITLE_ONLINE",	0X87FEA07,	-1);
	add_enum_member(id,"MAGAZINE_TITLE",	0X89C4D6C,	-1);
	add_enum_member(id,"FLAG_TRICOLORV_A",	0X8A6B11C,	-1);
	add_enum_member(id,"FLAG_TRICOLORV_B",	0X8A6B11D,	-1);
	add_enum_member(id,"FLAG_TRICOLORV_C",	0X8A6B11E,	-1);
	add_enum_member(id,"DYNO_PERFORMANCE_HEADER",	0X8E27392,	-1);
	add_enum_member(id,"UI_CRIB_REGION_4_COMMENT",	0X8FBD504,	-1);
	add_enum_member(id,"OL_CREATE_USER_ACCOUNT_PASSWORD",	0X903E809,	-1);
	add_enum_member(id,"OPT_CREDITS",	0X905101F,	-1);
	add_enum_member(id,"CUSTOMIZE_DECAL_SLOT_ALREADY_EMPTY",	0X91BB4EA,	-1);
	add_enum_member(id,"IO_DEVICE_GAMECUBE_DESCRIPTION",	0X928B181,	-1);
	add_enum_member(id,"CAR_NAME_SENTRA",	0X92BE141,	-1);
	add_enum_member(id,"UI_ICE_SPINNERS",	0X94A635E,	-1);
	add_enum_member(id,"CONFIRM_RESTART_RACE",	0X972A44B,	-1);
	add_enum_member(id,"MU_PAUSE_ST_LAP_RECORD",	0X988AA9E,	-1);
	add_enum_member(id,"KIT00_HEADLIGHT",	0X995CED0,	-1);
	add_enum_member(id,"ROOF_STYLE15_OFFSET",	0X99669B1,	-1);
	add_enum_member(id,"RSTATISTICS_WORLD_EVENTS",	0X9D1CE77,	-1);
	add_enum_member(id,"CONFIRM_PASSWORD",	0X9E275BF,	-1);
	add_enum_member(id,"SMS_UNLOCK_47_SUBJECT",	0XA06C516,	-1);
	add_enum_member(id,"LABEL_WEIGHT",	0XA10FBC6,	-1);
	add_enum_member(id,"VINYL_CATEGORY_LIGHTNINGSET",	0XA16B73D,	-1);
	add_enum_member(id,"DEMO_PSA_TEXT",	0XA23978B,	-1);
	add_enum_member(id,"OL_FEEDBACK_BAD_NAME",	0XA276384,	-1);
	add_enum_member(id,"POST_RACE_REPLAY_TITLE",	0XA5F792C,	-1);
	add_enum_member(id,"LABEL_SERVER_CHEATS",	0XA83064C,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_REGION",	0XA96B270,	-1);
	add_enum_member(id,"ENGAGE_TIPS_KO_BODY",	0XA96DC2B,	-1);
	add_enum_member(id,"ASK_ENTER_CAR_LOT",	0XAAB553E,	-1);
	add_enum_member(id,"OL_FIND_GAMERTAG",	0XAAC6601,	-1);
	add_enum_member(id,"SMS_UNLOCK_52_BODY",	0XAB092D0,	-1);
	add_enum_member(id,"TUNING_TYPE_FRONT_LOWERING",	0XB161EC3,	-1);
	add_enum_member(id,"EN_COLD_AIR_INTAKE_SYSTEM",	0XB191D2D,	-1);
	add_enum_member(id,"OLX_FRIEND_REQUESTS",	0XB1B1FC4,	-1);
	add_enum_member(id,"CSTATISTICS_REPUTATION_POINTS",	0XB214C53,	-1);
	add_enum_member(id,"STREETX_LEADER",	0XB24883A,	-1);
	add_enum_member(id,"STYLE_LEAPFROG",	0XB4F08DF,	-1);
	add_enum_member(id,"OPT_ONLINE_SHOW_NAMES",	0XB660729,	-1);
	add_enum_member(id,"ROOF_STYLE00",	0XB70E285,	-1);
	add_enum_member(id,"OL_MSG_REMOVING_BUDDY",	0XB8066FD,	-1);
	add_enum_member(id,"PC_DEMO_ONLINE_TITLE",	0XB83AD1B,	-1);
	add_enum_member(id,"ASK_ENTER_BODY_SHOP_HEADER",	0XB9253E9,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SMS_BODY",	0XB9479A4,	-1);
	add_enum_member(id,"STYLE_SUPERB_DRIFT",	0XBCB8DF8,	-1);
	add_enum_member(id,"SPONSOR_INFO_GREDDY",	0XC2925DC,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_2_SUBJECT",	0XC36C7CA,	-1);
	add_enum_member(id,"SU_STRUT_TOWER_BAR",	0XC5B144C,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_3_SUBJECT",	0XC5CBB42,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_SPONSORSHIPS",	0XC649166,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_NEUSPEED",	0XC71B0F0,	-1);
	add_enum_member(id,"LABEL_CAR",	0XCAA2974,	-1);
	add_enum_member(id,"LABEL_DAY",	0XCAA2DBC,	-1);
	add_enum_member(id,"LABEL_WIN",	0XCAA7F8C,	-1);
	add_enum_member(id,"OL_NEWS_TITLE",	0XCB1FE97,	-1);
	add_enum_member(id,"EC_FUEL_RAIL",	0XCEA9ED9,	-1);
	add_enum_member(id,"RIMS_BRAND_5ZIGEN",	0XCF90EF1,	-1);
	add_enum_member(id,"SMS_UNLOCK_53_BODY",	0XD05BB71,	-1);
	add_enum_member(id,"CONFIRM_BACK_TO_MAIN_MENU",	0XD0AE497,	-1);
	add_enum_member(id,"QR_DRIFT_MODE_OPTIONS",	0XD3F5F29,	-1);
	add_enum_member(id,"ENGAGE_TIPS_LOT2_BODY",	0XD482B72,	-1);
	add_enum_member(id,"CONFIRM_SAVE_SETTINGS",	0XD7DE8AB,	-1);
	add_enum_member(id,"CSTATISTICS_WIN_PERCENT",	0XD817A4A,	-1);
	add_enum_member(id,"QR_OPT_KO_BOTTOM_HALF",	0XDA7AA1B,	-1);
	add_enum_member(id,"SPONSOR_INFO_STREETGLOW",	0XDAD5A6D,	-1);
	add_enum_member(id,"HUD_BEST_DRIFT",	0XDB1A145,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_PAINT_SELECT",	0XDC884CB,	-1);
	add_enum_member(id,"VISUAL_PART_SIDE_MIRROR",	0XDD35467,	-1);
	add_enum_member(id,"KB_BTN_BACK",	0XE00AF3F,	-1);
	add_enum_member(id,"KB_BTN_CAPS",	0XE013D55,	-1);
	add_enum_member(id,"KB_BTN_DONE",	0XE0204F4,	-1);
	add_enum_member(id,"SMS_UNLOCK_57_SUBJECT",	0XE115637,	-1);
	add_enum_member(id,"OL_UNRANKED",	0XE1F1271,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_1",	0XE27CB54,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_2",	0XE27CB55,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_3",	0XE27CB56,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_4",	0XE27CB57,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_5",	0XE27CB58,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_6",	0XE27CB59,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_7",	0XE27CB5A,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_8",	0XE27CB5B,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_9",	0XE27CB5C,	-1);
	add_enum_member(id,"URL_RUNNERUP",	0XE3B7E70,	-1);
	add_enum_member(id,"OLX_ERROR_IMPORTANT_MSG",	0XE44A6BE,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MINIMAP_INSTRUCTION_DEMO_BODY",	0XE9BC521,	-1);
	add_enum_member(id,"TOP_SPEED",	0XEF34382,	-1);
	add_enum_member(id,"PAINT_RIM",	0XF030942,	-1);
	add_enum_member(id,"ASK_ENTER_SPON_CIRCUIT_SUBJECT",	0XF037A7B,	-1);
	add_enum_member(id,"EN_RACING_CAMSHAFT_AND_GEARS",	0XF0B824E,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_CITY_LOCATIONS_SUBJECT",	0XF0F62A5,	-1);
	add_enum_member(id,"HELP_BRAND_SELECT",	0XF19E56D,	-1);
	add_enum_member(id,"TIME_AS_LEADER",	0XF1BB84D,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_GO_TO_GARAGE_BODY",	0XF4889BD,	-1);
	add_enum_member(id,"SMS_UNLOCK_54_BODY",	0XF5AE412,	-1);
	add_enum_member(id,"OL_GAME_ROOM_OPEN",	0XF636A00,	-1);
	add_enum_member(id,"DYNO_MAX_TORQUE",	0XF87545D,	-1);
	add_enum_member(id,"SC06_LINE_1",	0XF9109B2,	-1);
	add_enum_member(id,"SC06_LINE_2",	0XF9109B3,	-1);
	add_enum_member(id,"SC06_LINE_3",	0XF9109B4,	-1);
	add_enum_member(id,"SC06_LINE_4",	0XF9109B5,	-1);
	add_enum_member(id,"SC06_LINE_5",	0XF9109B6,	-1);
	add_enum_member(id,"SC06_LINE_6",	0XF9109B7,	-1);
	add_enum_member(id,"SC06_LINE_7",	0XF9109B8,	-1);
	add_enum_member(id,"SC06_LINE_8",	0XF9109B9,	-1);
	add_enum_member(id,"ENGAGE_TIPS_NEW_BODY",	0XFCE0DBB,	-1);
	add_enum_member(id,"MINIMAP_STREETX",	0XFDA6758,	-1);
	add_enum_member(id,"MU_PAUSE_VIBRATION",	0X1003EA2B,	-1);
	add_enum_member(id,"OL_MSG_DISCONNECTED_NEED_UPDATE",	0X10073C4F,	-1);
	add_enum_member(id,"OL_BLOCK_FRIEND_MESSG",	0X10199579,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_BEACON_HILL_EAST",	0X101A3187,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_BEACON_HILL_WEST",	0X1024215D,	-1);
	add_enum_member(id,"VISUAL_PART_REVERT_CARBON_FIBRE_TRUNK",	0X1036E38E,	-1);
	add_enum_member(id,"LOADING_TITLE_THE_GARAGE",	0X1038F284,	-1);
	add_enum_member(id,"TEST_PAUSE_RESUME_TEST",	0X105149CB,	-1);
	add_enum_member(id,"PC_MESSENGER_BLOCK",	0X10600AA4,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_FAILED",	0X106AE8C8,	-1);
	add_enum_member(id,"OL_FEEDBACK_HARASSMENT_DESC",	0X10811591,	-1);
	add_enum_member(id,"HELP_CRIB_REWARD_OPTIONS",	0X10965456,	-1);
	add_enum_member(id,"OL_DELETE_PERSONA_CONFIRM2",	0X10A27A02,	-1);
	add_enum_member(id,"LANG_SWEDISH",	0X10ADEAF7,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE_MIRRORS",	0X10B5E8D1,	-1);
	add_enum_member(id,"CONFIRM_CHANGE_DECAL_LAYOUT",	0X10B83327,	-1);
	add_enum_member(id,"OPT_CAR_LIGHTING",	0X10CD6BBC,	-1);
	add_enum_member(id,"SMS_UNLOCK_05_SUBJECT",	0X10E39E90,	-1);
	add_enum_member(id,"HELP_SPLITSCREEN_CARSELECT",	0X10E836C8,	-1);
	add_enum_member(id,"DEACTIVATE_GPS",	0X11159F62,	-1);
	add_enum_member(id,"UI_ICE_INSTALL_TRUNK_LAYOUT_CONFIRM",	0X113EAB80,	-1);
	add_enum_member(id,"OPT_TINTING",	0X11504D0E,	-1);
	add_enum_member(id,"SMS_UNLOCK_55_BODY",	0X11B00CB3,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_VINYL_PAINT_SELECT",	0X11B1EF7C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GPS_INTRO_DEMO_BODY",	0X11DDB88A,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_VINYL_SELECT",	0X11E168C1,	-1);
	add_enum_member(id,"ENGAGE_FROM_HEADER",	0X11E290E1,	-1);
	add_enum_member(id,"OL_MESS_DECLINE_VOICE_INVITE",	0X11F1C307,	-1);
	add_enum_member(id,"CSTATISTICS_REWARDS",	0X11F7AC44,	-1);
	add_enum_member(id,"OL_MESS_SEND_MESSAGE",	0X12107FFE,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAP_SUBJECT",	0X12192771,	-1);
	add_enum_member(id,"OL_UNBLOCK_CONFIRM",	0X121F05D4,	-1);
	add_enum_member(id,"CAR_SELECT_CONFIRM_CRIB_TRADE",	0X1231C38F,	-1);
	add_enum_member(id,"MU_PAUSE_MUSIC_VOL",	0X1283F74E,	-1);
	add_enum_member(id,"MESSAGE_02_SUBJECT",	0X1288E414,	-1);
	add_enum_member(id,"SMS_DVD_GENERIC_1_BODY",	0X12B0EA08,	-1);
	add_enum_member(id,"GPS_INFORM_DEACTIVATE",	0X12C23B2C,	-1);
	add_enum_member(id,"SC_CONTROL_CAR",	0X12C86A0A,	-1);
	add_enum_member(id,"OL_GETTING_RANK_DATA",	0X12DF9F4F,	-1);
	add_enum_member(id,"DEMO_CONFIRM_CHOOSE_CAR",	0X12EBB406,	-1);
	add_enum_member(id,"PC_OL_LOBBY_REFRESH",	0X130D90D1,	-1);
	add_enum_member(id,"BUTTON_LOOKBACK",	0X13121940,	-1);
	add_enum_member(id,"OL_FAILED_EA_MESSENGER_CONNECT",	0X13138F54,	-1);
	add_enum_member(id,"TUNING_CAT_ECU",	0X135BDD07,	-1);
	add_enum_member(id,"TUNING_CAT_NOS",	0X135C04DA,	-1);
	add_enum_member(id,"HUD_FINISH_YOUR_SCORE",	0X13640DE9,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_DECAL_SELECT_CATEGORY",	0X1365AEDE,	-1);
	add_enum_member(id,"UI_MAIN_TITLE",	0X1398F642,	-1);
	add_enum_member(id,"CSTATISTICS_BANK",	0X13B49408,	-1);
	add_enum_member(id,"MU_PAUSE_SPEECH_VOL",	0X13B655C5,	-1);
	add_enum_member(id,"OPT_DISPLAY_DEFAULT",	0X13F0EDEB,	-1);
	add_enum_member(id,"BRIGHT_GREEN",	0X1404A5EF,	-1);
	add_enum_member(id,"SMS_UNLOCK_56_BODY",	0X14053554,	-1);
	add_enum_member(id,"KIT02_TRUNK_AUDIO",	0X14216D0D,	-1);
	add_enum_member(id,"TYPE_3_UPPER_LEFT_LOWER_RIGHT_NOZZLES",	0X1422BAC1,	-1);
	add_enum_member(id,"UC_GRAPHICS_BODY",	0X1435EAD4,	-1);
	add_enum_member(id,"OL_MSG_CONNECT_TO_SERVER",	0X144849C1,	-1);
	add_enum_member(id,"OPT_DEBUG_ART",	0X1448C75E,	-1);
	add_enum_member(id,"OLX_ERROR_FILTER_GAMERTAG",	0X145472A7,	-1);
	add_enum_member(id,"OL_GAME_TYPE_COLON",	0X145890EE,	-1);
	add_enum_member(id,"OL_CREATE_USER_ENTER_BIRTHDAY",	0X1492D7BE,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_FOTF_TITLE",	0X14C2EAEA,	-1);
	add_enum_member(id,"OPT_WHEEL_CONFIG",	0X14D4BD3B,	-1);
	add_enum_member(id,"SMS_UNLOCK_15_SUBJECT",	0X14EE2FB1,	-1);
	add_enum_member(id,"V1_ALL_BUT_HOOD_LEFT_PURGE",	0X15051F3D,	-1);
	add_enum_member(id,"SMS_DVD_GENERIC_2_BODY",	0X150612A9,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_CANNOT_CREATE",	0X150DFD4C,	-1);
	add_enum_member(id,"OLX_ERROR_NO_GAMERTAGS",	0X151921D1,	-1);
	add_enum_member(id,"CSTATISTICS_CIRCUIT_WINS",	0X151C443F,	-1);
	add_enum_member(id,"BRIGHT_WHITE",	0X1520C51F,	-1);
	add_enum_member(id,"BRIGHT_XENON",	0X15314D26,	-1);
	add_enum_member(id,"PC_KEYS_STEERING_LEFT",	0X153E7337,	-1);
	add_enum_member(id,"HUD_GPS_INVALID_STARTING_ROUTE",	0X155409E8,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_DAMAGE",	0X1582ADFF,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_JACKSON_HEIGHTS_SUBJECT",	0X158FAB75,	-1);
	add_enum_member(id,"EA_ONLINE_TERMS_PAGE_1",	0X159C3DBF,	-1);
	add_enum_member(id,"MU_PAUSE_HANDLING",	0X15AA8262,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_SPONSOR_X_1_BODY",	0X15D1543A,	-1);
	add_enum_member(id,"ENGAGE_ENTER_SHOP_GENERIC",	0X15D6B438,	-1);
	add_enum_member(id,"DEMO_GAME_TIP_AUDIO_SHOP",	0X15F2A153,	-1);
	add_enum_member(id,"OL_OP_Voice_Chat_Headset",	0X15FE0769,	-1);
	add_enum_member(id,"KIT00_WING_MIRROR",	0X1605B575,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_EGT_TITLE",	0X1606A1BB,	-1);
	add_enum_member(id,"ENTER_FRONTEND_MAGAZINE_SUBJECT",	0X16549076,	-1);
	add_enum_member(id,"SMS_UNLOCK_57_BODY",	0X165A5DF5,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_CANNOT_DELETE",	0X167BCF0B,	-1);
	add_enum_member(id,"EA_ONLINE_TERMS_PROMPT",	0X16D46194,	-1);
	add_enum_member(id,"CSTATISTICS_CARS_UNLOCKED",	0X16E1CAA9,	-1);
	add_enum_member(id,"HELP_MEMORY_CARD_LIST",	0X17137AD4,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_DECAL_PAINT_SELECT",	0X172D67BC,	-1);
	add_enum_member(id,"PRS_RACE_TIME",	0X174CC8DC,	-1);
	add_enum_member(id,"SMS_DVD_GENERIC_3_BODY",	0X175B3B4A,	-1);
	add_enum_member(id,"OL_MSG_CREATE_PERSONA",	0X17828BEA,	-1);
	add_enum_member(id,"OL_CONNECTION_TO_PLAYERS_LOST",	0X17AAEF8B,	-1);
	add_enum_member(id,"CAR_NAME_PEUGOT106",	0X17B4243F,	-1);
	add_enum_member(id,"DEBUG_ASK_ENTER_SUBJECT_HEADER",	0X17EA64F8,	-1);
	add_enum_member(id,"OPT_PLAYER_SPLIT_BEST_LAP",	0X17FAFC32,	-1);
	add_enum_member(id,"OL_MSG_CONFIRM_VOICE_CHAT_END_BEGIN",	0X182154DB,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_SPONSOR_X_2_BODY",	0X18267CDB,	-1);
	add_enum_member(id,"CHALLENGE_DATA_1_OVER",	0X182FAD46,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_BILSTEIN",	0X18486DD1,	-1);
	add_enum_member(id,"DYNO_TIP_STEERING_RATIO",	0X184AB1A3,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_OPPONENT",	0X186CF32B,	-1);
	add_enum_member(id,"SMS_UNLOCK_58_BODY",	0X18AF8696,	-1);
	add_enum_member(id,"HUD_GETAWAY_CATCH_THEM",	0X18B97380,	-1);
	add_enum_member(id,"HELP_WHEEL",	0X18CDD1FC,	-1);
	add_enum_member(id,"TEST_PAUSE_RETURN_TO_DYNO",	0X18D5A136,	-1);
	add_enum_member(id,"HUD_ONLINE_LOST_CONNECT_TO_HOST",	0X18DAEA6D,	-1);
	add_enum_member(id,"SMS_UNLOCK_25_SUBJECT",	0X18F8C0D2,	-1);
	add_enum_member(id,"KIT00_BRAKELIGHT",	0X191CE8C3,	-1);
	add_enum_member(id,"EN_HIGH_FLOW_INTAKE_MANIFOLD",	0X191E862C,	-1);
	add_enum_member(id,"OPT_DPAD_GAMECUBE",	0X19498922,	-1);
	add_enum_member(id,"UI_CAREER_ENTER_GAMEPLAY",	0X194EFA7A,	-1);
	add_enum_member(id,"LOADING_TITLE_OUTRUN_RACES",	0X1952EA17,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_BADCDKEY",	0X1973DA3A,	-1);
	add_enum_member(id,"LAN_OPTIONS",	0X19889765,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SFTS_TITLE",	0X19A1665B,	-1);
	add_enum_member(id,"ENGAGE_SHOWCASE_GENERIC_1_BODY",	0X1A00EF9B,	-1);
	add_enum_member(id,"PRS_ZERO_SIXTY_CAPS",	0X1A09BEF9,	-1);
	add_enum_member(id,"TYPE_2_BLUE",	0X1A2153D9,	-1);
	add_enum_member(id,"TYPE_2_CYAN",	0X1A2214FC,	-1);
	add_enum_member(id,"OLX_CAR_SELECT_ONLINE_RANKED_CARS",	0X1A23D5E6,	-1);
	add_enum_member(id,"TYPE_2_GOLD",	0X1A241D57,	-1);
	add_enum_member(id,"CONFIRM_RESET_CUSTOMIZE_CATEGORY_PAINT",	0X1A311489,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_10",	0X1A5EB97D,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_11",	0X1A5EB97E,	-1);
	add_enum_member(id,"SPONSOR_PIAA",	0X1A6A162D,	-1);
	add_enum_member(id,"SPONSOR_TOYO",	0X1A6C645D,	-1);
	add_enum_member(id,"CHALLENGE_DATA_2_OVER",	0X1A84D5E7,	-1);
	add_enum_member(id,"IND_CAR_SPECIALTY_1_BODY",	0X1A9A01D9,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH2_DEMO_BODY",	0X1ACA23B9,	-1);
	add_enum_member(id,"SMS_UNLOCK_59_BODY",	0X1B04AF37,	-1);
	add_enum_member(id,"OPT_PC_PRIMARY_CONFIG",	0X1B15F53C,	-1);
	add_enum_member(id,"HELP_HUD_SELECT",	0X1B2794C7,	-1);
	add_enum_member(id,"TRANS_TYPE_MANUAL",	0X1B3A2485,	-1);
	add_enum_member(id,"V1_ALL_BUT_HOOD_RIGHT_PURGE",	0X1B4A2070,	-1);
	add_enum_member(id,"Kristian",	0X1B4A3984,	-1);
	add_enum_member(id,"HUD_DNF_KNOCKED_OUT",	0X1B59940C,	-1);
	add_enum_member(id,"SAVELOAD_SAVEPOINT_OPTION_1",	0X1B7ABF8E,	-1);
	add_enum_member(id,"SAVELOAD_SAVEPOINT_OPTION_2",	0X1B7ABF8F,	-1);
	add_enum_member(id,"SAVELOAD_SAVEPOINT_OPTION_3",	0X1B7ABF90,	-1);
	add_enum_member(id,"OLX_ERROR_CANNOT_CONNECT",	0X1B99CA46,	-1);
	add_enum_member(id,"POST_RACE_STYLE_TITLE",	0X1BC6A610,	-1);
	add_enum_member(id,"SMS_PERF_GENERIC_1_BODY",	0X1BC6BE57,	-1);
	add_enum_member(id,"SMS_LOC_X_SPONSOR_SUBJECT",	0X1BC7F9A8,	-1);
	add_enum_member(id,"HELP_OL_PS2_DATEWIDGET",	0X1BE259F7,	-1);
	add_enum_member(id,"CHECK_FILES_MENU",	0X1BE4B223,	-1);
	add_enum_member(id,"SPLIT_SCREEN_TRACK_SELECT",	0X1BF733BD,	-1);
	add_enum_member(id,"PC_NAV_BACK",	0X1C0787E6,	-1);
	add_enum_member(id,"OL_MSG_JOIN_GAME_ALREADY_STARTED",	0X1C098DDF,	-1);
	add_enum_member(id,"PC_NAV_QUIT",	0X1C101778,	-1);
	add_enum_member(id,"ENGAGE_SHOWCASE_GENERIC_2_BODY",	0X1C56183C,	-1);
	add_enum_member(id,"PRS_400M_TIME",	0X1C6F2A82,	-1);
	add_enum_member(id,"TYPE_3_BLUE",	0X1C767C7A,	-1);
	add_enum_member(id,"TYPE_3_CYAN",	0X1C773D9D,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_HARASSMENT",	0X1C775494,	-1);
	add_enum_member(id,"TYPE_3_GOLD",	0X1C7945F8,	-1);
	add_enum_member(id,"NEON_GOLD_PULSE",	0X1C8994DC,	-1);
	add_enum_member(id,"PRW_TITLE",	0X1CAD29F9,	-1);
	add_enum_member(id,"OL_MSG_USING_PERSONA",	0X1CB0C3FC,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL3_SUBJECT",	0X1CBFA047,	-1);
	add_enum_member(id,"OPT_WHEEL_STRENGTH_OF_FORCE",	0X1CC4B396,	-1);
	add_enum_member(id,"NEON_GRAPE_PULSE",	0X1CD69245,	-1);
	add_enum_member(id,"CHALLENGE_DATA_3_OVER",	0X1CD9FE88,	-1);
	add_enum_member(id,"HUD_LB_TIMEUP",	0X1CE129E0,	-1);
	add_enum_member(id,"BUTTON_RESET_CAR",	0X1CEDC132,	-1);
	add_enum_member(id,"IND_CAR_SPECIALTY_2_BODY",	0X1CEF2A7A,	-1);
	add_enum_member(id,"OL_MSG_PROBLEM_LOGGING_INTO_LOBBY",	0X1CFC4D86,	-1);
	add_enum_member(id,"ENGAGE_TIPS_METRIC_SUBJECT",	0X1D01EC37,	-1);
	add_enum_member(id,"SMS_UNLOCK_35_SUBJECT",	0X1D0351F3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AUDIO_SUBJECT",	0X1D035425,	-1);
	add_enum_member(id,"STYLE_GOOD_DRIFT",	0X1D1073F0,	-1);
	add_enum_member(id,"ROOF_STYLE14_OFFSET",	0X1D5494D0,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_YOKOHAMA",	0X1D6BCAD0,	-1);
	add_enum_member(id,"PAUSE_OPTIONS_TITLE",	0X1D7BB6C9,	-1);
	add_enum_member(id,"LOADING_TITLE_PERFORMANCE_TUNING",	0X1DA45883,	-1);
	add_enum_member(id,"CAR_SHOP_TITLE",	0X1DA8562F,	-1);
	add_enum_member(id,"ONLINE_CONNECTING_ISP",	0X1DB81DB6,	-1);
	add_enum_member(id,"TEST_PAUSE_LOAD_SETTINGS",	0X1DD3420B,	-1);
	add_enum_member(id,"ENTER_INGAME_DVD_BODY",	0X1DEFB577,	-1);
	add_enum_member(id,"TYPE_2_BOTH_WHEEL_NOZZLES",	0X1E101A86,	-1);
	add_enum_member(id,"OL_APPEAR_OFFLINE",	0X1E13C054,	-1);
	add_enum_member(id,"SMS_PERF_GENERIC_2_BODY",	0X1E1BE6F8,	-1);
	add_enum_member(id,"OPT_ONLINE_VOICE_TO_HEADSET",	0X1E1C73AA,	-1);
	add_enum_member(id,"ENTER_INGAME_MAGAZINE_SUBJECT",	0X1E4CBC67,	-1);
	add_enum_member(id,"PURCHASED",	0X1E6178FE,	-1);
	add_enum_member(id,"PC_KEYS_WORLD_MAP",	0X1E7E3391,	-1);
	add_enum_member(id,"CHALLENGE_DATA_1_UNDER",	0X1E8D8068,	-1);
	add_enum_member(id,"OPT_PLAYER_SPLIT_LAST_LAP",	0X1EA459F8,	-1);
	add_enum_member(id,"OPT_PLAYER_CAM_OUTSIDE_FAR",	0X1EA4CEC2,	-1);
	add_enum_member(id,"ENGAGE_SHOWCASE_GENERIC_3_BODY",	0X1EAB40DD,	-1);
	add_enum_member(id,"UI_ICE_GAUGES",	0X1EB104C8,	-1);
	add_enum_member(id,"OL_NOT_ENOUGH_PLAYERS",	0X1EB7BF0E,	-1);
	add_enum_member(id,"ROOF_STYLE01_DUAL",	0X1EBF3A2B,	-1);
	add_enum_member(id,"SMS_UNLOCK_20_BODY",	0X1F178B4B,	-1);
	add_enum_member(id,"TITLE_SCREEN_START_PROMPT_GC",	0X1F181F57,	-1);
	add_enum_member(id,"TITLE_SCREEN_START_PROMPT_PC",	0X1F182080,	-1);
	add_enum_member(id,"STYLE_BONUS_ZONE",	0X1F26FDD1,	-1);
	add_enum_member(id,"SPONSOR_RACE_PURSE",	0X1F2F3AFB,	-1);
	add_enum_member(id,"HELP_OL_EA_TERMS",	0X1F533291,	-1);
	add_enum_member(id,"UI_CRIB_REGION_2_COMMENT",	0X2002F302,	-1);
	add_enum_member(id,"SHOP_BLURB_CAR_LOT_1",	0X201E4AA2,	-1);
	add_enum_member(id,"HELP_OL_TOS",	0X2035B0D7,	-1);
	add_enum_member(id,"SPONSOR_INFO_OZ_WHEELS",	0X2038A10D,	-1);
	add_enum_member(id,"OL_MESS_NO_SPACE",	0X205B2BF8,	-1);
	add_enum_member(id,"SMS_PERF_GENERIC_3_BODY",	0X20710F99,	-1);
	add_enum_member(id,"OLX_READ_MESSAGE_LATER",	0X20870D48,	-1);
	add_enum_member(id,"SMS_DVD_COVER_8_SUBJECT",	0X20A05D53,	-1);
	add_enum_member(id,"CUSTOMIZE_WANT_NOS_PURGE_INSTALL_NOS_FIRST",	0X20B30CD8,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_DONT_CHOOSE_UNIQUE",	0X20D0D219,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_CAE_TITLE",	0X20D93324,	-1);
	add_enum_member(id,"UI_ICE_NEON_CABIN",	0X20E7F018,	-1);
	add_enum_member(id,"HELP_OL__CARSPECIALTIES_SHOP_TRUNKLAYOUT_SELECT",	0X20F02695,	-1);
	add_enum_member(id,"ENGAGE_SHOWCASE_GENERIC_4_BODY",	0X2100697E,	-1);
	add_enum_member(id,"OL_STRING_FRIEND_WITHDRAWN",	0X2106E2FE,	-1);
	add_enum_member(id,"ACCELERATION",	0X2109AD09,	-1);
	add_enum_member(id,"SMS_UNLOCK_45_SUBJECT",	0X210DE314,	-1);
	add_enum_member(id,"ROOF_STYLE02_DUAL",	0X211462CC,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_1_LARGE",	0X2148F38B,	-1);
	add_enum_member(id,"SMS_UNLOCK_21_BODY",	0X216CB3EC,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BBRK_BODY",	0X21707032,	-1);
	add_enum_member(id,"PAINT_CHOOSE_DECAL_COLORS",	0X218693E4,	-1);
	add_enum_member(id,"LABEL_LONGEST_JUMP",	0X219DD875,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_1_SMALL",	0X21CDEBF9,	-1);
	add_enum_member(id,"TUNING_TYPE_REARDOWNFORCE",	0X21D83E05,	-1);
	add_enum_member(id,"UI_ONLINE_OPTIMATCH",	0X21DFD7A9,	-1);
	add_enum_member(id,"MESS_IS_OFFLINE",	0X221E85B4,	-1);
	add_enum_member(id,"UI_ICE_NEON_TRUNK",	0X2225348F,	-1);
	add_enum_member(id,"SAVELOAD_INFORM_SAVE_FAILED_AUTOSAVE_OFF_XBOX",	0X2237EACB,	-1);
	add_enum_member(id,"OLX_INFO",	0X2244B5BD,	-1);
	add_enum_member(id,"MINIMAP_OPPONENT",	0X22465E3C,	-1);
	add_enum_member(id,"OLX_QUIT",	0X224936F4,	-1);
	add_enum_member(id,"LAN_ENTER_NAME",	0X22729437,	-1);
	add_enum_member(id,"ENGAGE_TIPS_DRAFT_SUBJECT",	0X227EBA64,	-1);
	add_enum_member(id,"CSTATISTICS_SPRINT_WINS",	0X22A144EC,	-1);
	add_enum_member(id,"LOADING_TITLE_UNRANKED_PLAY_RANKED",	0X22A566DE,	-1);
	add_enum_member(id,"OL_OPTIONS_TITLE",	0X22B1C2E6,	-1);
	add_enum_member(id,"CAR_NAME_G35",	0X22B841E3,	-1);
	add_enum_member(id,"CAR_NAME_GTO",	0X22B8463E,	-1);
	add_enum_member(id,"CAR_NAME_NSX",	0X22B863ED,	-1);
	add_enum_member(id,"CAR_NAME_RSX",	0X22B874F1,	-1);
	add_enum_member(id,"CAR_NAME_RX7",	0X22B87575,	-1);
	add_enum_member(id,"CAR_NAME_RX8",	0X22B87576,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_NO_SAVEPOINT",	0X22BC94AF,	-1);
	add_enum_member(id,"ENGAGE_TIP_CAREER_PROG_BODY",	0X22C71A87,	-1);
	add_enum_member(id,"TRACK_DIRECTION_REVERSE",	0X22F254AF,	-1);
	add_enum_member(id,"JUKEBOX_EATRAX_TITLE",	0X22FCCA3C,	-1);
	add_enum_member(id,"HUD_SHIFT_SHORT",	0X2303D76C,	-1);
	add_enum_member(id,"TUNING_TYPE_BRAKES",	0X2308F06C,	-1);
	add_enum_member(id,"CUSTOMIZE_SPLIT_SCREEN",	0X2340FCCC,	-1);
	add_enum_member(id,"SC05_LINE_1",	0X234F34D1,	-1);
	add_enum_member(id,"SC05_LINE_2",	0X234F34D2,	-1);
	add_enum_member(id,"SC05_LINE_3",	0X234F34D3,	-1);
	add_enum_member(id,"SC05_LINE_4",	0X234F34D4,	-1);
	add_enum_member(id,"SHOP_BLURB_PERF_SHOP_1",	0X2352F304,	-1);
	add_enum_member(id,"ENGAGE_SHOWCASE_GENERIC_5_BODY",	0X2355921F,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_1_SUBJECT",	0X2363D940,	-1);
	add_enum_member(id,"ROOF_STYLE03_DUAL",	0X23698B6D,	-1);
	add_enum_member(id,"SMS_UNLOCK_22_BODY",	0X23C1DC8D,	-1);
	add_enum_member(id,"OPT_ASSIGN_INSTRUCTIONS",	0X23CF49AA,	-1);
	add_enum_member(id,"SMS_END_OF_GAME_MESSAGE_SUBJECT",	0X23E795C8,	-1);
	add_enum_member(id,"MU_POST_RACE_NEXT_RACE",	0X23F359B8,	-1);
	add_enum_member(id,"HUD_OT_GETAWAY_CATCH_THEM",	0X240616E2,	-1);
	add_enum_member(id,"IO_DEVICE_PS2_DESCRIPTION",	0X2408AD3D,	-1);
	add_enum_member(id,"CAR_SELECT_SLOT_LOCKED",	0X2415BE66,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STAB_DEMO_BODY",	0X241B0B3F,	-1);
	add_enum_member(id,"CSTATISTICS_OVERALL_WINS",	0X241BE921,	-1);
	add_enum_member(id,"SMS_LOC_GO_TO_CAR_LOT_NOW_SUBJECT",	0X24295BCB,	-1);
	add_enum_member(id,"TUNING_TYPE_CAMBER",	0X2430E6BE,	-1);
	add_enum_member(id,"OL_UNKNOWN_CONNECTION_MSG",	0X243F8E1E,	-1);
	add_enum_member(id,"KIT00_FRONT_BRAKE",	0X24435413,	-1);
	add_enum_member(id,"TYPE_2_RED_GREEN",	0X2451EA7C,	-1);
	add_enum_member(id,"OLX_RACE_MODE_OPTIONS",	0X245448DB,	-1);
	add_enum_member(id,"MAGAZINE_SELECT_VIEW_MAGAZINE",	0X246536EF,	-1);
	add_enum_member(id,"UI_MAIN_QUICK_RACE",	0X24909FD7,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE",	0X24911E04,	-1);
	add_enum_member(id,"SC01_05_CALEB_MYPOSSE",	0X24AAE6FF,	-1);
	add_enum_member(id,"OL_PS2_JOIN_CANT",	0X24AC4B22,	-1);
	add_enum_member(id,"LOADING_CAR_LOT_ALTERNATE",	0X24FE24FF,	-1);
	add_enum_member(id,"SMS_UNLOCK_55_SUBJECT",	0X25187435,	-1);
	add_enum_member(id,"OPT_PARTICLE_SYSTEM",	0X2522A4E9,	-1);
	add_enum_member(id,"WT_LIGHTWEIGHT_DOORS",	0X25770B4F,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_3_MEDIUM",	0X2580F6E3,	-1);
	add_enum_member(id,"OLX_PLAY_ANYWAY",	0X25AAC9BF,	-1);
	add_enum_member(id,"KIT00_FRONT_WHEEL",	0X25B9EB23,	-1);
	add_enum_member(id,"ROOF_STYLE04_DUAL",	0X25BEB40E,	-1);
	add_enum_member(id,"EA_TERMS_CONDITIONS_TITLE",	0X25C9AFE9,	-1);
	add_enum_member(id,"OL_INVALID_ACCOUNT",	0X25CB7F0C,	-1);
	add_enum_member(id,"TYPE_2_RED_CHARTREUSE",	0X25ED0381,	-1);
	add_enum_member(id,"HEADER_CRIB_BODY",	0X25F0C994,	-1);
	add_enum_member(id,"OL_SENDING_FRIEND_REQUEST",	0X25F16F40,	-1);
	add_enum_member(id,"SPONSOR_CONTRACT_TERMS",	0X26011F5A,	-1);
	add_enum_member(id,"TUNING_LOW",	0X26033125,	-1);
	add_enum_member(id,"SMS_UNLOCK_23_BODY",	0X2617052E,	-1);
	add_enum_member(id,"HELP_CARSPECIALTIES_SHOP_MAIN",	0X264A5F10,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_INSTALL_TRUNK_LAYOUT_REPLACE_WITH_STOCK",	0X266131CE,	-1);
	add_enum_member(id,"OPT_AUDIO_MASTER_VOL",	0X26782C3E,	-1);
	add_enum_member(id,"WT_LIGHTWEIGHT_SEATS",	0X2680C3C8,	-1);
	add_enum_member(id,"MINIMAP_CIRCUIT",	0X268D063C,	-1);
	add_enum_member(id,"CAR_SELECT_BROWSE_OTHER_CARS",	0X2699CF8E,	-1);
	add_enum_member(id,"V3_ALL_BUT_WHEEL_LEFT_PURGE",	0X26DDF58A,	-1);
	add_enum_member(id,"IG_MAXHP",	0X26E0B3CC,	-1);
	add_enum_member(id,"HELP_OL_NEWS",	0X26E857BE,	-1);
	add_enum_member(id,"CAR_SELECT_SPONSOR",	0X26FECEE7,	-1);
	add_enum_member(id,"UI_CRIB_DVD_ONE",	0X2719025A,	-1);
	add_enum_member(id,"UI_CRIB_DVD_TWO",	0X271918D2,	-1);
	add_enum_member(id,"CAR_LOT_MUST_BUY",	0X272EBEBA,	-1);
	add_enum_member(id,"HELP_OL_TRACK_SELECT",	0X27329D35,	-1);
	add_enum_member(id,"OL_MSG_LOGGING_IN_AS",	0X2756FB2F,	-1);
	add_enum_member(id,"SC01_03_TOOKOUTEDDIE",	0X2765D827,	-1);
	add_enum_member(id,"OPT_DEBUG_AI",	0X27670DC1,	-1);
	add_enum_member(id,"UI_ICE_DOORS",	0X27891593,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_1",	0X279643AD,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_2",	0X279643AE,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_3",	0X279643AF,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_4",	0X279643B0,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_5",	0X279643B1,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_6",	0X279643B2,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_7",	0X279643B3,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_8",	0X279643B4,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRIFT_RANDOM_9",	0X279643B5,	-1);
	add_enum_member(id,"VINYL_LAYER_1",	0X27B8F0DD,	-1);
	add_enum_member(id,"VINYL_LAYER_2",	0X27B8F0DE,	-1);
	add_enum_member(id,"VINYL_LAYER_3",	0X27B8F0DF,	-1);
	add_enum_member(id,"VINYL_LAYER_4",	0X27B8F0E0,	-1);
	add_enum_member(id,"QR_TOURNAMENT",	0X27C499EE,	-1);
	add_enum_member(id,"HUD_SHIFT_GOOD",	0X27D2DD45,	-1);
	add_enum_member(id,"HUD_SHIFT_OVER",	0X27D75CD8,	-1);
	add_enum_member(id,"SMS_UNLOCK_03_SUBJECT",	0X27EABC8E,	-1);
	add_enum_member(id,"TYPE_3_BOTH_HOOD_NOZZLES",	0X27FAFA1C,	-1);
	add_enum_member(id,"SPONSOR_INFO_SPARCO",	0X2800E645,	-1);
	add_enum_member(id,"ROOF_STYLE05_DUAL",	0X2813DCAF,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_MT_BODY",	0X2824AC08,	-1);
	add_enum_member(id,"OLX_ERROR_UPDATE_REQUIRED",	0X2850C61D,	-1);
	add_enum_member(id,"SMS_UNLOCK_24_BODY",	0X286C2DCF,	-1);
	add_enum_member(id,"OPT_AUDIO_MODE",	0X2881AB87,	-1);
	add_enum_member(id,"SMS_MSG_NUM_STORED",	0X288C79B7,	-1);
	add_enum_member(id,"OPT_CONTROLLER_VIBRATION",	0X28A690A2,	-1);
	add_enum_member(id,"TYPE_2_BOTH_LEFT_NOZZLES",	0X28B6EABC,	-1);
	add_enum_member(id,"UI_ICE_TRUNK_AUDIO_COMPONENTS",	0X28BF66F6,	-1);
	add_enum_member(id,"PC_DEMO_PERFORMANCE_TUNING",	0X28CF7C1B,	-1);
	add_enum_member(id,"OPT_WHEEL_OVERALL_STRENGTH",	0X28F42AE8,	-1);
	add_enum_member(id,"VINYL_CATEGORY_FLAGSET",	0X2909A9D3,	-1);
	add_enum_member(id,"SMS_UNLOCK_65_SUBJECT",	0X29230556,	-1);
	add_enum_member(id,"OPT_WHEEL_LINEAR",	0X296692A0,	-1);
	add_enum_member(id,"OL_MONTHLY_POINT_LEADERS_TITLE",	0X29742F2D,	-1);
	add_enum_member(id,"UI_ICE_NOS_PURGE",	0X2981CD3E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_HUD_BODY",	0X2994D892,	-1);
	add_enum_member(id,"TOP_HOOD_CLAW",	0X29F25A81,	-1);
	add_enum_member(id,"HUD_SECONDS_ABBREVIATION",	0X29F4BF03,	-1);
	add_enum_member(id,"RIMS_BRAND_RACINGHART",	0X29F66022,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SSC_BODY",	0X2A004E10,	-1);
	add_enum_member(id,"OL_MESS_BACK_ONLINE",	0X2A1DC425,	-1);
	add_enum_member(id,"OPT_ROAD_REFLECTION_DETAIL",	0X2A2A4AB3,	-1);
	add_enum_member(id,"CHOOSE_VINYL_COLOR",	0X2A2C6AEF,	-1);
	add_enum_member(id,"ERROR_UNPLUGGED_CONTROLLER_PSX2",	0X2A5B5F42,	-1);
	add_enum_member(id,"ERROR_UNPLUGGED_CONTROLLER_XBOX",	0X2A5F78F6,	-1);
	add_enum_member(id,"ROOF_STYLE06_DUAL",	0X2A690550,	-1);
	add_enum_member(id,"PC_NAV_DEACTIVATE_GPS",	0X2A795CD8,	-1);
	add_enum_member(id,"HELP_KEYBOARD_SPECIAL_CHARACTERS",	0X2A90C4D7,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_SAVE_THE_PROFILE",	0X2A9BA6F9,	-1);
	add_enum_member(id,"HUD_DVD_REWARD",	0X2AB10D61,	-1);
	add_enum_member(id,"SMS_UNLOCK_25_BODY",	0X2AC15670,	-1);
	add_enum_member(id,"CHOOSE_VINYL_LAYER",	0X2AC7D02D,	-1);
	add_enum_member(id,"VISUAL_PART_MUFFLER_TIP",	0X2ACED725,	-1);
	add_enum_member(id,"BANK_CASH",	0X2ACFFCF9,	-1);
	add_enum_member(id,"MONTH_MAY",	0X2B3041CB,	-1);
	add_enum_member(id,"ENGAGE_PERF_GENERIC_1_BODY",	0X2B360C2B,	-1);
	add_enum_member(id,"NO_DECAL",	0X2B5ABCF4,	-1);
	add_enum_member(id,"TYPE_1_ALL_NOZZLES",	0X2B7C9D3D,	-1);
	add_enum_member(id,"CONFIRM_CONVERT_TRUNK_TO_CARBON",	0X2B950C36,	-1);
	add_enum_member(id,"PC_NAV_WM_HIDE",	0X2BAB7212,	-1);
	add_enum_member(id,"HELP_OL_OVERALL_RANK",	0X2BBA4B21,	-1);
	add_enum_member(id,"OPT_RESET_DEFAULTS",	0X2BBCCA6B,	-1);
	add_enum_member(id,"AUDIO_COMP_NOS_1_MEDIUM",	0X2BDB07DE,	-1);
	add_enum_member(id,"SPONSOR_SIGN_BONUS",	0X2BF01869,	-1);
	add_enum_member(id,"SMS_UNLOCK_13_SUBJECT",	0X2BF54DAF,	-1);
	add_enum_member(id,"DECLINE",	0X2C119933,	-1);
	add_enum_member(id,"OL_INVITE_TO_VOICE_CHAT",	0X2C20C5DE,	-1);
	add_enum_member(id,"OL_READ_GROUP_MESSAGE",	0X2C248265,	-1);
	add_enum_member(id,"SH_GRAPHICS_BODY",	0X2C30C3D7,	-1);
	add_enum_member(id,"DECAL_ZONE_LEFTPANEL",	0X2C710C4D,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_DELETE_THE_PROFILE",	0X2C8EC31D,	-1);
	add_enum_member(id,"GAME_TIP_PARTS_SHOP",	0X2CA301E7,	-1);
	add_enum_member(id,"SMS_PURSE_LABEL",	0X2CA40D1F,	-1);
	add_enum_member(id,"ROOF_STYLE07_DUAL",	0X2CBE2DF1,	-1);
	add_enum_member(id,"SMS_MSG_NUM_UNREAD",	0X2CCBA545,	-1);
	add_enum_member(id,"LOAD_CAREER",	0X2CD70470,	-1);
	add_enum_member(id,"TYPE_3_MAROON",	0X2CE7C43E,	-1);
	add_enum_member(id,"SMS_UNLOCK_26_BODY",	0X2D167F11,	-1);
	add_enum_member(id,"OL_NEWS_DESCRIPTION",	0X2D647339,	-1);
	add_enum_member(id,"LOADING_TITLE_STEERING_CONTROLS",	0X2D71D011,	-1);
	add_enum_member(id,"ENGAGE_PERF_GENERIC_2_BODY",	0X2D8B34CC,	-1);
	add_enum_member(id,"MESSAGE_10_SUBJECT",	0X2D9A9333,	-1);
	add_enum_member(id,"HUD_TUNING_MAX_LATERAL_G_FORCES",	0X2DAB24E4,	-1);
	add_enum_member(id,"OL_RANK_TIER_0",	0X2DC3A547,	-1);
	add_enum_member(id,"OL_RANK_TIER_1",	0X2DC3A548,	-1);
	add_enum_member(id,"OL_RANK_TIER_2",	0X2DC3A549,	-1);
	add_enum_member(id,"OL_RANK_TIER_3",	0X2DC3A54A,	-1);
	add_enum_member(id,"OL_RANK_TIER_4",	0X2DC3A54B,	-1);
	add_enum_member(id,"OL_RANK_TIER_5",	0X2DC3A54C,	-1);
	add_enum_member(id,"OL_RANK_TIER_6",	0X2DC3A54D,	-1);
	add_enum_member(id,"OL_RANK_TIER_7",	0X2DC3A54E,	-1);
	add_enum_member(id,"OL_RANK_TIER_8",	0X2DC3A54F,	-1);
	add_enum_member(id,"OL_RANK_TIER_9",	0X2DC3A550,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_MT_TITLE",	0X2DFCDE7C,	-1);
	add_enum_member(id,"VISUAL_PART_BODY_KIT_TUNER_1",	0X2E01A0BA,	-1);
	add_enum_member(id,"VISUAL_PART_BODY_KIT_TUNER_2",	0X2E01A0BB,	-1);
	add_enum_member(id,"SPONSOR_INFO_NITROUS_EXPRESS",	0X2E10703A,	-1);
	add_enum_member(id,"SMS_OUTRUN_INTRO_BODY",	0X2E2BA736,	-1);
	add_enum_member(id,"MINIMAP_SPECIAL_EVENT",	0X2E37E28B,	-1);
	add_enum_member(id,"HELP_OLX_OPTI_MATCH_FILTERS",	0X2E3A9CF9,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_NOS",	0X2E782407,	-1);
	add_enum_member(id,"CSTATISTICS_HIDDEN_SHOPS_DISCOVERED",	0X2E8D7E4B,	-1);
	add_enum_member(id,"DYNO_TIP_FINAL_DRIVE_RATIO",	0X2EA43025,	-1);
	add_enum_member(id,"HOOD_SPLASH1",	0X2EB0B024,	-1);
	add_enum_member(id,"HOOD_SPLASH2",	0X2EB0B025,	-1);
	add_enum_member(id,"HOOD_SPLASH3",	0X2EB0B026,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_ERROR",	0X2EB94B88,	-1);
	add_enum_member(id,"ENGAGE_TIPS_OUTRUN_INTRO_DEMO_SUBJECT",	0X2EE4F90F,	-1);
	add_enum_member(id,"RSTATISTICS_GO_CAR_LOT",	0X2EEEAA14,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RCEBRKR_BODY",	0X2EF02DDC,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_MUST_REMOVE_WIDEBODY_FIRST",	0X2EFADF61,	-1);
	add_enum_member(id,"OL_MESS_SEARCHING",	0X2F0CFB04,	-1);
	add_enum_member(id,"ROOF_STYLE08_DUAL",	0X2F135692,	-1);
	add_enum_member(id,"MITSUBISHI",	0X2F22F860,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_10",	0X2F562143,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_11",	0X2F562144,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_12",	0X2F562145,	-1);
	add_enum_member(id,"SMS_UNLOCK_27_BODY",	0X2F6BA7B2,	-1);
	add_enum_member(id,"HELP_OPTIONS",	0X2F735833,	-1);
	add_enum_member(id,"UNLIMITED",	0X2F8344EA,	-1);
	add_enum_member(id,"AUDIO_COMP_NOS_1_LARGE",	0X2FCBCAA8,	-1);
	add_enum_member(id,"ENGAGE_PERF_GENERIC_3_BODY",	0X2FE05D6D,	-1);
	return id;
}

static Enums_1(id) {

	add_enum_member(id,"SMS_UNLOCK_23_SUBJECT",	0X2FFFDED0,	-1);
	add_enum_member(id,"MU_PAUSE_TRANSMISSION",	0X30003D27,	-1);
	add_enum_member(id,"RIMS_BRAND_ENKEI",	0X300B420B,	-1);
	add_enum_member(id,"SC01_06_SAM_PARTYKICKIN",	0X301BC2E3,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_FINANCE",	0X30372BBF,	-1);
	add_enum_member(id,"PC_DEMO_FREE_ROAM",	0X303BB325,	-1);
	add_enum_member(id,"AUDIO_COMP_NOS_1_SMALL",	0X3050C316,	-1);
	add_enum_member(id,"DEMO_GAME_TIP_PERFORMANCE_SHOP",	0X305CA8B3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GPS_INTRO_DEMO_SUBJECT",	0X306024AC,	-1);
	add_enum_member(id,"CAR_NAME_IMPREZAWRX",	0X306C1CCD,	-1);
	add_enum_member(id,"RIMS_BRAND_KONIG",	0X30786EB7,	-1);
	add_enum_member(id,"OL_BLOCK",	0X308DB484,	-1);
	add_enum_member(id,"OL_MSG_LAN_CONFIRM_EXIT_SERVER_MODE",	0X309B91BA,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_ALPINE",	0X30AFBCB0,	-1);
	add_enum_member(id,"RIMS_BRAND_OASIS",	0X30B938BE,	-1);
	add_enum_member(id,"FLAGS_USA",	0X30C2B7F4,	-1);
	add_enum_member(id,"OL_ELITE",	0X30C3E6AC,	-1);
	add_enum_member(id,"OL_WAITING_FOR_FINAL_SCORE",	0X30CBDCB6,	-1);
	add_enum_member(id,"QR_STREET_CROSS",	0X30DA61E1,	-1);
	add_enum_member(id,"CONFIRM_QUIT_DEMO",	0X30EB8F53,	-1);
	add_enum_member(id,"CONFIRM_QUIT_GAME",	0X30ED2368,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_REMOVE_ALL_DECALS",	0X30F7037F,	-1);
	add_enum_member(id,"RIMS_BRAND_STOCK",	0X310BF423,	-1);
	add_enum_member(id,"ROOF_STYLE13_OFFSET",	0X3112BFEF,	-1);
	add_enum_member(id,"HUD_GPS_NO_TRACK_PATH",	0X31139B65,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_CANNOT_START_COUNTDOWN",	0X313F8CC5,	-1);
	add_enum_member(id,"ROOF_STYLE09_DUAL",	0X31687F33,	-1);
	add_enum_member(id,"CONFIRM_PURCHASE_CONVERT_TRUNK_TO_CARBON",	0X3175F2B0,	-1);
	add_enum_member(id,"CAR_SELECT_CONFIRM_BROWSE_CRIB",	0X3192F5D1,	-1);
	add_enum_member(id,"SMS_FROM_CAR_SPECIALTIES",	0X3194B26F,	-1);
	add_enum_member(id,"FLAG_UK_A",	0X31963938,	-1);
	add_enum_member(id,"FLAG_UK_B",	0X31963939,	-1);
	add_enum_member(id,"HELP_OL_CLIENT_HOST_GAME_ROOM",	0X319A6272,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_STADIUM",	0X31AB5422,	-1);
	add_enum_member(id,"SMS_UNLOCK_28_BODY",	0X31C0D053,	-1);
	add_enum_member(id,"OL_NET_NO_LINK",	0X31D451C9,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_DRAG",	0X31E50D09,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_DYNO",	0X31E52C85,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_TIPS",	0X31EDAECB,	-1);
	add_enum_member(id,"ADD_VINYL_TO_INVOICE",	0X31FBC167,	-1);
	add_enum_member(id,"SPONSOR_INFO_STILLEN",	0X31FFF078,	-1);
	add_enum_member(id,"PC_DEMO_CAREER_DIF",	0X320964F9,	-1);
	add_enum_member(id,"ENGAGE_TIPS_LOT_BODY",	0X321149A0,	-1);
	add_enum_member(id,"TYPE_3_RED_CHARTREUSE",	0X32222962,	-1);
	add_enum_member(id,"PS2_DIRECTIONAL_BUTTONS",	0X32675D4F,	-1);
	add_enum_member(id,"HELP_OL_CLIENT_HOST_OPTIONS_OFFENSIVE",	0X3291A14C,	-1);
	add_enum_member(id,"HUD_BANK",	0X3298CCDB,	-1);
	add_enum_member(id,"HUD_BEST",	0X3298DE8D,	-1);
	add_enum_member(id,"HUD_TIME",	0X32A2CD8E,	-1);
	add_enum_member(id,"CAR_NAME_ESCALADE",	0X32BB1206,	-1);
	add_enum_member(id,"OL_XBOX_SIGN_IN",	0X32CD4820,	-1);
	add_enum_member(id,"OL_MSG_JOIN_GAME_NOT_AVAILABLE",	0X331F4F58,	-1);
	add_enum_member(id,"ENTER_PASSWORD",	0X332C0B6F,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_SELL_PART",	0X332E1D34,	-1);
	add_enum_member(id,"OL_SEND_FRIEND_REQUEST",	0X333F7902,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_BREMBO",	0X336B7FAE,	-1);
	add_enum_member(id,"QR_OPT_OPPONENTS",	0X3384A679,	-1);
	add_enum_member(id,"X_1000_RPM",	0X3389F685,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_GTFIN_BODY",	0X33AC30FF,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_DECAL_PAINT_SELECT",	0X33C11663,	-1);
	add_enum_member(id,"CONFIRM_BACK_TO_WORLD_MAP",	0X33C42E03,	-1);
	add_enum_member(id,"SMS_UNIQUE_STAGE_2_VISUAL_1_BODY",	0X33EC155C,	-1);
	add_enum_member(id,"SMS_UNLOCK_33_SUBJECT",	0X340A6FF1,	-1);
	add_enum_member(id,"SMS_UNLOCK_29_BODY",	0X3415F8F4,	-1);
	add_enum_member(id,"OL_SEND_INVITE",	0X3438B351,	-1);
	add_enum_member(id,"OL_VOICE_CHAT_DISC",	0X3454A3B0,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_SERVER_REJECTED",	0X346CA432,	-1);
	add_enum_member(id,"SMS_FROM_DVD_COVER",	0X34A89700,	-1);
	add_enum_member(id,"DEMO_PERFORMANCE_SHOP_PREVIEW",	0X34C1D90F,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_INVALID_PARENTAL_EMAIL",	0X34D83742,	-1);
	add_enum_member(id,"VINYL_CATEGORY_MANUFACTURER",	0X34E6ADBA,	-1);
	add_enum_member(id,"HELP_CRIB_CHANGEPARTS_CARSPECIALTIES_AUDIOCOMPONENTS",	0X34E8C5B8,	-1);
	add_enum_member(id,"OL_VOICE_CHAT_INVITATION_HEADER",	0X3503BA7A,	-1);
	add_enum_member(id,"QR_DRAG",	0X35102EDF,	-1);
	add_enum_member(id,"UI_PAUSE_RENDERING_OPTIONS_TITLE",	0X35457863,	-1);
	add_enum_member(id,"OL_LOGIN_ESRB_NOTICE",	0X356457BE,	-1);
	add_enum_member(id,"MU_PAUSE_VIBRATION_GC",	0X358CDBD4,	-1);
	add_enum_member(id,"MU_PAUSE_VIBRATION_PC",	0X358CDCFD,	-1);
	add_enum_member(id,"SHOP_BLURB_ICE_SHOP_1",	0X359A9188,	-1);
	add_enum_member(id,"OL_GAME_ROOM_KICK_PLAYER",	0X35AAA91C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF3_SUBJECT",	0X35B4E6B3,	-1);
	add_enum_member(id,"PC_KEYS_LOOK_BACK",	0X35B9F571,	-1);
	add_enum_member(id,"DVDSTATISTICS_TITLE",	0X35CCC129,	-1);
	add_enum_member(id,"NO_HYDRAULICS",	0X35E23BF3,	-1);
	add_enum_member(id,"OL_ERROR_KICKING_PLAYER",	0X35EC190E,	-1);
	add_enum_member(id,"SU_FRONT_AND_REAR_SWAY_BARS",	0X362F9974,	-1);
	add_enum_member(id,"OL_CLIENT_OPTIONS",	0X36422263,	-1);
	add_enum_member(id,"PRS_ZERO_HUNDRED_CAPS",	0X365DC8E2,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_DELETE_TUNED_CAR",	0X367161F5,	-1);
	add_enum_member(id,"OLX_ERROR_CHANGE_GAMERTAG",	0X36A462C7,	-1);
	add_enum_member(id,"HELP_OL_GAMEMODE_SELECT",	0X36BEC45F,	-1);
	add_enum_member(id,"TUNING_STRONG",	0X36C30E70,	-1);
	add_enum_member(id,"DRIFT_LEADER",	0X36C5FAE4,	-1);
	add_enum_member(id,"ENGAGE_TIPS_REALTUNE_BODY",	0X36D56BF1,	-1);
	add_enum_member(id,"HELP_OL_PS2_USEEXISTING",	0X36DA152D,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_APPLY_PART_REMOVE_DECALS",	0X36E577C2,	-1);
	add_enum_member(id,"LANGUAGE_OL_MSG_CANT_FIND_NAME",	0X370269E8,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_CARBON_VINYL_HOOD",	0X3706F93D,	-1);
	add_enum_member(id,"DYNO_ADJUST",	0X3708C383,	-1);
	add_enum_member(id,"IG_TopSpeed",	0X3712CC32,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_PARENT_EMAIL",	0X371B340F,	-1);
	add_enum_member(id,"MINIMAP_GRAPHICS",	0X373DAD1A,	-1);
	add_enum_member(id,"OPT_VIDEO_SCREEN_POS_VERTICAL",	0X375B62F1,	-1);
	add_enum_member(id,"SMS_DVD_COVER_6_SUBJECT",	0X37A77B51,	-1);
	add_enum_member(id,"DYNO_RESULTS",	0X37B7246A,	-1);
	add_enum_member(id,"LABEL_POWERSLIDE",	0X37B975DC,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_1",	0X37BCCAB3,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_2",	0X37BCCAB4,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_3",	0X37BCCAB5,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_4",	0X37BCCAB6,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_5",	0X37BCCAB7,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_6",	0X37BCCAB8,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_7",	0X37BCCAB9,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_8",	0X37BCCABA,	-1);
	add_enum_member(id,"ENGAGE_DRAG_RANDOM_9",	0X37BCCABB,	-1);
	add_enum_member(id,"MU_PAUSE_SAVE_GAME",	0X37D13AE5,	-1);
	add_enum_member(id,"SC01_04_STRAIGHTUP",	0X37D15F43,	-1);
	add_enum_member(id,"PC_DEMO_FREE_TITLE",	0X37D34F78,	-1);
	add_enum_member(id,"OPT_PC_SECONDARY_CONFIG",	0X37E740E0,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_KENWOOD",	0X37FD17EE,	-1);
	add_enum_member(id,"SMS_UNLOCK_43_SUBJECT",	0X38150112,	-1);
	add_enum_member(id,"HUD_TIME_UP",	0X381B2A32,	-1);
	add_enum_member(id,"OPT_DISPLAY_CUSTOMIZE",	0X381FE1E9,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_USZ_BODY",	0X382A9E49,	-1);
	add_enum_member(id,"HOOD_STRIPE1",	0X38763B90,	-1);
	add_enum_member(id,"HOOD_STRIPE2",	0X38763B91,	-1);
	add_enum_member(id,"HOOD_STRIPE3",	0X38763B92,	-1);
	add_enum_member(id,"CC_GRAPHICS_BODY",	0X38794102,	-1);
	add_enum_member(id,"PC_SEARCH_HEADER",	0X3888A7EF,	-1);
	add_enum_member(id,"OL_RANKED_GAME",	0X3895D8E7,	-1);
	add_enum_member(id,"LABEL_TUNING_TORQUE",	0X38D548D2,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SWT_TITLE",	0X38F21DD9,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_PREVIOUS_TIME",	0X39052317,	-1);
	add_enum_member(id,"FLAG_ONECOLOR",	0X390E7E99,	-1);
	add_enum_member(id,"OLX_ERROR_EMAIL_ACCOUNT",	0X391EF6AE,	-1);
	add_enum_member(id,"HELP_OL_PERSONAL_RANK",	0X392CDCB0,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_2_MEDIUM",	0X393F2202,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_WORSE_PART",	0X3949ABEE,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF_BODY",	0X395A51BE,	-1);
	add_enum_member(id,"SMS_INSTRUCTION_SUBJECT",	0X395AB9E2,	-1);
	add_enum_member(id,"OL_LOBBY_REFRESH",	0X39751BDF,	-1);
	add_enum_member(id,"TUNING_TYPE_FRONTGRIP",	0X3988FAEF,	-1);
	add_enum_member(id,"IO_DEVICE_XBOX_DESCRIPTION",	0X3991DD49,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_CREATION_ERROR",	0X39B57034,	-1);
	add_enum_member(id,"UI_GROUP_FLAG",	0X39C79AA2,	-1);
	add_enum_member(id,"SPONSOR_ACCEPT",	0X39DF9562,	-1);
	add_enum_member(id,"TUTORIAL_MESSAGE_SUBJECT",	0X39E4E946,	-1);
	add_enum_member(id,"EN_CAT_BACK_EXHAUST_SYSTEM",	0X39E6725E,	-1);
	add_enum_member(id,"OPT_VIDEO_FE_SIZE",	0X39EF3A6C,	-1);
	add_enum_member(id,"ASK_ENTER_DRIFT_SUBJECT",	0X3A10A7C2,	-1);
	add_enum_member(id,"LOADING_TITLE_CAR_SPECIALTIES",	0X3A341CE8,	-1);
	add_enum_member(id,"PC_OL_LOBBY_FILTER",	0X3A36F0A8,	-1);
	add_enum_member(id,"BR_RACE_COMPOUND_BRAKE_PADS",	0X3A3C63FC,	-1);
	add_enum_member(id,"OL_QUIT_TUNING_DYNO",	0X3A5B7B29,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_JACKSON_HEIGHTS_BODY",	0X3A608BF3,	-1);
	add_enum_member(id,"ENGAGE_TIP_CAREER_PROG_SUBJECT",	0X3A64A189,	-1);
	add_enum_member(id,"TI_EXTREME_PERFORMANCE_TIRES",	0X3A6EEEEC,	-1);
	add_enum_member(id,"SPONSOR_ALPINE",	0X3A89A38B,	-1);
	add_enum_member(id,"CONFIRM_START_BURNOUT_3_DEMO",	0X3A9AD81E,	-1);
	add_enum_member(id,"CUSTOMIZE_HUD_CHOOSE_BACKING_COLOR",	0X3A9CCF4E,	-1);
	add_enum_member(id,"PC_NAV_RIGHT_TRIGGER",	0X3AC39906,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_TUR_TITLE",	0X3AF66B96,	-1);
	add_enum_member(id,"CSTATISTICS_SPENT_ON_CAR",	0X3B10CB47,	-1);
	add_enum_member(id,"OL_EA_ACCOUNT_LOCKED",	0X3B33C4FC,	-1);
	add_enum_member(id,"PAINT_ENGINE",	0X3B3BFAF0,	-1);
	add_enum_member(id,"QR_PREVIOUS_TIME_LABEL",	0X3B4A1ECB,	-1);
	add_enum_member(id,"SMS_READ_MESSAGE",	0X3B550C71,	-1);
	add_enum_member(id,"BR_CROSS_DRILLED_AND_SLOTTED_ROTORS",	0X3B67B393,	-1);
	add_enum_member(id,"QR_BEST_DRIFT",	0X3B7B9567,	-1);
	add_enum_member(id,"BRIGHT_RED",	0X3B7E6AD9,	-1);
	add_enum_member(id,"SMS_OUTRUN_VICTORY_BODY",	0X3B959DBA,	-1);
	add_enum_member(id,"OL_TRACK_SELECT",	0X3BC6066D,	-1);
	add_enum_member(id,"OL_PERSONAL_STATS_TITLE",	0X3BFE592C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL_BODY",	0X3BFF6152,	-1);
	add_enum_member(id,"OL_LOGIN_TITLE",	0X3C149013,	-1);
	add_enum_member(id,"SMS_UNLOCK_53_SUBJECT",	0X3C1F9233,	-1);
	add_enum_member(id,"VINYL_CATEGORY_CIRCUIT",	0X3C4CF1C0,	-1);
	add_enum_member(id,"SMS_GO_TO_INBOX",	0X3C4D1148,	-1);
	add_enum_member(id,"UI_CRIB_CAR_PURCHASE",	0X3C51D18B,	-1);
	add_enum_member(id,"OL_FILTER_SAME_LEVEL",	0X3C78FC5B,	-1);
	add_enum_member(id,"SMS_INTRO_HIDDEN_SUBJECT",	0X3CF13157,	-1);
	add_enum_member(id,"OL_EA_LOGIN_USE_FOUND_ACCOUNT",	0X3D0447AA,	-1);
	add_enum_member(id,"WINDOW_TINT_STOCK",	0X3D263938,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH4_SUBJECT",	0X3D358519,	-1);
	add_enum_member(id,"SPONSOR_BREMBO",	0X3D456689,	-1);
	add_enum_member(id,"ONLINE_AGE_LEGALTEXT",	0X3D5E37B9,	-1);
	add_enum_member(id,"CAR_NAME_SKYLINE",	0X3D698353,	-1);
	add_enum_member(id,"ASK_ENTER_SPON_DRAG_SUBJECT",	0X3D6A70E6,	-1);
	add_enum_member(id,"DEMO_GAME_TIP_CAR_LOT",	0X3DB3758C,	-1);
	add_enum_member(id,"VISUAL_PART_HEAD_LIGHT",	0X3DC6A111,	-1);
	add_enum_member(id,"SPONSOR_REQUIRED_RACES",	0X3DE28F60,	-1);
	add_enum_member(id,"LABEL_CREATE_USER_NAME",	0X3DE4EFF0,	-1);
	add_enum_member(id,"HELP_OL_VIEWCAR",	0X3DE94DB2,	-1);
	add_enum_member(id,"SC01_01_6MONTHSAGO",	0X3E0DE37B,	-1);
	add_enum_member(id,"OL_MESS_NOTICE",	0X3E10EAB2,	-1);
	add_enum_member(id,"LAN_OL_LOBBY_JOIN_GAME",	0X3E56DED3,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_STF_TITLE",	0X3E7D4CA8,	-1);
	add_enum_member(id,"RIMS_BRAND_KAIZER",	0X3E867905,	-1);
	add_enum_member(id,"ICE_OPEN_CLOSE_DOORS",	0X3E9431DC,	-1);
	add_enum_member(id,"PC_KEYS_SHIFT_UP",	0X3EB318CE,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_USZ_TITLE",	0X3EC118DD,	-1);
	add_enum_member(id,"SMS_UNLOCK_01_SUBJECT",	0X3EF1DA8C,	-1);
	add_enum_member(id,"OL_MSG_NEWS_DOWNLOAD_FAILED",	0X3EFE5317,	-1);
	add_enum_member(id,"NEON_LAVENDER",	0X3F0BBDFF,	-1);
	add_enum_member(id,"Career_Select_Sponsor",	0X3F0DCE03,	-1);
	add_enum_member(id,"HELP_OL_PS2_PERSONA_SELECT",	0X3F1409CC,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_GREDDY",	0X3F1524D6,	-1);
	add_enum_member(id,"UI_ICE_TRUNK_AUDIO_COMPONENT",	0X3F4B9E43,	-1);
	add_enum_member(id,"VINYL_CATEGORY_WILDSET",	0X3F6DA129,	-1);
	add_enum_member(id,"SAVELOAD_INFORM_MEMCARD_OUT_AUTOSAVE_CONFIRM_OVERWRITE",	0X3F7C1B01,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_FAILED_TO_CREATE_GAME",	0X3F920248,	-1);
	add_enum_member(id,"AUDIO_COMP_NOS_0_MEDIUM",	0X3F9932FD,	-1);
	add_enum_member(id,"CAR_NAME_IMPREZA",	0X3FADD34C,	-1);
	add_enum_member(id,"DEMO_Marketing_Map_copy",	0X3FCD641C,	-1);
	add_enum_member(id,"DEMO_WARNING",	0X3FE6FAB9,	-1);
	add_enum_member(id,"PRW_REPUTATION_POINTS_WON",	0X40152751,	-1);
	add_enum_member(id,"SMS_UNLOCK_63_SUBJECT",	0X402A2354,	-1);
	add_enum_member(id,"TYPE_2_CHARTREUSE",	0X403ECCC7,	-1);
	add_enum_member(id,"CONFIRM_QUIT_TUNING",	0X40813F63,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_EATRAX",	0X40889E10,	-1);
	add_enum_member(id,"PC_KEYS_THROTTLE",	0X409607E2,	-1);
	add_enum_member(id,"TYPE_2_MAROON",	0X40A5EF5D,	-1);
	add_enum_member(id,"MINIMAP_BODY",	0X40C7F697,	-1);
	add_enum_member(id,"MINIMAP_DRAG",	0X40C91BA7,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SLBRK_SUBJECT",	0X40D7A271,	-1);
	add_enum_member(id,"ONLINE_MONTHLY_RANKINGS_TITLE",	0X40FAF14B,	-1);
	add_enum_member(id,"PC_NAV_DELETE",	0X4100ADA8,	-1);
	add_enum_member(id,"TEST_PAUSE_SAVE_GAME",	0X410258C3,	-1);
	add_enum_member(id,"RIMS_BRAND_LEXANI",	0X412BD420,	-1);
	add_enum_member(id,"V1_ALL_BUT_WHEEL_RIGHT_PURGE",	0X414B91DB,	-1);
	add_enum_member(id,"OPT_PLAYER_CAM_HOOD",	0X414F19D7,	-1);
	add_enum_member(id,"OPT_AUDIO_FE_MUSIC_VOL",	0X418E681D,	-1);
	add_enum_member(id,"PC_KEYS_CHANGE_CAMERA",	0X419CA63A,	-1);
	add_enum_member(id,"OLX_ERROR_NEW_MSG",	0X41AFAF4A,	-1);
	add_enum_member(id,"DISCONNECT",	0X41BAF149,	-1);
	add_enum_member(id,"CC_BODYSHOP_1_BODY",	0X41CCBE09,	-1);
	add_enum_member(id,"KB_HELP",	0X41E233F4,	-1);
	add_enum_member(id,"MESSAGE_09_SUBJECT",	0X41EFFB1B,	-1);
	add_enum_member(id,"OPT_DISPLAY",	0X4204D527,	-1);
	add_enum_member(id,"MONTH_NOVEMBER",	0X4205BC22,	-1);
	add_enum_member(id,"LABEL_TOTAL_COST",	0X420AA71A,	-1);
	add_enum_member(id,"CAR_NAME_INTEGRA",	0X4244447E,	-1);
	add_enum_member(id,"HELP_LOAD_PROFILE",	0X424D7A17,	-1);
	add_enum_member(id,"HELP_LOAD_PROFILE_NEW",	0X42501AA0,	-1);
	add_enum_member(id,"HELP_LOAD_PROFILE_ONE",	0X42501FF8,	-1);
	add_enum_member(id,"ONLINE_PARENTAL_EMAIL",	0X427BA061,	-1);
	add_enum_member(id,"NOT_INSTALLED",	0X4287206F,	-1);
	add_enum_member(id,"TR_HIGH_PERFORMANCE_CLUTCH",	0X42A81C57,	-1);
	add_enum_member(id,"DVD_NOT_AVAILABLE",	0X42E57A0D,	-1);
	add_enum_member(id,"SMS_UNLOCK_11_SUBJECT",	0X42FC6BAD,	-1);
	add_enum_member(id,"OL_MSG_LAN_LOOKING_FOR_SERVERS",	0X43003B5B,	-1);
	add_enum_member(id,"OLX_ERROR_NETWORK_CONDITIONS",	0X430C6CDD,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_COMMENTS",	0X4339D9F2,	-1);
	add_enum_member(id,"HUD_FINISH_FIFTH",	0X4342D430,	-1);
	add_enum_member(id,"ACTIVATE_GPS",	0X43512519,	-1);
	add_enum_member(id,"TEST_PAUSE_DYNO_TEST",	0X436C91D4,	-1);
	add_enum_member(id,"LOADING_TITLE_DOWNHILL_DRIFT",	0X437C6A36,	-1);
	add_enum_member(id,"UI_ICE_NEON_ENGINE",	0X437E4111,	-1);
	add_enum_member(id,"ONLINE_AGE_TITLE",	0X438AEAF1,	-1);
	add_enum_member(id,"ORDINAL_EIGHTH",	0X438DA7C0,	-1);
	add_enum_member(id,"HELP_BODY_SHOP_PART_SELECT",	0X43A05263,	-1);
	add_enum_member(id,"TUNING_MAX_HP_FORMAT",	0X43AEEF78,	-1);
	add_enum_member(id,"OL_CANCEL",	0X43D1D33F,	-1);
	add_enum_member(id,"EVENT_REWARD_UG_VISUAL",	0X43EEB333,	-1);
	add_enum_member(id,"BR_STEEL_BRAIDED_BRAKE_LINES",	0X4402F357,	-1);
	add_enum_member(id,"STYLE_HANGTIME",	0X44167CBC,	-1);
	add_enum_member(id,"CC_BODYSHOP_2_BODY",	0X4421E6AA,	-1);
	add_enum_member(id,"OL_SWITCH_TO_RANKED_CAR",	0X442B3936,	-1);
	add_enum_member(id,"OL_MSG_ATTEMP_NEW_ACCOUNT",	0X44345F7F,	-1);
	add_enum_member(id,"HUD_FINISH_THIRD",	0X443FAB5A,	-1);
	add_enum_member(id,"CAR_LOT_MESSAGE_1",	0X4477BAF7,	-1);
	add_enum_member(id,"CAR_LOT_MESSAGE_2",	0X4477BAF8,	-1);
	add_enum_member(id,"CAR_LOT_MESSAGE_3",	0X4477BAF9,	-1);
	add_enum_member(id,"HANDLING",	0X447CAC44,	-1);
	add_enum_member(id,"OLX_CANCEL_LOBBY_CONNECTION",	0X4492955D,	-1);
	add_enum_member(id,"CONFIRM_RESET_CUSTOMIZE_CATEGORY_DECALS",	0X449A9DD9,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MEGA_SUBJECT",	0X44A217CD,	-1);
	add_enum_member(id,"OL_PLAYER_DISCONNECTED",	0X44ABAC78,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_PART",	0X44B7167F,	-1);
	add_enum_member(id,"ROOF_STYLE12_OFFSET",	0X44D0EB0E,	-1);
	add_enum_member(id,"UI_CAREER_CAR_SELECT",	0X451879E2,	-1);
	add_enum_member(id,"OL_UNBLOCK",	0X452383E7,	-1);
	add_enum_member(id,"HELP_OL__TRADECAR_MAIN",	0X452606CA,	-1);
	add_enum_member(id,"MU_PAUSE_QUIT_TO_CRIB",	0X453890E1,	-1);
	add_enum_member(id,"OL_EMAIL_INFORMATION",	0X45532746,	-1);
	add_enum_member(id,"RETURN_DYNO_CONFIRMATION",	0X455C3F80,	-1);
	add_enum_member(id,"AUDIO_COMP_EMPTY_MEDIUM",	0X456409AD,	-1);
	add_enum_member(id,"OL_GAME_ROOM_RACE_LINE",	0X459EA230,	-1);
	add_enum_member(id,"MUFFLER_PAINT",	0X459EE68B,	-1);
	add_enum_member(id,"TITLE_SCREEN_START_PROMPT_XBOX",	0X45A6A9CE,	-1);
	add_enum_member(id,"ROOF_STYLE09_OFFSET",	0X46214C34,	-1);
	add_enum_member(id,"NEON_BLUE_PULSE",	0X462A24DE,	-1);
	add_enum_member(id,"OL_EXIT_MESSAGE",	0X462D17B7,	-1);
	add_enum_member(id,"OL_DELETE_PERSONA_CONFIRM",	0X46527FD0,	-1);
	add_enum_member(id,"ORDINAL_FOURTH",	0X46573B3F,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE",	0X468770AF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_WEATHER_BODY",	0X46905B81,	-1);
	add_enum_member(id,"DYNO_TIP_NITROUS",	0X46B41BB8,	-1);
	add_enum_member(id,"PAINT_SHOP_HEADER",	0X46C41A7C,	-1);
	add_enum_member(id,"STRING_ENTER_GARAGE",	0X46E61779,	-1);
	add_enum_member(id,"SMS_UNLOCK_21_SUBJECT",	0X4706FCCE,	-1);
	add_enum_member(id,"HELP_LOAD_PROFILE_BOOT_UP",	0X4754130E,	-1);
	add_enum_member(id,"QR_GAME_OPTIONS",	0X47597606,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_NITROUS_EXPRESS",	0X47ABE874,	-1);
	add_enum_member(id,"OLX_RACE_MODE_SELECT",	0X47B276EF,	-1);
	add_enum_member(id,"OL_MSG_ERROR_UPLOADING_CAR_RETRY",	0X47C515D5,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_COAL_HARBOR_WEST_BODY",	0X47CFBEDD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AUDIO_BODY",	0X47D572A3,	-1);
	add_enum_member(id,"PC_DEMO_TUNING_TITLE",	0X47D7108B,	-1);
	add_enum_member(id,"OL_CAR_CLASS_RESTRICTION",	0X480E0F39,	-1);
	add_enum_member(id,"WORLD_CHALLENGE_SUBJECT_UNIQUE_PARTS",	0X48157D57,	-1);
	add_enum_member(id,"UI_ONLINE_NEWS",	0X4815FDBD,	-1);
	add_enum_member(id,"QR_OPT_LAPS",	0X48494E83,	-1);
	add_enum_member(id,"KOREAN_Q",	0X485247CF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH_BODY",	0X485D94A3,	-1);
	add_enum_member(id,"LOADING_TITLE_BEGINERS_MEGALOW",	0X48665617,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STAB_BODY",	0X48B8729B,	-1);
	add_enum_member(id,"DECAL_SHOP_TITLE",	0X48C05672,	-1);
	add_enum_member(id,"OL_XBOXISP_LOAD_USERS",	0X48D82996,	-1);
	add_enum_member(id,"TYPE_3_RIGHT_HOOD_NOZZLE",	0X48E220DA,	-1);
	add_enum_member(id,"SPONSOR_GREDDY",	0X48EF0BB1,	-1);
	add_enum_member(id,"PRR_VICTORY_TITLE",	0X48FACF43,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_INVALID_LENGTH",	0X4904CDDE,	-1);
	add_enum_member(id,"OL_DISQUALIFIED",	0X490A722D,	-1);
	add_enum_member(id,"TYPE_3_BOTH_RIGHT_NOZZLES",	0X490C1CB0,	-1);
	add_enum_member(id,"THE_CRIB_TITLE",	0X4922B6A0,	-1);
	add_enum_member(id,"RSTATISTICS_SPONSOR_EVENTS",	0X4940A0E3,	-1);
	add_enum_member(id,"TYPE_1_UPPER_LEFT_LOWER_RIGHT_NOZZLES",	0X49652AFF,	-1);
	add_enum_member(id,"MU_PAUSE_MAP_THREE_D",	0X496817D5,	-1);
	add_enum_member(id,"SMS_PERF_GENERIC_3_SUBJECT",	0X49D0555B,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_10",	0X49E33645,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_11",	0X49E33646,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_12",	0X49E33647,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_13",	0X49E33648,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_14",	0X49E33649,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_15",	0X49E3364A,	-1);
	add_enum_member(id,"PRS_QUARTER_MILE_TIME",	0X49FD5DCB,	-1);
	add_enum_member(id,"VINYL_CATEGORY_CONTEST",	0X4A0C932D,	-1);
	add_enum_member(id,"PC_KEYS_ENGAGE",	0X4A1341B3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RCEBRKR_DEMO_SUBJECT",	0X4A32E382,	-1);
	add_enum_member(id,"LABEL_CONNECTION",	0X4A3B8A4E,	-1);
	add_enum_member(id,"MU_PAUSE_DRAG_STEERING",	0X4A4D7DFB,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF_SUBJECT",	0X4A5EA160,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_INVALID_NAME",	0X4A69F7AA,	-1);
	add_enum_member(id,"V2_ALL_BUT_HOOD_RIGHT_PURGE",	0X4A6CD391,	-1);
	add_enum_member(id,"INGAME_DISCONNECTED_MSG",	0X4A8764A8,	-1);
	add_enum_member(id,"SPONSOR_PLASMAGLOW",	0X4A8A8A69,	-1);
	add_enum_member(id,"VINYL_CATEGORY_FLAMESET",	0X4AA403DE,	-1);
	add_enum_member(id,"UI_ONLINE_LOBBY",	0X4AB6A4F8,	-1);
	add_enum_member(id,"EN_PORT_AND_POLISH_HEADS",	0X4AC28A7A,	-1);
	add_enum_member(id,"OPT_GEOMETRY_DETAIL",	0X4AC50BCF,	-1);
	add_enum_member(id,"OL_INVALID_CAR",	0X4AD41E75,	-1);
	add_enum_member(id,"LABEL_TOP_SPEED",	0X4AD62EE1,	-1);
	add_enum_member(id,"SAVELOAD_PROFILE",	0X4AF2E79E,	-1);
	add_enum_member(id,"SMS_UNLOCK_31_SUBJECT",	0X4B118DEF,	-1);
	add_enum_member(id,"OL_MSG_CANCELLING_BUDDY_REQUEST",	0X4B14AF4E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SLBRK_BODY",	0X4B27846F,	-1);
	add_enum_member(id,"UI_ONLINE_QUICKJOIN",	0X4B42FBED,	-1);
	add_enum_member(id,"OLX_ERROR_SESSION_UNAVAILABLE",	0X4B5C9721,	-1);
	add_enum_member(id,"SMS_SUBJECT_HEADER",	0X4B5DE3E9,	-1);
	add_enum_member(id,"HUD_DNF_TOTALLED",	0X4BA0D22F,	-1);
	add_enum_member(id,"STYLE_TIMEBONUS",	0X4BE31125,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_1",	0X4C22CEE8,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_2",	0X4C22CEE9,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_3",	0X4C22CEEA,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_4",	0X4C22CEEB,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_5",	0X4C22CEEC,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_6",	0X4C22CEED,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_7",	0X4C22CEEE,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_8",	0X4C22CEEF,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_9",	0X4C22CEF0,	-1);
	add_enum_member(id,"HELP_OL_PS2_NETWORK_SELECT",	0X4C713B1E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RCEBRKR_SUBJECT",	0X4C8770BE,	-1);
	add_enum_member(id,"KIT00_BODY",	0X4C9186F4,	-1);
	add_enum_member(id,"LOADING_TITLE_UNRANKED_ELITE",	0X4C938DC7,	-1);
	add_enum_member(id,"KIT00_HOOD",	0X4C94D290,	-1);
	add_enum_member(id,"QR_RACE_TYPE_LABEL",	0X4C967CDC,	-1);
	add_enum_member(id,"JUKEBOX_INORDER",	0X4CA36B89,	-1);
	add_enum_member(id,"OL_MESS_INVITE_DECLINED_YOUR_BLOCKED",	0X4CD52237,	-1);
	add_enum_member(id,"OPT_FSAA",	0X4CD775AC,	-1);
	add_enum_member(id,"OPT_RAIN",	0X4CDDBEBB,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_1_MEDIUM",	0X4CFD4D21,	-1);
	add_enum_member(id,"QR_OPT_DIFFICULTY",	0X4D156786,	-1);
	add_enum_member(id,"HELP_OL__CARSPECIALTIES_NEON_SELECT",	0X4D38DBDA,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_SOUTH_MARKET",	0X4D451881,	-1);
	add_enum_member(id,"ENGAGE_TIPS_DRIFT_SUBJECT",	0X4D64646C,	-1);
	add_enum_member(id,"OL_GAME_COURSE",	0X4D8E1223,	-1);
	add_enum_member(id,"PAINT_MIRROR",	0X4D90F415,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_INVALID_NAME_LENGTH",	0X4DA10F66,	-1);
	add_enum_member(id,"GAME_TIP_CAR_LOT_TIP_SCREEN",	0X4DA8FB93,	-1);
	add_enum_member(id,"SPONSOR_RACETIME_OVER_OPPONENT",	0X4DBBC129,	-1);
	add_enum_member(id,"ASK_ENTER_CAR_LOT_HEADER",	0X4DC0A646,	-1);
	add_enum_member(id,"OL_MSG_HAS_BEEN_BLOCKED",	0X4DD097A7,	-1);
	add_enum_member(id,"FLAG_TRICOLOR_A",	0X4DD68286,	-1);
	add_enum_member(id,"FLAG_TRICOLOR_B",	0X4DD68287,	-1);
	add_enum_member(id,"FLAG_TRICOLOR_C",	0X4DD68288,	-1);
	add_enum_member(id,"CREATE_GAME",	0X4DE319CC,	-1);
	add_enum_member(id,"OPT_WHEEL_OPTIONS",	0X4DEAB931,	-1);
	add_enum_member(id,"LOADING_STORE_LOCATIONS",	0X4DF1D794,	-1);
	add_enum_member(id,"DRIFT_BEST_SCORE",	0X4E0A36A0,	-1);
	add_enum_member(id,"TU_STAGE_2_TURBO_KIT",	0X4E1C849E,	-1);
	add_enum_member(id,"MU_OPTIONS_OVERWRITE_SAVE",	0X4E20C880,	-1);
	add_enum_member(id,"PRR_DRAG_RACE",	0X4E35A42A,	-1);
	add_enum_member(id,"HELP_CHANGE_COLORS",	0X4E4485FE,	-1);
	add_enum_member(id,"OPT_HORIZON_FOG",	0X4E57D355,	-1);
	add_enum_member(id,"VINYL_CATEGORY_TEARSET",	0X4E6AE825,	-1);
	add_enum_member(id,"VISUAL_PART_SIDE_SKIRT",	0X4E6C2AF9,	-1);
	add_enum_member(id,"PRS_HEADER_TEXT",	0X4E706980,	-1);
	add_enum_member(id,"OL_HOST_LOST",	0X4E7212D8,	-1);
	add_enum_member(id,"OLX_QUIT_GAME_RANKED_CONFIRMATION",	0X4E802849,	-1);
	add_enum_member(id,"OL_MSG_REJECTING_BUDDY_INVITE",	0X4E84829F,	-1);
	add_enum_member(id,"PAINT_CATEGORY_DECALS",	0X4E933E83,	-1);
	add_enum_member(id,"DEMO_PSA_TITLE",	0X4E98A8A8,	-1);
	add_enum_member(id,"SMS_DVD_COVER_4_SUBJECT",	0X4EAE994F,	-1);
	add_enum_member(id,"CREATE_NEW_CAREER",	0X4EC27BCD,	-1);
	add_enum_member(id,"SMS_UNLOCK_41_SUBJECT",	0X4F1C1F10,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_DECAL_SELECT",	0X4F37B101,	-1);
	add_enum_member(id,"OL_OP_Show_PlayerNames",	0X4F3E2298,	-1);
	add_enum_member(id,"QR_OPT_KO_TYPE",	0X4F75E0CE,	-1);
	add_enum_member(id,"OL_NO_ACCOUNT",	0X4F8406C2,	-1);
	add_enum_member(id,"ACCEPT",	0X4F876B6F,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_TRUNK_LAYOUT_REPLACE",	0X4FAFB114,	-1);
	add_enum_member(id,"LOADING_TITLE_DRAG_RACING",	0X4FC2C80E,	-1);
	add_enum_member(id,"SPONSOR_CHOSEN_ALREADY",	0X4FF12B33,	-1);
	add_enum_member(id,"OL_MSG_BUDDY_OP_CANCELLED",	0X501CDF6F,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SHOCKS",	0X508380CF,	-1);
	add_enum_member(id,"NO_DRY_SHOT_OF_NITROUS",	0X50931FCE,	-1);
	add_enum_member(id,"OL_DNAS_CANCELLED_LOGIN",	0X509DB271,	-1);
	add_enum_member(id,"CAR_NAME_FIRETRUCK",	0X50A003A3,	-1);
	add_enum_member(id,"OL_MSG_CONNECTING",	0X50CF1107,	-1);
	add_enum_member(id,"UI_OLX_UPLOAD_CAR",	0X50CFEAE8,	-1);
	add_enum_member(id,"OL_DELETE_PERSONA",	0X50EAC1E3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RCEBRKR_DEMO_BODY",	0X50FEF720,	-1);
	add_enum_member(id,"PC_NAV_LEFT_TRIGGER",	0X51024A73,	-1);
	add_enum_member(id,"PAINT_SHOP_CONFIRM_INSTALL_CHANGED_SETUP",	0X511CCA10,	-1);
	add_enum_member(id,"MU_PAUSE_SCORE",	0X51493C59,	-1);
	add_enum_member(id,"MU_PAUSE_UNITS",	0X51735C50,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_2_LARGE",	0X51865DD7,	-1);
	add_enum_member(id,"HUD_LB_DUPLICATE_USER",	0X518E7265,	-1);
	add_enum_member(id,"UI_CRIB_DVD_THREE",	0X51BA7190,	-1);
	add_enum_member(id,"LABEL_RACE_TIME",	0X51C3DC07,	-1);
	add_enum_member(id,"LABEL_RACE_TYPE",	0X51C4207A,	-1);
	add_enum_member(id,"QR_OPT_RACES",	0X51DF7921,	-1);
	add_enum_member(id,"PAINT_SHOP_CANT_PURCHASE_NO_CHANGES",	0X51E3F647,	-1);
	add_enum_member(id,"TYPE_1_BOTH_WHEEL_NOZZLES",	0X51E8EC25,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_2_SMALL",	0X520B5645,	-1);
	add_enum_member(id,"OL_CANCELING_FRIEND_REQUEST",	0X52260BDC,	-1);
	add_enum_member(id,"ENGAGE_TIPS_HUD_SUBJECT",	0X5247A7B4,	-1);
	add_enum_member(id,"JUKEBOX_PLAY_FRONTEND",	0X5278C50B,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_VISUAL_RATING",	0X528AD4E3,	-1);
	add_enum_member(id,"SAVE_STATUS_CORRUPT",	0X528E03BF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_FREEWAY_SUBJECT",	0X5298BA46,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_MAIN",	0X52A5398E,	-1);
	add_enum_member(id,"OPT_ONLINE_VOICE_DESTINATION",	0X52BCEECC,	-1);
	add_enum_member(id,"UC_BODYSHOP_BODY",	0X52C8426B,	-1);
	add_enum_member(id,"DYNO_MAX_HP",	0X52D837F5,	-1);
	add_enum_member(id,"DECAL_ZONE_WINDSHIELD",	0X52DED91D,	-1);
	add_enum_member(id,"SMS_UNLOCK_60_BODY",	0X53007E4F,	-1);
	add_enum_member(id,"SMS_UNLOCK_51_SUBJECT",	0X5326B031,	-1);
	add_enum_member(id,"TUNING_TYPE_REAR_LOWERING",	0X534E99E4,	-1);
	add_enum_member(id,"LAN_ENTER_USERNAME",	0X5352CD36,	-1);
	add_enum_member(id,"SC_SHOWCASE",	0X535A2751,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BBRK_SUBJECT",	0X53679B54,	-1);
	add_enum_member(id,"STRING_NO_WHEEL",	0X53691B86,	-1);
	add_enum_member(id,"SC_SHOW_OFF",	0X5369BBCF,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_INVALID_NAME_NUMBER",	0X536C452D,	-1);
	add_enum_member(id,"MAP_FILTER",	0X5375E902,	-1);
	add_enum_member(id,"LOADING_GARAGE_REWARDS",	0X53966AFA,	-1);
	add_enum_member(id,"TIMELIMIT_NONE",	0X53B157FC,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE_DRAG",	0X53C1FD2C,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE_MISC",	0X53C6C89A,	-1);
	add_enum_member(id,"BD_PU_Tutorials_241c",	0X53EBBF48,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GPS_DEMO_BODY",	0X53F785FF,	-1);
	add_enum_member(id,"UI_CHAT",	0X53F9FD5C,	-1);
	add_enum_member(id,"UI_GRAB",	0X53FC5958,	-1);
	add_enum_member(id,"UI_HELP",	0X53FCAFE5,	-1);
	add_enum_member(id,"CANCEL",	0X541389E5,	-1);
	add_enum_member(id,"LABEL_MINUTES",	0X542110C3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH2_SUBJECT",	0X543CA317,	-1);
	add_enum_member(id,"PC_NAV_LOGOFF",	0X545C5292,	-1);
	add_enum_member(id,"TRACK_NAME_4000",	0X54634577,	-1);
	add_enum_member(id,"TRACK_NAME_4001",	0X54634578,	-1);
	add_enum_member(id,"TRACK_NAME_4002",	0X54634579,	-1);
	add_enum_member(id,"TRACK_NAME_4003",	0X5463457A,	-1);
	add_enum_member(id,"TRACK_NAME_4004",	0X5463457B,	-1);
	add_enum_member(id,"TRACK_NAME_4005",	0X5463457C,	-1);
	add_enum_member(id,"TRACK_NAME_4006",	0X5463457D,	-1);
	add_enum_member(id,"TRACK_NAME_4011",	0X54634599,	-1);
	add_enum_member(id,"TRACK_NAME_4012",	0X5463459A,	-1);
	add_enum_member(id,"TRACK_NAME_4013",	0X5463459B,	-1);
	add_enum_member(id,"TRACK_NAME_4014",	0X5463459C,	-1);
	add_enum_member(id,"TRACK_NAME_4015",	0X5463459D,	-1);
	add_enum_member(id,"TRACK_NAME_4021",	0X546345BA,	-1);
	add_enum_member(id,"TRACK_NAME_4022",	0X546345BB,	-1);
	add_enum_member(id,"TRACK_NAME_4023",	0X546345BC,	-1);
	add_enum_member(id,"TRACK_NAME_4024",	0X546345BD,	-1);
	add_enum_member(id,"TRACK_NAME_4041",	0X546345FC,	-1);
	add_enum_member(id,"TRACK_NAME_4042",	0X546345FD,	-1);
	add_enum_member(id,"TRACK_NAME_4043",	0X546345FE,	-1);
	add_enum_member(id,"TRACK_NAME_4044",	0X546345FF,	-1);
	add_enum_member(id,"TRACK_NAME_4045",	0X54634600,	-1);
	add_enum_member(id,"TRACK_NAME_4061",	0X5463463E,	-1);
	add_enum_member(id,"TRACK_NAME_4062",	0X5463463F,	-1);
	add_enum_member(id,"TRACK_NAME_4063",	0X54634640,	-1);
	add_enum_member(id,"TRACK_NAME_4081",	0X54634680,	-1);
	add_enum_member(id,"TRACK_NAME_4082",	0X54634681,	-1);
	add_enum_member(id,"TRACK_NAME_4083",	0X54634682,	-1);
	add_enum_member(id,"TRACK_NAME_4084",	0X54634683,	-1);
	add_enum_member(id,"TRACK_NAME_4085",	0X54634684,	-1);
	add_enum_member(id,"TRACK_NAME_4086",	0X54634685,	-1);
	add_enum_member(id,"TRACK_NAME_4087",	0X54634686,	-1);
	add_enum_member(id,"TRACK_NAME_4088",	0X54634687,	-1);
	add_enum_member(id,"TRACK_NAME_4090",	0X546346A0,	-1);
	add_enum_member(id,"TRACK_NAME_4091",	0X546346A1,	-1);
	add_enum_member(id,"TRACK_NAME_4092",	0X546346A2,	-1);
	add_enum_member(id,"TRACK_NAME_4093",	0X546346A3,	-1);
	add_enum_member(id,"TRACK_NAME_4094",	0X546346A4,	-1);
	add_enum_member(id,"TRACK_NAME_4095",	0X546346A5,	-1);
	add_enum_member(id,"TRACK_NAME_4096",	0X546346A6,	-1);
	add_enum_member(id,"TRACK_NAME_4097",	0X546346A7,	-1);
	add_enum_member(id,"TRACK_NAME_4098",	0X546346A8,	-1);
	add_enum_member(id,"TRACK_NAME_4099",	0X546346A9,	-1);
	add_enum_member(id,"TRACK_NAME_4101",	0X546349B9,	-1);
	add_enum_member(id,"TRACK_NAME_4102",	0X546349BA,	-1);
	add_enum_member(id,"TRACK_NAME_4103",	0X546349BB,	-1);
	add_enum_member(id,"TRACK_NAME_4104",	0X546349BC,	-1);
	add_enum_member(id,"TRACK_NAME_4105",	0X546349BD,	-1);
	add_enum_member(id,"TRACK_NAME_4106",	0X546349BE,	-1);
	add_enum_member(id,"TRACK_NAME_4107",	0X546349BF,	-1);
	add_enum_member(id,"TRACK_NAME_4121",	0X546349FB,	-1);
	add_enum_member(id,"TRACK_NAME_4122",	0X546349FC,	-1);
	add_enum_member(id,"TRACK_NAME_4123",	0X546349FD,	-1);
	add_enum_member(id,"TRACK_NAME_4124",	0X546349FE,	-1);
	add_enum_member(id,"TRACK_NAME_4125",	0X546349FF,	-1);
	add_enum_member(id,"TRACK_NAME_4126",	0X54634A00,	-1);
	add_enum_member(id,"TRACK_NAME_4127",	0X54634A01,	-1);
	add_enum_member(id,"TRACK_NAME_4141",	0X54634A3D,	-1);
	add_enum_member(id,"TRACK_NAME_4142",	0X54634A3E,	-1);
	add_enum_member(id,"TRACK_NAME_4143",	0X54634A3F,	-1);
	add_enum_member(id,"TRACK_NAME_4144",	0X54634A40,	-1);
	add_enum_member(id,"TRACK_NAME_4145",	0X54634A41,	-1);
	add_enum_member(id,"TRACK_NAME_4161",	0X54634A7F,	-1);
	add_enum_member(id,"TRACK_NAME_4162",	0X54634A80,	-1);
	add_enum_member(id,"TRACK_NAME_4163",	0X54634A81,	-1);
	add_enum_member(id,"TRACK_NAME_4164",	0X54634A82,	-1);
	add_enum_member(id,"TRACK_NAME_4174",	0X54634AA3,	-1);
	add_enum_member(id,"TRACK_NAME_4175",	0X54634AA4,	-1);
	add_enum_member(id,"TRACK_NAME_4176",	0X54634AA5,	-1);
	add_enum_member(id,"TRACK_NAME_4177",	0X54634AA6,	-1);
	add_enum_member(id,"TRACK_NAME_4178",	0X54634AA7,	-1);
	add_enum_member(id,"TRACK_NAME_4179",	0X54634AA8,	-1);
	add_enum_member(id,"TRACK_NAME_4201",	0X54634DFA,	-1);
	add_enum_member(id,"TRACK_NAME_4202",	0X54634DFB,	-1);
	add_enum_member(id,"TRACK_NAME_4203",	0X54634DFC,	-1);
	add_enum_member(id,"TRACK_NAME_4211",	0X54634E1B,	-1);
	add_enum_member(id,"TRACK_NAME_4212",	0X54634E1C,	-1);
	add_enum_member(id,"TRACK_NAME_4213",	0X54634E1D,	-1);
	add_enum_member(id,"TRACK_NAME_4221",	0X54634E3C,	-1);
	add_enum_member(id,"TRACK_NAME_4222",	0X54634E3D,	-1);
	add_enum_member(id,"TRACK_NAME_4223",	0X54634E3E,	-1);
	add_enum_member(id,"TRACK_NAME_4301",	0X5463523B,	-1);
	add_enum_member(id,"TRACK_NAME_4302",	0X5463523C,	-1);
	add_enum_member(id,"TRACK_NAME_4303",	0X5463523D,	-1);
	add_enum_member(id,"TRACK_NAME_4304",	0X5463523E,	-1);
	add_enum_member(id,"TRACK_NAME_4305",	0X5463523F,	-1);
	add_enum_member(id,"TRACK_NAME_4306",	0X54635240,	-1);
	add_enum_member(id,"TRACK_NAME_4311",	0X5463525C,	-1);
	add_enum_member(id,"TRACK_NAME_4312",	0X5463525D,	-1);
	add_enum_member(id,"TRACK_NAME_4313",	0X5463525E,	-1);
	add_enum_member(id,"TRACK_NAME_4314",	0X5463525F,	-1);
	add_enum_member(id,"TRACK_NAME_4315",	0X54635260,	-1);
	add_enum_member(id,"TRACK_NAME_4401",	0X5463567C,	-1);
	add_enum_member(id,"TRACK_NAME_4402",	0X5463567D,	-1);
	add_enum_member(id,"TRACK_NAME_4403",	0X5463567E,	-1);
	add_enum_member(id,"TRACK_NAME_4404",	0X5463567F,	-1);
	add_enum_member(id,"TRACK_NAME_4601",	0X54635EFE,	-1);
	add_enum_member(id,"TRACK_NAME_4602",	0X54635EFF,	-1);
	add_enum_member(id,"TRACK_NAME_4603",	0X54635F00,	-1);
	add_enum_member(id,"TRACK_NAME_4604",	0X54635F01,	-1);
	add_enum_member(id,"TRACK_NAME_4605",	0X54635F02,	-1);
	add_enum_member(id,"TRACK_NAME_4606",	0X54635F03,	-1);
	add_enum_member(id,"TRACK_NAME_4607",	0X54635F04,	-1);
	add_enum_member(id,"TRACK_NAME_4608",	0X54635F05,	-1);
	add_enum_member(id,"TRACK_NAME_4701",	0X5463633F,	-1);
	add_enum_member(id,"TRACK_NAME_4702",	0X54636340,	-1);
	add_enum_member(id,"TRACK_NAME_4703",	0X54636341,	-1);
	add_enum_member(id,"TRACK_NAME_4704",	0X54636342,	-1);
	add_enum_member(id,"TRACK_NAME_4705",	0X54636343,	-1);
	add_enum_member(id,"TRACK_NAME_4711",	0X54636360,	-1);
	add_enum_member(id,"TRACK_NAME_4712",	0X54636361,	-1);
	add_enum_member(id,"TRACK_NAME_4713",	0X54636362,	-1);
	add_enum_member(id,"TRACK_NAME_4714",	0X54636363,	-1);
	add_enum_member(id,"TRACK_NAME_4715",	0X54636364,	-1);
	add_enum_member(id,"TRACK_NAME_4716",	0X54636365,	-1);
	add_enum_member(id,"CHANGE",	0X548B4385,	-1);
	add_enum_member(id,"TYPE_2_MAGENTA",	0X54974E6E,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_TAKEN",	0X5498E449,	-1);
	add_enum_member(id,"NEON_AQUA_PULSE",	0X54A4D5BE,	-1);
	add_enum_member(id,"UI_CRIB_TO_TEST_TRACK",	0X54B649F1,	-1);
	add_enum_member(id,"V2_ALL_BUT_WHEEL_RIGHT_PURGE",	0X54C4A91C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL2_BODY",	0X54F93964,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_SPECIAL_EVENT",	0X551BE4DA,	-1);
	add_enum_member(id,"OL_VIEW_PLAYER",	0X552094E0,	-1);
	add_enum_member(id,"OL_OVERALL_RANKINGS_TITLE",	0X553EDA6B,	-1);
	add_enum_member(id,"CREATE",	0X55423473,	-1);
	add_enum_member(id,"SMS_UNLOCK_61_BODY",	0X5555A6F0,	-1);
	add_enum_member(id,"OL_UNRANKED_QUIT_SESSION",	0X555BD5B6,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_0_8",	0X556149AF,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_1_8",	0X55614DF0,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_2_8",	0X55615231,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_3_8",	0X55615672,	-1);
	add_enum_member(id,"AUDIO_COMP_SPEAKER_4_8",	0X55615AB3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BRK_SUBJECT",	0X5562CBD2,	-1);
	add_enum_member(id,"OL_SUBMITTING_FEEDBACK",	0X5566D903,	-1);
	add_enum_member(id,"TUNING_TYPE_NOS_DEPLETIONRATE",	0X55C60293,	-1);
	add_enum_member(id,"OPT_AUDIO_MODE_STEREO",	0X55DA8BF8,	-1);
	add_enum_member(id,"LABEL_LONGEST_SLIDE",	0X55F6C1EA,	-1);
	add_enum_member(id,"OL_CANCEL_INVITE",	0X5632D96D,	-1);
	add_enum_member(id,"OL_PLAYERS_LIST_OFFLINE",	0X56575496,	-1);
	add_enum_member(id,"OL_PLAYER_QUIT_GAME",	0X56720DC1,	-1);
	add_enum_member(id,"ENGAGE_TIPS_DRAFT_BODY",	0X56756942,	-1);
	add_enum_member(id,"QR_OPT_KO_CLASSIC",	0X56A3658E,	-1);
	add_enum_member(id,"BUTTON_SHIFTDOWN",	0X56AFE190,	-1);
	add_enum_member(id,"DELETE",	0X56B00632,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS5_SUBJECT",	0X56BBA6DD,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_10",	0X56CAA9BF,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_11",	0X56CAA9C0,	-1);
	add_enum_member(id,"OL_MESS_DECLINE_VOICE_INVITE_DECLINED",	0X56D63B1E,	-1);
	add_enum_member(id,"FE_INSTALL",	0X56DA42E0,	-1);
	add_enum_member(id,"UI_OLX_OPTIMATCH_SEARCH",	0X56E8E74C,	-1);
	add_enum_member(id,"CSTATISTICS_PERFORMANCE_PARTS",	0X56F9EF27,	-1);
	add_enum_member(id,"OPT_WHEEL_RANGE",	0X56FEB0D2,	-1);
	add_enum_member(id,"OPT_BLEACH_BY_PASS",	0X571F6C00,	-1);
	add_enum_member(id,"CALIPER_PAINT",	0X5722F2DA,	-1);
	add_enum_member(id,"SMS_UNLOCK_61_SUBJECT",	0X57314152,	-1);
	add_enum_member(id,"HELP_OL__CARSPECIALTIES_SHOP_TRUNKLAYOUT_OR_COMPONENTS_SELECT",	0X5735483A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL3_BODY",	0X574E6205,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_JACKSON_HEIGHTS",	0X5755251F,	-1);
	add_enum_member(id,"SMS_INSTRUCTION_BODY",	0X576F6980,	-1);
	add_enum_member(id,"SMS_UNLOCK_62_BODY",	0X57AACF91,	-1);
	add_enum_member(id,"ASK_ENTER_SHORT_TRACK_SUBJECT",	0X57F833AD,	-1);
	add_enum_member(id,"HELP_CRIB_CHANGEPARTS_CARSPECIALTIES_MAIN",	0X5813E1A5,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ORGANIC_SUBJECT",	0X586CA736,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GPS_DEMO_SUBJECT",	0X5882FA01,	-1);
	add_enum_member(id,"VINYL_CATEGORY_LIGHTNING",	0X588A0A91,	-1);
	add_enum_member(id,"ROOF_STYLE11_OFFSET",	0X588F162D,	-1);
	add_enum_member(id,"HUD_LONGEST_DRIFT",	0X58B8DF93,	-1);
	add_enum_member(id,"SPONSOR_RACE_VICTORY",	0X58BABCFC,	-1);
	add_enum_member(id,"PC_KEYS_READ_SMS",	0X58BAEBBA,	-1);
	add_enum_member(id,"SMS_DVD_COVER_10_BODY",	0X58DC5FFA,	-1);
	add_enum_member(id,"TYPE_3_LEFT_WHEEL_NOZZLE",	0X58F09252,	-1);
	add_enum_member(id,"MESSAGE_07_SUBJECT",	0X58F71919,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_OUTRUN",	0X594620F8,	-1);
	add_enum_member(id,"LOADING_TITLE_GRAPHICS_SHOP",	0X596A8287,	-1);
	add_enum_member(id,"ENGAGE_TIPS_FILTER_BODY",	0X597893D7,	-1);
	add_enum_member(id,"OL_XBOX_LIVE_NEWS",	0X59867DE5,	-1);
	add_enum_member(id,"CUSTOM_HUD_STOCK",	0X59AB7FDD,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_OUTRUN",	0X59B6DC45,	-1);
	add_enum_member(id,"HUD_TUNING_CURRENT_LATERAL_G_FORCES",	0X59BFB401,	-1);
	add_enum_member(id,"PC_KEYS_LEGEND",	0X59C4937B,	-1);
	add_enum_member(id,"ROOF_STYLE08_OFFSET",	0X59DF7753,	-1);
	add_enum_member(id,"MINIMAP_DRIFT",	0X59ECB2C2,	-1);
	add_enum_member(id,"CSTATISTICS_ICE_PARTS",	0X59ECD886,	-1);
	add_enum_member(id,"SMS_UNLOCK_63_BODY",	0X59FFF832,	-1);
	add_enum_member(id,"r44i4uu4",	0X5A014C34,	-1);
	add_enum_member(id,"SPONSOR_INFO_EDELBROCK",	0X5A3BB868,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_EL_NORTE",	0X5A5D44A3,	-1);
	add_enum_member(id,"SMS_DVD_COVER_10_SUBJECT",	0X5A6ED61C,	-1);
	add_enum_member(id,"OL_MSG_DISCONNECTED_SERVER_DOWN",	0X5A6F817F,	-1);
	add_enum_member(id,"PLAYER_ONE_PRESS_START_PS2",	0X5A890BDA,	-1);
	add_enum_member(id,"OL_REMOVING_FRIEND",	0X5AB21D17,	-1);
	add_enum_member(id,"QR_TITLE_QUICK_RACE",	0X5AC1FB59,	-1);
	add_enum_member(id,"NEON_GRAPE",	0X5AC221FD,	-1);
	add_enum_member(id,"NEON_GREEN",	0X5AC2319F,	-1);
	add_enum_member(id,"TUNING_CAT_TURBO",	0X5AE08536,	-1);
	add_enum_member(id,"TUNING_LABEL_CIRCUIT",	0X5AE1D9E5,	-1);
	add_enum_member(id,"OPT_PLAYER_CAM_OUTSIDE_CLOSE",	0X5AE3441F,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_SPARCO",	0X5AECE53F,	-1);
	add_enum_member(id,"CSTATISTICS_BODY_PARTS",	0X5AF77283,	-1);
	add_enum_member(id,"TUNING_LABEL_DRAG",	0X5B4967F0,	-1);
	add_enum_member(id,"PC_DISPLAY_OPTIONS_VSYNC",	0X5B4AA6E4,	-1);
	add_enum_member(id,"FEMALE",	0X5B5AD1C9,	-1);
	add_enum_member(id,"DYNO_KW",	0X5B81D5BA,	-1);
	add_enum_member(id,"DYNO_NM",	0X5B81D613,	-1);
	add_enum_member(id,"PLAYER_TWO_PRESS_START",	0X5BC4BC1E,	-1);
	add_enum_member(id,"OPT_AUTOSAVE",	0X5BDBBB19,	-1);
	add_enum_member(id,"NEON_WHITE",	0X5BDE50CF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAG2_SUBJECT",	0X5BE4A3BA,	-1);
	add_enum_member(id,"PRR_TIME_BEHIND",	0X5BE5E40A,	-1);
	add_enum_member(id,"PRS_LONGEST_DRIFT",	0X5C17EC47,	-1);
	add_enum_member(id,"JUKEBOX_PLAY_INGAME",	0X5C1B351C,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_RED",	0X5C262253,	-1);
	add_enum_member(id,"SMS_UNLOCK_64_BODY",	0X5C5520D3,	-1);
	add_enum_member(id,"OL_CROSS_GAME_INVITE",	0X5C8B6C4A,	-1);
	add_enum_member(id,"SC18_LINE_1",	0X5C912475,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_H4_BODY",	0X5C9C6823,	-1);
	add_enum_member(id,"OL_WARNING_JOIN_GAME_UNRANKED_PS2XBX",	0X5CA73434,	-1);
	add_enum_member(id,"OPT_KEYBOARD_CONFIG",	0X5CF08EB7,	-1);
	add_enum_member(id,"PRR_POINTS_EARNED",	0X5CF5F8BD,	-1);
	add_enum_member(id,"HUD_GETAWAY_CASH",	0X5D10F6AF,	-1);
	add_enum_member(id,"HUD_GETAWAY_LOST",	0X5D1621B2,	-1);
	add_enum_member(id,"OL_RACE_MODE_OPTIONS",	0X5D2B0B43,	-1);
	add_enum_member(id,"PRS_MAX_SPEED",	0X5D304669,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_RESET_TO_STOCK",	0X5D336F96,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_SPONSOR_X_2_SUBJECT",	0X5D4ED35D,	-1);
	add_enum_member(id,"MU_PAUSE_ST_BEST_LAP",	0X5D645ACD,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_LOAD_CARS_FROM_PROFILE",	0X5D7D51A5,	-1);
	add_enum_member(id,"HUD_LB_KNOCKED_OUT",	0X5D82DBA2,	-1);
	add_enum_member(id,"CUSTOMIZE_EDIT_TUNED_CAR",	0X5DA6131B,	-1);
	add_enum_member(id,"OL_MSG_PASSWORD_REQUEST_LACKS_NAME",	0X5DAFD047,	-1);
	add_enum_member(id,"OL_XBL_ENTER_SEARCH_NAME",	0X5DC20C71,	-1);
	add_enum_member(id,"OL_SELECT_PERSONA_TITLE",	0X5DC29751,	-1);
	add_enum_member(id,"HOOD_MODERN1",	0X5DEF84FE,	-1);
	add_enum_member(id,"HOOD_MODERN2",	0X5DEF84FF,	-1);
	add_enum_member(id,"HOOD_MODERN3",	0X5DEF8500,	-1);
	add_enum_member(id,"PC_NAV_INSTALL_DECAL",	0X5E0AB884,	-1);
	add_enum_member(id,"UNIT_CM",	0X5E1F61EE,	-1);
	add_enum_member(id,"LOADING_TITLE_STREET_X",	0X5E30942B,	-1);
	add_enum_member(id,"MU_PAUSE_GAUGES",	0X5E51CAB9,	-1);
	add_enum_member(id,"OPT_WHEEL_LINEAR_OR_NOT",	0X5E58BB90,	-1);
	add_enum_member(id,"BUTTON_NITROUS",	0X5E5C5F2E,	-1);
	add_enum_member(id,"PC_DEMO_NOVEMBER",	0X5E623733,	-1);
	add_enum_member(id,"UI_PAUSE_WORLD_MAP",	0X5E670A9E,	-1);
	add_enum_member(id,"VISUAL_PART_BODY_KIT_ORIGINAL",	0X5E7309D1,	-1);
	add_enum_member(id,"UI_MAIN_CAREER",	0X5E7E1192,	-1);
	add_enum_member(id,"SMS_GPS_INTRO_SUBJECT",	0X5E7E7075,	-1);
	add_enum_member(id,"TYPE_2_GREEN",	0X5EA95002,	-1);
	add_enum_member(id,"SMS_UNLOCK_65_BODY",	0X5EAA4974,	-1);
	add_enum_member(id,"HELP_OL_VIEWTRACK",	0X5EB035D1,	-1);
	add_enum_member(id,"PRR_SECONDS",	0X5EB0ABE1,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAP_DEMO_SUBJECT",	0X5ED1C215,	-1);
	add_enum_member(id,"PC_NAV_INSTALL_PAINT",	0X5EE1C847,	-1);
	add_enum_member(id,"PRS_AVERAGE_SPEED",	0X5F38E63E,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_RACHEL",	0X5F42ED07,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERFSHFT_SUBJECT",	0X5F4445F5,	-1);
	add_enum_member(id,"TYPE_2_UPPER_RIGHT_LOWER_LEFT_NOZZLES",	0X5F5116C0,	-1);
	add_enum_member(id,"PC_NAV_INSTALL_VINYL",	0X5F52D4FD,	-1);
	add_enum_member(id,"CSTATISTICS_SPONSORSHIPS_SIGNED",	0X5F77BB60,	-1);
	add_enum_member(id,"NEON_RED_PULSE",	0X5FB0F3D1,	-1);
	add_enum_member(id,"STYLE25_HOOD_CF",	0X5FF40D68,	-1);
	add_enum_member(id,"BODY_SHOP_MESSAGE_1",	0X600DE6FA,	-1);
	add_enum_member(id,"OL_CONNECTING",	0X60129941,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_AMT",	0X601410DC,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_CAE",	0X601417C3,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_CAF",	0X601417C4,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_EGT",	0X6014211A,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_GTF",	0X60142B3B,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_RSU",	0X601459F4,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SAS",	0X60145BE1,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SD3",	0X60145C24,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SSC",	0X60145E23,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_STF",	0X60145E47,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SWT",	0X60145EB8,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_TUR",	0X601462B5,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_USZ",	0X601466BC,	-1);
	add_enum_member(id,"BUTTON_WORLD_MAP",	0X6026C91F,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_RSU_TITLE",	0X60689615,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_NAME_PROFILE_FOR_AUTOSAVE",	0X609E0BF8,	-1);
	add_enum_member(id,"CONFIRM_RESUME_EXPLORE",	0X60B42AFB,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_0_MEDIUM",	0X60BB7840,	-1);
	add_enum_member(id,"ENGAGE_VISUAL_GENERIC_1_BODY",	0X60C1A872,	-1);
	add_enum_member(id,"OLX_QUIT_GAME_UNRANKED_CONFIRMATION",	0X60CA01AC,	-1);
	add_enum_member(id,"SMS_MINIMAP_LEGEND_BLURB_BODY",	0X60D088CD,	-1);
	add_enum_member(id,"DYNO_NO_PROFILE",	0X60D24D65,	-1);
	add_enum_member(id,"SMS_PERF_GENERIC_1_SUBJECT",	0X60D77359,	-1);
	add_enum_member(id,"SPONSOR_OZ_WHEELS",	0X60E532C2,	-1);
	add_enum_member(id,"EC_FUEL_INJECTORS",	0X60F699C2,	-1);
	add_enum_member(id,"SMS_UNLOCK_66_BODY",	0X60FF7215,	-1);
	add_enum_member(id,"QR_TITLE_CUSTOMIZE",	0X61032CE5,	-1);
	add_enum_member(id,"HELP_VINYL_CATEGORY_SELECT",	0X6109E4B5,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_COAL_HARBOR_SUBJECT",	0X611751FD,	-1);
	add_enum_member(id,"OPT_DISPLAY_HIGH",	0X612AF8A6,	-1);
	add_enum_member(id,"OL_OUTRUN",	0X613D3106,	-1);
	add_enum_member(id,"OLX_ERROR_GAMERTAG_BANNED",	0X614B6FC9,	-1);
	add_enum_member(id,"OL_GAME_ROOM_INVITED",	0X614DBD61,	-1);
	add_enum_member(id,"PC_DEMO_MUSIC_IDO",	0X61789791,	-1);
	add_enum_member(id,"BUTTON_THROTTLE",	0X619B23B0,	-1);
	add_enum_member(id,"PC_DISPLAY_OPTION_TEXTURE",	0X61A50B8F,	-1);
	add_enum_member(id,"TIMER_NIL",	0X61C9B7A2,	-1);
	add_enum_member(id,"TRANS_TYPE_AUTO",	0X61CB0720,	-1);
	add_enum_member(id,"LOADING_ONLINE_UNRANKED_MESSENGER",	0X61F022C0,	-1);
	add_enum_member(id,"HELP_OLX_SHAREINFO",	0X621CC718,	-1);
	add_enum_member(id,"IND_PERF_SHOP_1_BODY",	0X622866BC,	-1);
	add_enum_member(id,"MU_PAUSE_HYBRID",	0X624F037F,	-1);
	add_enum_member(id,"OL_ENTER_SEARCH_NAME",	0X626E210C,	-1);
	add_enum_member(id,"OPT_LIGHT_GLOW",	0X62925361,	-1);
	add_enum_member(id,"IND_BODYSHOP_1_BODY",	0X629477DE,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_FOTF",	0X6298F309,	-1);
	add_enum_member(id,"PC_NAV_ACTIVATE_GPS",	0X629B0D0F,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_MTTM",	0X629CDEFC,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SFTS",	0X629FEDBA,	-1);
	add_enum_member(id,"DEMO_GAME_TIP_PAINT_SHOP",	0X62AE717D,	-1);
	add_enum_member(id,"OLX_OPTIONS",	0X62EF5D9D,	-1);
	add_enum_member(id,"QR_BURNOUT",	0X63078970,	-1);
	add_enum_member(id,"ENGAGE_VISUAL_GENERIC_2_BODY",	0X6316D113,	-1);
	add_enum_member(id,"RIMS_BRAND_STREETSPIN",	0X6322F230,	-1);
	add_enum_member(id,"OPT_DISPLAY_MEDIUM",	0X632B8DA7,	-1);
	add_enum_member(id,"GLOSS_PAINT",	0X632D35E2,	-1);
	add_enum_member(id,"SMS_GPS_INTRO_BODY",	0X633D70F3,	-1);
	add_enum_member(id,"GPS_CONFIRM",	0X63477036,	-1);
	add_enum_member(id,"OL_FEEDBACK",	0X6353F07E,	-1);
	add_enum_member(id,"OL_MESS_SIGNED_IN_RESENT",	0X635CB250,	-1);
	add_enum_member(id,"BUTTON_PAUSE",	0X6369F4B8,	-1);
	add_enum_member(id,"KIT03_TRUNK_AUDIO",	0X6380768E,	-1);
	add_enum_member(id,"UNIT_INCH",	0X6382ECE0,	-1);
	add_enum_member(id,"OL_OPT_ALLOW_EQUAL_PERF_CARS",	0X638380F5,	-1);
	add_enum_member(id,"FLAG_JAPAN",	0X63909762,	-1);
	add_enum_member(id,"BUTTON_STEER",	0X63AA639D,	-1);
	add_enum_member(id,"FLAG_KOREA",	0X63AA662A,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_SAVE_CAR_DETAILS",	0X63C53643,	-1);
	add_enum_member(id,"ORDINAL_SECOND",	0X63EB6A03,	-1);
	add_enum_member(id,"SPONSOR_STREETGLOW",	0X63EC22C2,	-1);
	add_enum_member(id,"MU_PAUSE_ST_LAST_LAP",	0X640DB893,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE_ROOF_SCOOP",	0X643BDE3C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ORSTRAT_SUBJECT",	0X6452D482,	-1);
	add_enum_member(id,"PC_KEYS_HYDRAULIC_BOUNCE",	0X64730AAC,	-1);
	add_enum_member(id,"FLAG_WALES",	0X647BC574,	-1);
	add_enum_member(id,"IND_PERF_SHOP_2_BODY",	0X647D8F5D,	-1);
	add_enum_member(id,"OL_YOU_WERE_SIGNED_OUT",	0X64953698,	-1);
	add_enum_member(id,"DEMO_LEFT_ANALOG",	0X649DA17F,	-1);
	add_enum_member(id,"SPONSOR_SPARCO",	0X64C6CC1A,	-1);
	add_enum_member(id,"VINYL_CATEGORY_AFTERMARKET",	0X64CF99A3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AUTO_BODY_XBOX",	0X64E7E6AA,	-1);
	add_enum_member(id,"IND_BODYSHOP_2_BODY",	0X64E9A07F,	-1);
	add_enum_member(id,"UI_CRIB_CAR_PURCHASE_CONFIRM",	0X6502B778,	-1);
	add_enum_member(id,"STYLE_CHAINED_DRIFT",	0X651EDB93,	-1);
	add_enum_member(id,"DVD_SELECT_HEADER",	0X653B26C4,	-1);
	add_enum_member(id,"OL_SAME_PLAYER_LEVEL_ONLY",	0X654FD8C3,	-1);
	add_enum_member(id,"QR_CAR_SELECT_TITLE",	0X6563A4D7,	-1);
	add_enum_member(id,"ENGAGE_VISUAL_GENERIC_3_BODY",	0X656BF9B4,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_NAME_PROFILE_FOR_AUTOSAVE_XBOX",	0X6584C378,	-1);
	add_enum_member(id,"OL_CREATE_USER_ACCOUNT",	0X65929D97,	-1);
	add_enum_member(id,"SMS_DVD_COVER_2_SUBJECT",	0X65B5B74D,	-1);
	add_enum_member(id,"OL_MSG_REFRESH_GAMES_LIST",	0X65FDA335,	-1);
	add_enum_member(id,"CONFIRM_REVERT_KIT_FROM_CARBON",	0X660BDF52,	-1);
	add_enum_member(id,"VISUAL_PART_TAIL_LIGHT",	0X663437A9,	-1);
	add_enum_member(id,"SAVELOAD_DELETE_PROFILE",	0X66516470,	-1);
	add_enum_member(id,"CONFIRM_CHANGE_UNIQUE_VINYL_OK",	0X665439B2,	-1);
	add_enum_member(id,"DISCOUNT_MEGALOW_TITLE",	0X66559034,	-1);
	add_enum_member(id,"OPT_AUDIO_MODE_DOLBY",	0X666128E0,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_LAVENDER",	0X667D0409,	-1);
	add_enum_member(id,"OLX_OFFLINE_WARNING",	0X66886589,	-1);
	add_enum_member(id,"PC_DEMO_COMPETE_ONLINE",	0X668B0666,	-1);
	add_enum_member(id,"HUD_TIMEUP",	0X668C7453,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_BEACON_HILL_SUBJECT",	0X66ABD1F1,	-1);
	add_enum_member(id,"SPONSOR_BRAND",	0X66B47619,	-1);
	add_enum_member(id,"SPONSOR_BRIDE",	0X66B496D8,	-1);
	add_enum_member(id,"OL_RANKED",	0X66CF56AE,	-1);
	add_enum_member(id,"SPONSOR_ENKEI",	0X66E8B77E,	-1);
	add_enum_member(id,"OL_GENERIC_SERVER_ERROR",	0X66E8E275,	-1);
	add_enum_member(id,"HELP_OL_PS2_FILTER",	0X66FE473B,	-1);
	add_enum_member(id,"STYLE_DRIFT_KING",	0X670B90D0,	-1);
	add_enum_member(id,"OL_INVITE_STRING",	0X6729A51E,	-1);
	add_enum_member(id,"TUNING_CAT_TIRES_BRAKES",	0X6741BF48,	-1);
	add_enum_member(id,"SPONSOR_KONIG",	0X6755E42A,	-1);
	add_enum_member(id,"CSTATISTICS_DVD_COVERS_WON",	0X678144AE,	-1);
	add_enum_member(id,"QR_MODE_SELECT_TITLE",	0X679CE5E6,	-1);
	add_enum_member(id,"OL_IS_PLAYING_TITLE",	0X679FD4E9,	-1);
	add_enum_member(id,"OLX_ERROR_INCORRECT_PASSCODE",	0X67BA44B4,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_RSU_BODY",	0X67BB5481,	-1);
	add_enum_member(id,"ENGAGE_VISUAL_GENERIC_4_BODY",	0X67C12255,	-1);
	add_enum_member(id,"TUNING_DURATION",	0X67E53439,	-1);
	add_enum_member(id,"OL_MESS_HAS_INVITED",	0X67EEA09E,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_NAME_TAKEN",	0X67F1D911,	-1);
	add_enum_member(id,"HELP_OL_GAME_ROOM",	0X67F34517,	-1);
	add_enum_member(id,"ENGAGE_ENTER_GARAGE",	0X67F55A89,	-1);
	add_enum_member(id,"SPONSOR_TITLE",	0X67F59054,	-1);
	add_enum_member(id,"SC01_08_PRESENTDAY",	0X67F70C7B,	-1);
	add_enum_member(id,"LOADING_TITLE_MONEY",	0X6808E865,	-1);
	add_enum_member(id,"PRS_PERFECT_SHIFT_RATIO",	0X680AC597,	-1);
	add_enum_member(id,"V3_ALL_BUT_WHEEL_RIGHT_PURGE",	0X683DC05D,	-1);
	add_enum_member(id,"DEBUG_ASK_ENTER_CIRCUIT",	0X68445AD3,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_INVALID_EMAIL_LENGTH",	0X6864BFED,	-1);
	add_enum_member(id,"LOADING_TITLE_MEGALO",	0X686D16F2,	-1);
	add_enum_member(id,"OL_VOICE_CHAT_UNAVAILABLE",	0X687767F1,	-1);
	add_enum_member(id,"VINYL_CATEGORY_MODERNSET",	0X687F411E,	-1);
	add_enum_member(id,"IG_MaxTorque",	0X6887E3B4,	-1);
	add_enum_member(id,"STYLE_GREAT_DRIFT",	0X68DF0CFA,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_LAVENDER",	0X68E97F75,	-1);
	add_enum_member(id,"HOOD_LIGHTNG1",	0X68F7C286,	-1);
	add_enum_member(id,"HOOD_LIGHTNG2",	0X68F7C287,	-1);
	add_enum_member(id,"HOOD_LIGHTNG3",	0X68F7C288,	-1);
	add_enum_member(id,"TOP_HOOD_NINJA",	0X690348EA,	-1);
	add_enum_member(id,"SPONSOR_NITROUS_EXPRESS",	0X6912B5AF,	-1);
	add_enum_member(id,"LABEL_CHALLENGE",	0X6945BB41,	-1);
	add_enum_member(id,"TUNING_DRAG_TEST_RUN_TITLE",	0X6950EC05,	-1);
	add_enum_member(id,"OL_INVITING_VOICE_CHAT",	0X695D0495,	-1);
	add_enum_member(id,"TOP_HOOD_SKATE",	0X695EA632,	-1);
	add_enum_member(id,"TOP_HOOD_SKULL",	0X695EFA45,	-1);
	add_enum_member(id,"ROOF_STYLE10_DUAL",	0X69644E4B,	-1);
	add_enum_member(id,"OL_OP_VOICE_CHAT",	0X6967656C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TRAIN_SUBJECT",	0X69A45FD1,	-1);
	add_enum_member(id,"OL_PPPOE_AUTHENTICATING",	0X69A8BC54,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_5_SUBJECT",	0X69AC1ACD,	-1);
	add_enum_member(id,"MINIMAP_SHOWCASE",	0X69B14E86,	-1);
	add_enum_member(id,"OL_GAME_ROOM_SEND_PRV_MSG",	0X69B36B15,	-1);
	add_enum_member(id,"OL_EA_LOGIN_SAVE_LOGIN",	0X69B6213D,	-1);
	add_enum_member(id,"OPT_AUDIO_TIRE_VOL",	0X69B745C6,	-1);
	add_enum_member(id,"CUSTOMIZE_HUD_CHOOSE_NEEDLE_COLOR",	0X6A0B254C,	-1);
	add_enum_member(id,"ENGAGE_VISUAL_GENERIC_5_BODY",	0X6A164AF6,	-1);
	add_enum_member(id,"UI_MAIN_SPLIT_SCREEN",	0X6A2B93EB,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_10",	0X6A347E9B,	-1);
	add_enum_member(id,"PAINT_CATEGORY_PAINTS",	0X6A4C46A6,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_ERROR_DELETING",	0X6A4EC4AB,	-1);
	add_enum_member(id,"TUNING_TYPE_FINALDRIVE",	0X6A71E798,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SLWIN_SUBJECT",	0X6A88B9A0,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SS_TITLE",	0X6A8D9F01,	-1);
	add_enum_member(id,"SAVELOAD_LOAD_PROFILE",	0X6A9B74BD,	-1);
	add_enum_member(id,"OL_MESS_MAX_FRIENDS",	0X6AA4C280,	-1);
	add_enum_member(id,"SHOP_TITLE_MEGALOW",	0X6AA654C5,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_1_BODY",	0X6AB6D7C7,	-1);
	add_enum_member(id,"BUTTON_BRAKE_REVERSE",	0X6AB80AFA,	-1);
	add_enum_member(id,"SH_BODYSHOP_BODY",	0X6AC31B6E,	-1);
	add_enum_member(id,"DYNO_TIP_SHOCKS",	0X6AD0772F,	-1);
	add_enum_member(id,"NEON_LAVENDER_PULSE",	0X6AD9A7C7,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_GTF_BODY",	0X6AE40A28,	-1);
	add_enum_member(id,"MU_PAUSE_ST_RACE_LEADER",	0X6AEE5CCA,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_MEGALO_MART",	0X6AF195B3,	-1);
	add_enum_member(id,"QR_TRACK_SELECT_TITLE",	0X6AF70496,	-1);
	add_enum_member(id,"CAR_NAME_LANCEREVO8",	0X6AFAB3CB,	-1);
	add_enum_member(id,"UI_PAUSE_PHYSICS_OPTIONS_TITLE",	0X6B212108,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_1",	0X6B234B68,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_2",	0X6B234B69,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_3",	0X6B234B6A,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_4",	0X6B234B6B,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_5",	0X6B234B6C,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_6",	0X6B234B6D,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_7",	0X6B234B6E,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_8",	0X6B234B6F,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_9",	0X6B234B70,	-1);
	add_enum_member(id,"RIMS_BRAND_BBS",	0X6B3D4F56,	-1);
	add_enum_member(id,"HELP_OL_PS2_CREATEACCOUNT",	0X6B42F6F6,	-1);
	add_enum_member(id,"PAUSE_OPTIONS_TITLE_2",	0X6B44997A,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SSC_TITLE",	0X6B4CC184,	-1);
	add_enum_member(id,"FLAG_STRIPES",	0X6B5AC462,	-1);
	add_enum_member(id,"OL_USE_EXISTING_EA_ACCOUNT_NAME",	0X6B6538A1,	-1);
	add_enum_member(id,"CAR_SELECT_ALL",	0X6B68362C,	-1);
	add_enum_member(id,"FLAGS_ITALY",	0X6B77F56E,	-1);
	add_enum_member(id,"FLAGS_JAPAN",	0X6B7FE115,	-1);
	add_enum_member(id,"CHALLENGE_DATA_2_UNDER",	0X6B87BD29,	-1);
	add_enum_member(id,"FLAGS_KOREA",	0X6B99AFDD,	-1);
	add_enum_member(id,"METERS",	0X6BB2D6AF,	-1);
	add_enum_member(id,"CONFIRM_CHOOSE_TUNING_SETTING",	0X6BB7037E,	-1);
	add_enum_member(id,"ROOF_STYLE11_DUAL",	0X6BB976EC,	-1);
	add_enum_member(id,"CUSTOMIZE_CANT_PAINT_NON_SPINNER",	0X6BCBCEEA,	-1);
	add_enum_member(id,"LOADING_TITLE_CAR_LOT",	0X6BCC7461,	-1);
	add_enum_member(id,"OL_MESS_INVITE_BUSY",	0X6C02F6E1,	-1);
	add_enum_member(id,"OL_TIMEUP",	0X6C09C82D,	-1);
	add_enum_member(id,"SMS_UNLOCK_30_BODY",	0X6C11C80C,	-1);
	add_enum_member(id,"FLAGS_SPAIN",	0X6C2AB886,	-1);
	add_enum_member(id,"TOURNAMENT_QUIT_MSG",	0X6C328734,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_SHARING_IS_GOOD",	0X6C340BD2,	-1);
	add_enum_member(id,"HELP_CARSPECIALTIES_SHOP_TRUNKLAYOUT_SELECT",	0X6C4BF67C,	-1);
	add_enum_member(id,"ROOF_STYLE10_OFFSET",	0X6C4D414C,	-1);
	add_enum_member(id,"STYLE_SECOND_SPOT",	0X6C5F7B10,	-1);
	add_enum_member(id,"FLAGS_WALES",	0X6C6B0F27,	-1);
	add_enum_member(id,"HELP_QR_CAR_SELECT",	0X6C6C43FE,	-1);
	add_enum_member(id,"PAUSE_TITLE",	0X6C839FBE,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_ALREADY_LOGGED_IN",	0X6CACF1EC,	-1);
	add_enum_member(id,"UI_CRIB_SPONSOR_CAR_PURCHASE",	0X6CAD61BE,	-1);
	add_enum_member(id,"TOP_HOOD_PUMPKIN",	0X6CDCF27E,	-1);
	add_enum_member(id,"OL_RANK_LIST_ERROR",	0X6CF6E689,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_2_BODY",	0X6D0C0068,	-1);
	add_enum_member(id,"V3_ALL_BUT_HOOD_LEFT_PURGE",	0X6D35C53F,	-1);
	add_enum_member(id,"MU_PAUSE_RACE_RESULTS",	0X6D4C5049,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SFTS_BODY",	0X6D583407,	-1);
	add_enum_member(id,"FLAGS_GERMANY",	0X6D8CFF3E,	-1);
	add_enum_member(id,"ROOF_STYLE07_OFFSET",	0X6D9DA272,	-1);
	add_enum_member(id,"DISCOUNT_GENERIC_TITLE",	0X6DA17A25,	-1);
	add_enum_member(id,"UI_CRIB_WORLD_MAP_TITLE",	0X6DA1E521,	-1);
	add_enum_member(id,"SAVELOAD_SELECT_PROFILE",	0X6DABC0BD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS3_SUBJECT",	0X6DC2C4DB,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_CAF_TITLE",	0X6DD36FE5,	-1);
	add_enum_member(id,"ERROR_UNPLUGGED_CONTROLLER_NGC",	0X6DE3B2ED,	-1);
	add_enum_member(id,"ROOF_STYLE12_DUAL",	0X6E0E9F8D,	-1);
	add_enum_member(id,"LOADING_DOWNHILL_DRIFT",	0X6E11E175,	-1);
	add_enum_member(id,"VINYL_CATEGORY_SPLASHSET",	0X6E37CDC4,	-1);
	add_enum_member(id,"DEMO_ICE_SHOP_PREVIEW",	0X6E3CDA8E,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_2_LARGE",	0X6E43304C,	-1);
	add_enum_member(id,"NISSAN",	0X6E500E4B,	-1);
	add_enum_member(id,"SMS_UNLOCK_08_SUBJECT",	0X6E58F193,	-1);
	add_enum_member(id,"SMS_UNLOCK_31_BODY",	0X6E66F0AD,	-1);
	add_enum_member(id,"SPONSOR_EUROLITE",	0X6E6A103B,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_DRIFT",	0X6E86D064,	-1);
	add_enum_member(id,"SPONSOR_INFO_NEUSPEED",	0X6E8A0B76,	-1);
	add_enum_member(id,"DEMO_BODY_SHOP_PREVIEW",	0X6EB0ECCB,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_2_SMALL",	0X6EC828BA,	-1);
	add_enum_member(id,"CONFIRM_RESET_CUSTOMIZE_CATEGORY_VINYLS",	0X6EE64972,	-1);
	add_enum_member(id,"BUTTON_SHOW_SMS",	0X6EF09D0D,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE_SPRINT",	0X6F188DEE,	-1);
	add_enum_member(id,"QR_FREE_RUN",	0X6F2421B7,	-1);
	add_enum_member(id,"OPT_LIGHT_TRAILS",	0X6F2C7417,	-1);
	add_enum_member(id,"CONFIRM_CAREER_QUIT_TO_MAIN",	0X6F4796A6,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_3_BODY",	0X6F612909,	-1);
	add_enum_member(id,"PC_KEYS_PAUSE",	0X6F99F62A,	-1);
	add_enum_member(id,"TOP_HOOD_CHAINS",	0X6FAA6B90,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_GO_TO_GARAGE_NOW_BODY",	0X6FBB3BF0,	-1);
	add_enum_member(id,"PC_KEYS_RESET",	0X6FC04E6F,	-1);
	add_enum_member(id,"VINYL_CATEGORY_TOP_LAYER",	0X6FD3B71C,	-1);
	add_enum_member(id,"MESSAGE_05_SUBJECT",	0X6FFE3717,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TRAIN_BODY",	0X700E3DCF,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_DISTANCE",	0X7019ADD7,	-1);
	add_enum_member(id,"ONLINE_LAST_MONTH_RANKINGS",	0X703970F8,	-1);
	add_enum_member(id,"SC17_LINE_1",	0X704F4F94,	-1);
	add_enum_member(id,"ROOF_STYLE13_DUAL",	0X7063C82E,	-1);
	add_enum_member(id,"SU_CAMBER_KIT",	0X7067AB57,	-1);
	add_enum_member(id,"PRR_POINTS_TITLE",	0X70802830,	-1);
	add_enum_member(id,"OLX_BLOCKED",	0X7087CE45,	-1);
	add_enum_member(id,"BUTTON_CAREER_STATISTICS",	0X70A30056,	-1);
	add_enum_member(id,"CHOOSE_VINYL",	0X70B11CF1,	-1);
	add_enum_member(id,"SMS_UNLOCK_32_BODY",	0X70BC194E,	-1);
	add_enum_member(id,"PC_DEMO_GAMEPLAY_TITLE",	0X70C738E6,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RBRKR_SUBJECT",	0X70DF6656,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_LOAD_CARS_FOR_SPLIT_SCREEN",	0X70E72B92,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_3_MEDIUM",	0X7129D5CE,	-1);
	add_enum_member(id,"KITW00_BODY",	0X712D304B,	-1);
	add_enum_member(id,"TYPE_3_CHARTREUSE",	0X71322A28,	-1);
	add_enum_member(id,"HELP_CARSPECIALTIES_NEON_SELECT",	0X71345941,	-1);
	add_enum_member(id,"OL_MSG_REMOVE_FRIEND_CONFIRM_VOICE",	0X713B9C46,	-1);
	add_enum_member(id,"ORANGE",	0X713E201B,	-1);
	add_enum_member(id,"LABEL_GAMES_PLAYED",	0X716AD2A9,	-1);
	add_enum_member(id,"CONFIRM_SETTINGS_CHANGED_SAVE",	0X71851654,	-1);
	add_enum_member(id,"CIRCUIT_LEADER",	0X719AFE9E,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_4_BODY",	0X71B651AA,	-1);
	add_enum_member(id,"OL_RECEIVED",	0X71D5E280,	-1);
	add_enum_member(id,"SMS_LOC_EVENTS_OUT_THERE_BODY",	0X720F48FE,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE_CIRCUIT",	0X722F35A1,	-1);
	add_enum_member(id,"SMS_UNLOCK_18_SUBJECT",	0X726382B4,	-1);
	add_enum_member(id,"ENGAGE_TIPS_FD_RATIO",	0X7282B9EC,	-1);
	add_enum_member(id,"OLX_ERROR_GAMERTAG_IN_USE",	0X72943CC4,	-1);
	add_enum_member(id,"PC_LAN",	0X7294434C,	-1);
	add_enum_member(id,"SHOP_BLURB_CRIB_1",	0X72988DBE,	-1);
	add_enum_member(id,"PEUGOT",	0X72B2E513,	-1);
	add_enum_member(id,"ROOF_STYLE14_DUAL",	0X72B8F0CF,	-1);
	add_enum_member(id,"OL_ENTER_PERSONA_NAME",	0X72BB728E,	-1);
	add_enum_member(id,"HELP_OL__BODY_SHOP_MAIN",	0X72C15FCB,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SCNORWAY",	0X72ECA090,	-1);
	add_enum_member(id,"HELP_CRIB_CHANGEPARTS_BODY",	0X72F18963,	-1);
	add_enum_member(id,"HELP_CRIB_CHANGEPARTS_MAIN",	0X72F7569A,	-1);
	add_enum_member(id,"HELP_CRIB_CHANGEPARTS_NEON",	0X72F7F4C5,	-1);
	add_enum_member(id,"SMS_UNLOCK_33_BODY",	0X731141EF,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_DECAL_SELECT",	0X73332E68,	-1);
	add_enum_member(id,"PC_KEYS_CAREER_STATS",	0X735B2E6C,	-1);
	add_enum_member(id,"UI_PAUSE_AUDIO_OPTIONS_TITLE",	0X737D1B97,	-1);
	add_enum_member(id,"TR_LIMITED_SLIP_DIFFERENTIAL",	0X7382E1EF,	-1);
	add_enum_member(id,"VISUAL_PART_FRONT_BUMPER",	0X739C4A1B,	-1);
	add_enum_member(id,"PERF_CATEGORY_TRANSMISSION",	0X73AD2F72,	-1);
	add_enum_member(id,"CUSTOMIZE_CANT_PAINT_STOCK_PARTS",	0X73BC702E,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_HIDDEN_EVENTS",	0X73CC4A6B,	-1);
	add_enum_member(id,"PURPLE",	0X73D2EDD7,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPRINGS",	0X73D67F0A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RBRKR_BODY",	0X73DA4A74,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_SAVE_PROGRESS",	0X73E322FD,	-1);
	add_enum_member(id,"SMS_DVD_GENERIC_2_SUBJECT",	0X73F33E6B,	-1);
	add_enum_member(id,"LAN_TRACK_OPTIONS",	0X73F36979,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_5_BODY",	0X740B7A4B,	-1);
	add_enum_member(id,"ORDINAL_ZEROTH",	0X7447C0E3,	-1);
	add_enum_member(id,"HUD_DNF_BLOWN_ENGINE",	0X7449D26D,	-1);
	add_enum_member(id,"OL_OPT_PASSWORDED",	0X744A80A7,	-1);
	add_enum_member(id,"OL_READ_MESSAGE",	0X748BC8B9,	-1);
	add_enum_member(id,"ENTER_FRONTEND_MAGAZINE_BODY",	0X74B2A894,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_REMOVE_DECAL",	0X74E34714,	-1);
	add_enum_member(id,"CS_DVD_UNLOCKS",	0X74E499B0,	-1);
	add_enum_member(id,"PC_DEMO_VISUAL_TITLE",	0X74FACE4A,	-1);
	add_enum_member(id,"ROOF_STYLE15_DUAL",	0X750E1970,	-1);
	add_enum_member(id,"GAME_TIP_GARAGE_TIP_SCREEN",	0X7535BF16,	-1);
	add_enum_member(id,"KIT00_TRUNK_AUDIO",	0X75635A0B,	-1);
	add_enum_member(id,"SMS_UNLOCK_34_BODY",	0X75666A90,	-1);
	add_enum_member(id,"PERF_CATEGORY_WEIGHT_REDUCTION",	0X758D5E3C,	-1);
	add_enum_member(id,"HUD_SHIFT_MISSED",	0X75941DC1,	-1);
	add_enum_member(id,"HELP_OLX_QUICKMATCH",	0X7597CBC3,	-1);
	add_enum_member(id,"LABEL_POSITION",	0X75B6CA33,	-1);
	add_enum_member(id,"CREATE_PROFILE_BUTTON",	0X75C1D7FE,	-1);
	add_enum_member(id,"PRR_SINGLE_RACE",	0X75D2168E,	-1);
	add_enum_member(id,"PRW_CASH_WON",	0X75D23E29,	-1);
	add_enum_member(id,"PC_SEARCH_ENTRY",	0X75E2A098,	-1);
	add_enum_member(id,"QR_URL",	0X75F903F4,	-1);
	add_enum_member(id,"SMS_INTRO_EVENTS_BODY",	0X7608683E,	-1);
	add_enum_member(id,"TUNING_DRAG_STATS_MSG_QUARTER_MILE",	0X761E08CE,	-1);
	add_enum_member(id,"UI_CRIB_SHOW_DVDS",	0X7647B08C,	-1);
	add_enum_member(id,"UI_SHOWCASE",	0X7652F899,	-1);
	add_enum_member(id,"TYPE_3_LEFT_HOOD_NOZZLE",	0X7668E127,	-1);
	add_enum_member(id,"OLX_RACE_TRACK_SELECT",	0X766A0EDF,	-1);
	add_enum_member(id,"SMS_UNLOCK_28_SUBJECT",	0X766E13D5,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_1",	0X769A4775,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_2",	0X769A4776,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_3",	0X769A4777,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_4",	0X769A4778,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_5",	0X769A4779,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_6",	0X769A477A,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_7",	0X769A477B,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_8",	0X769A477C,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_RANDOM_9",	0X769A477D,	-1);
	add_enum_member(id,"CAR_NAME_COROLLA",	0X769D5FE0,	-1);
	add_enum_member(id,"MU_PAUSE_AUDIO_MODE",	0X76A191B3,	-1);
	add_enum_member(id,"UI_CRIB_SPONSOR_ONE",	0X76AE5C10,	-1);
	add_enum_member(id,"UI_CRIB_SPONSOR_TWO",	0X76AE7288,	-1);
	add_enum_member(id,"OL_MSG_HAS_INVITED_YOU_TO_VOICE_CHAT",	0X76BE33FF,	-1);
	add_enum_member(id,"DYNO_TIP_BRAKE_BIAS",	0X76E721C7,	-1);
	add_enum_member(id,"TUNING_MAX_TORQUE_FORMAT",	0X76F2BC60,	-1);
	add_enum_member(id,"STYLE23_HOOD_CF",	0X76FB2B66,	-1);
	add_enum_member(id,"LOADING_TITLE_THE_GARAGE_REWARDS",	0X7709FD9B,	-1);
	add_enum_member(id,"RACHEL",	0X770AF86E,	-1);
	add_enum_member(id,"OL_OPT_COLLISION_DETECTION",	0X7712E575,	-1);
	add_enum_member(id,"TYPE_2_BOTH_HOOD_NOZZLES",	0X772093DB,	-1);
	add_enum_member(id,"OPT_WHEEL_NON_LINEAR",	0X774AACAA,	-1);
	add_enum_member(id,"REMOVE",	0X7758F62D,	-1);
	add_enum_member(id,"ROOF_STYLE16_DUAL",	0X77634211,	-1);
	add_enum_member(id,"SMS_UNLOCK_35_BODY",	0X77BB9331,	-1);
	add_enum_member(id,"STYLE_COLOSOL_DRIFT",	0X77D405A2,	-1);
	add_enum_member(id,"TYPE_1_BOTH_LEFT_NOZZLES",	0X77DC847B,	-1);
	add_enum_member(id,"LVL_1_HYDRAULICS",	0X77EA7D34,	-1);
	add_enum_member(id,"OL_GAME_ROOM_COMPLAINT",	0X77FEEC35,	-1);
	add_enum_member(id,"OL_MSG_DOWNLOADING_TOS",	0X780207CA,	-1);
	add_enum_member(id,"OL_MSG_BLOCKING_BUDDY",	0X78300EBF,	-1);
	add_enum_member(id,"HUD_GETAWAY_LOSE_THEM",	0X783202B0,	-1);
	add_enum_member(id,"OL_MSG_DOWNLOADING_NEWS",	0X783F8D11,	-1);
	add_enum_member(id,"MU_PAUSE_REPLAY",	0X7840428A,	-1);
	add_enum_member(id,"DRIFT_RUNNERUP",	0X78671DB6,	-1);
	add_enum_member(id,"REPLAY_LAP",	0X788C05E8,	-1);
	add_enum_member(id,"ENGAGE_TIPS_DRSHIFT_SUBJECT",	0X78CB3307,	-1);
	add_enum_member(id,"PREVIEW_SELL_SCREEN",	0X78D5F70F,	-1);
	add_enum_member(id,"SHOP_BLURB_PARTS_SHOP_1",	0X78DAD861,	-1);
	add_enum_member(id,"PAINT_CATEGORY_VINYLS",	0X78DEEA1C,	-1);
	add_enum_member(id,"TI_PRO_PERFORMANCE_TIRES",	0X78F307E3,	-1);
	add_enum_member(id,"Chevrolet",	0X79115F4B,	-1);
	add_enum_member(id,"VISUAL_PART_ROOF_SCOOP",	0X79165861,	-1);
	add_enum_member(id,"MOBILE_MESSAGE_HEADER",	0X791F62A3,	-1);
	add_enum_member(id,"NEON_PINK_PULSE",	0X79595C08,	-1);
	add_enum_member(id,"LANG_DUTCH",	0X796D6858,	-1);
	add_enum_member(id,"CUSTOMIZE_TITLE_BODY_SHOP",	0X796DC449,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_COAL_HARBOR_BODY",	0X797E7F7B,	-1);
	add_enum_member(id,"V3_ALL_BUT_HOOD_RIGHT_PURGE",	0X798F86B2,	-1);
	add_enum_member(id,"OLX_ERROR_GAMERTAG_LOCKED",	0X79964833,	-1);
	add_enum_member(id,"OL_RANKED_QUIT_SESSION",	0X79A85513,	-1);
	add_enum_member(id,"SELECT",	0X79AD657F,	-1);
	add_enum_member(id,"SERENA",	0X79B0B11D,	-1);
	add_enum_member(id,"CAR_NAME_350Z",	0X79B58EE6,	-1);
	add_enum_member(id,"ROOF_STYLE17_DUAL",	0X79B86AB2,	-1);
	add_enum_member(id,"HUD_FINISH_YOUR_POINTS",	0X79BC1E2A,	-1);
	add_enum_member(id,"CAR_NAME_GOLF",	0X79C0F89C,	-1);
	add_enum_member(id,"CAR_NAME_NEON",	0X79C4A524,	-1);
	add_enum_member(id,"FLAG_DUOCOLORV_A",	0X79E5B675,	-1);
	add_enum_member(id,"FLAG_DUOCOLORV_B",	0X79E5B676,	-1);
	add_enum_member(id,"EN_LARGER_DIAMETER_DOWNPIPE",	0X79E9C09D,	-1);
	add_enum_member(id,"BR_6_PISTON_RACING_CALIPERS",	0X79F084E9,	-1);
	add_enum_member(id,"HUD_BEST_LAP",	0X7A04C109,	-1);
	add_enum_member(id,"SMS_UNLOCK_36_BODY",	0X7A10BBD2,	-1);
	add_enum_member(id,"OL_HOST_VIEW_TRACK_MAP",	0X7A255162,	-1);
	add_enum_member(id,"HELP_BODY_SHOP_MAIN",	0X7A4C4AB2,	-1);
	add_enum_member(id,"SMS_DVD_COVER_1_BODY",	0X7A513E2A,	-1);
	add_enum_member(id,"SPONSOR_INFO_BILSTEIN",	0X7A60C857,	-1);
	add_enum_member(id,"SMS_UNLOCK_38_SUBJECT",	0X7A78A4F6,	-1);
	add_enum_member(id,"DEMO_CUSTOMIZE_CONFIRM_KEEP_KIT",	0X7A84021E,	-1);
	add_enum_member(id,"TYPE_3_RIGHT_WHEEL_NOZZLE",	0X7A91C865,	-1);
	add_enum_member(id,"OL_MSG_JOIN_GAME_FAILED",	0X7AA591CC,	-1);
	add_enum_member(id,"STEFAN",	0X7AB90260,	-1);
	add_enum_member(id,"SMS_FROM_GRAPHICS_SHOP",	0X7ACA0A4E,	-1);
	add_enum_member(id,"OL_LOBBY_CREATE",	0X7AD18F04,	-1);
	add_enum_member(id,"TYPE_2_ALL_NOZZLES",	0X7ADBA6BE,	-1);
	add_enum_member(id,"OL_RESTART_REQUESTED",	0X7AFAF0EF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_DRSHIFT_BODY",	0X7B04ECC5,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AERO_DOWN",	0X7B0F3B82,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_OZ_WHEELS",	0X7B14F5C7,	-1);
	add_enum_member(id,"AUDIO_COMP_CROSSOVER_0_MEDIUM",	0X7B5545D3,	-1);
	add_enum_member(id,"UI_MAIN_ONLINE",	0X7B63FF85,	-1);
	add_enum_member(id,"LOADING_TITLE_VISUAL_STAR_RATING",	0X7B66942E,	-1);
	add_enum_member(id,"NO_WET_SHOT_OF_NITROUS",	0X7B6790EF,	-1);
	add_enum_member(id,"SAVELOAD_FILETYPE_PROFILE",	0X7BC467DF,	-1);
	add_enum_member(id,"OPT_DEBUG_PHYSICS",	0X7BD87CDA,	-1);
	add_enum_member(id,"OL_USER_HAS_BLOCKED_FRIEND_REQUEST",	0X7BE4FA45,	-1);
	add_enum_member(id,"ONLINE_OPTION_APPEAR_ONLINE",	0X7BF4E178,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_AM_BODY",	0X7C15B695,	-1);
	add_enum_member(id,"SMS_UNLOCK_37_BODY",	0X7C65E473,	-1);
	add_enum_member(id,"SMS_INTRO_EVENTS_SUBJECT",	0X7CA327E0,	-1);
	add_enum_member(id,"SMS_DVD_COVER_2_BODY",	0X7CA666CB,	-1);
	add_enum_member(id,"NEON_GREEN_PULSE",	0X7CC05367,	-1);
	add_enum_member(id,"STYLE_CLEANSECTION",	0X7CCCEE87,	-1);
	add_enum_member(id,"ASK_ENTER_CRIB_HEADER",	0X7CE21662,	-1);
	add_enum_member(id,"TYPE_2_BOTH_RIGHT_NOZZLES",	0X7CE4EE4F,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_IT_TITLE",	0X7CF58AF8,	-1);
	add_enum_member(id,"SC01_09_SAM_MYGALRACHEL_1",	0X7D0707B6,	-1);
	add_enum_member(id,"SC01_09_SAM_MYGALRACHEL_2",	0X7D0707B7,	-1);
	add_enum_member(id,"SC01_09_SAM_MYGALRACHEL_3",	0X7D0707B8,	-1);
	add_enum_member(id,"SPONSOR_KENWOOD",	0X7D13DA29,	-1);
	add_enum_member(id,"OL_KICKED_OUT_OF_GAME",	0X7D162708,	-1);
	add_enum_member(id,"OL_KICK_PLAYER_MSG",	0X7D1D448D,	-1);
	add_enum_member(id,"PRR_CAR_TITLE",	0X7D283D29,	-1);
	add_enum_member(id,"ENGAGE_SPRINT_FROM",	0X7D29F8F8,	-1);
	add_enum_member(id,"OL_OPTIONS",	0X7D347E05,	-1);
	add_enum_member(id,"OPT_REFLECTION_RATE",	0X7D3930E7,	-1);
	add_enum_member(id,"LABEL_CHAT_HERE",	0X7D485221,	-1);
	add_enum_member(id,"UI_CRIB_REGION_5_COMMENT",	0X7D784605,	-1);
	add_enum_member(id,"SPLIT_SCREEN_GAME_OPTIONS",	0X7D7A6E0E,	-1);
	add_enum_member(id,"TUNING_TYPE_GEAR1",	0X7D822B64,	-1);
	add_enum_member(id,"TUNING_TYPE_GEAR2",	0X7D822B65,	-1);
	add_enum_member(id,"TUNING_TYPE_GEAR3",	0X7D822B66,	-1);
	add_enum_member(id,"TUNING_TYPE_GEAR4",	0X7D822B67,	-1);
	add_enum_member(id,"TUNING_TYPE_GEAR5",	0X7D822B68,	-1);
	add_enum_member(id,"TUNING_TYPE_GEAR6",	0X7D822B69,	-1);
	add_enum_member(id,"OL_EA_LOGIN_PROFILE",	0X7D90C187,	-1);
	add_enum_member(id,"OL_RACE_TRACK_OPTIONS",	0X7DADEE33,	-1);
	add_enum_member(id,"OL_SHARE_EMAIL_ADDRESS",	0X7DB3B4F8,	-1);
	add_enum_member(id,"UI_ADD_KOREAN_SPACE",	0X7DC2C78F,	-1);
	add_enum_member(id,"MINI_MAP_LEGEND",	0X7DDF4897,	-1);
	add_enum_member(id,"HOOD_FLAME1",	0X7DEFB45E,	-1);
	add_enum_member(id,"HOOD_FLAME2",	0X7DEFB45F,	-1);
	add_enum_member(id,"HOOD_FLAME3",	0X7DEFB460,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_STF_BODY",	0X7DFA04B4,	-1);
	add_enum_member(id,"OL_BAD_NAME",	0X7DFDACC0,	-1);
	add_enum_member(id,"CREATE_ACCOUNT_CONFIRM",	0X7E630FAC,	-1);
	add_enum_member(id,"OLX_MSG_REMOVE_FRIEND_CONFIRM",	0X7E71C8A9,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_INVALID_EMAIL",	0X7E77208C,	-1);
	add_enum_member(id,"SMS_UNLOCK_48_SUBJECT",	0X7E833617,	-1);
	add_enum_member(id,"PRR_TOURNEY_STANDINGS_TITLE",	0X7E891F93,	-1);
	add_enum_member(id,"CONFIRM_MUTE",	0X7E9A9C67,	-1);
	add_enum_member(id,"OL_OP_Voice_Chat_Speaker",	0X7EADFD76,	-1);
	add_enum_member(id,"SMS_UNLOCK_38_BODY",	0X7EBB0D14,	-1);
	add_enum_member(id,"TUNING_CAT_AERO",	0X7ED554D1,	-1);
	add_enum_member(id,"CAREER_CAR_LOT_TITLE",	0X7EDC9715,	-1);
	add_enum_member(id,"CAR_SELECT_SAME_CAR",	0X7EE84E4E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_REWARDS_SUBJECT",	0X7EF5AACB,	-1);
	add_enum_member(id,"SMS_DVD_COVER_3_BODY",	0X7EFB8F6C,	-1);
	add_enum_member(id,"PC_NAV_INSTALL_PART",	0X7EFF16C2,	-1);
	add_enum_member(id,"KB_TITLE",	0X7F042BCD,	-1);
	add_enum_member(id,"OL_MSG_BLOCKING_FRIEND_REQUEST",	0X7F1025E7,	-1);
	add_enum_member(id,"DYNO_NOS_DURATION",	0X7F1C766D,	-1);
	add_enum_member(id,"HELP_QR_MODE_OPTIONS",	0X7F2D0C79,	-1);
	add_enum_member(id,"OL_NOT_APPLICABLE",	0X7F2F7AD6,	-1);
	add_enum_member(id,"OPT_WHEEL_TURN_OPTION",	0X7F5C8C06,	-1);
	add_enum_member(id,"VINYL_CATEGORY_RACINGSET",	0X7F61FEED,	-1);
	add_enum_member(id,"HELP_OL__PERFORMANCE_SHOP_MAIN",	0X7F6253EF,	-1);
	add_enum_member(id,"PRR_TRIP_ODOMETER",	0X7F742D4F,	-1);
	add_enum_member(id,"SPONSOR_INFO_YOKOHAMA",	0X7F842556,	-1);
	add_enum_member(id,"PC_ENTER_NAME",	0X7F8537EF,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_RACE_TYPE",	0X7F904AE8,	-1);
	add_enum_member(id,"ENGAGE_DVD_GENERIC_1_BODY",	0X7FC3CD5C,	-1);
	add_enum_member(id,"QR_OPT_LAP_KO",	0X7FD73849,	-1);
	add_enum_member(id,"HOOD_TRIBAL1",	0X801F34F7,	-1);
	add_enum_member(id,"HOOD_TRIBAL2",	0X801F34F8,	-1);
	add_enum_member(id,"HOOD_TRIBAL3",	0X801F34F9,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L1_RED",	0X803EB1BE,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_RED",	0X8050CA3F,	-1);
	add_enum_member(id,"SC01_07_CALEB_COOL",	0X807F53BE,	-1);
	add_enum_member(id,"MU_PAUSE_RESTART",	0X80833FC2,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_10",	0X808AB037,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_11",	0X808AB038,	-1);
	add_enum_member(id,"CSTATISTICS_DRAG_WINS",	0X8090B36A,	-1);
	add_enum_member(id,"OL_HOST_LAN_SERVER",	0X80AF4FC7,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_3_SUBJECT",	0X80B338CB,	-1);
	add_enum_member(id,"ASK_ENTER_URL_SUBJECT",	0X80B8267C,	-1);
	add_enum_member(id,"CONFIRM_UNIQUE_CHANGE_REMOVE",	0X80C151D5,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_4_SUBJECT",	0X80D92C43,	-1);
	add_enum_member(id,"OL_NET_CONFIG_CREATE_NEW",	0X80E17B11,	-1);
	add_enum_member(id,"UI_ONLINE_RANKING",	0X8106D26A,	-1);
	add_enum_member(id,"HELP_PERFORMANCE_SHOP_PACKAGE",	0X8109153D,	-1);
	add_enum_member(id,"SMS_UNLOCK_39_BODY",	0X811035B5,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_VINYL_LAYER_SELECT",	0X81163A96,	-1);
	add_enum_member(id,"OL_MSG_CONFIG_DIF_PS",	0X81273F29,	-1);
	add_enum_member(id,"DEMO_DPAD",	0X812B621C,	-1);
	add_enum_member(id,"OL_LOBBY_FILTER",	0X813251F6,	-1);
	add_enum_member(id,"SMS_DVD_COVER_4_BODY",	0X8150B80D,	-1);
	add_enum_member(id,"ROOF_STYLE06_OFFSET",	0X815BCD91,	-1);
	add_enum_member(id,"OL_MSG_FILTER_CANNOT_BE_APPLIED",	0X8173FC6B,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MEGA_BODY",	0X817A974B,	-1);
	add_enum_member(id,"LOADING_GRAPHICS_SHOP",	0X817E8DE6,	-1);
	add_enum_member(id,"LABEL_NAME_CAPS",	0X818F0385,	-1);
	add_enum_member(id,"OL_MESS_SEARCH_RESULTS",	0X81AB4717,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_LOAD_LOSE_ANY_CHANGES_TO_THE_PROFILE",	0X81B1D73D,	-1);
	add_enum_member(id,"OUTRUN_NUM_POINTS_TO_WIN",	0X81CAA8E6,	-1);
	add_enum_member(id,"TYPE_3_SKY_BLUE_GOLD",	0X81F6D1B5,	-1);
	add_enum_member(id,"UI_COMMON_SELECT",	0X8202C364,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SD3_BODY",	0X820434B1,	-1);
	add_enum_member(id,"OL_MSG_ERROR_UPLOADING_CAR",	0X82159A60,	-1);
	add_enum_member(id,"STYLE_REVERSE",	0X8217EFAB,	-1);
	add_enum_member(id,"ENGAGE_DVD_GENERIC_2_BODY",	0X8218F5FD,	-1);
	add_enum_member(id,"OPT_MOTION_BLUR",	0X822E4E9B,	-1);
	add_enum_member(id,"HUD_BURNOUT_DISTANCE",	0X823B1FD8,	-1);
	add_enum_member(id,"DYNO_NOS_POWER",	0X824BC854,	-1);
	add_enum_member(id,"SMS_UNLOCK_58_SUBJECT",	0X828DC738,	-1);
	add_enum_member(id,"UI_CHANGE_BRAND",	0X829BD8A8,	-1);
	add_enum_member(id,"OPT_PLAYER_POSITION",	0X82CD8F92,	-1);
	add_enum_member(id,"PC_OL_LOBBY_JOIN_GAME",	0X82CDBA8B,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_10",	0X82D1359E,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_11",	0X82D1359F,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_12",	0X82D135A0,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_13",	0X82D135A1,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_WIDEBODY_VINYL_CARBON",	0X82DFD62A,	-1);
	add_enum_member(id,"PC_KEYS_BACK_REVERSE",	0X82EBCC98,	-1);
	add_enum_member(id,"OL_MSG_NET_HARDWARE_PROBLEM",	0X82EC0F03,	-1);
	add_enum_member(id,"OL_PC_LOCK_ACCOUNT_CONFIRMATION",	0X82EC12C8,	-1);
	add_enum_member(id,"HELP_CRIB_MAGAZINE",	0X82F20772,	-1);
	add_enum_member(id,"OLX_UPDATE_SERVICE",	0X8326E324,	-1);
	add_enum_member(id,"RSTATISTICS_COMPLETION",	0X838FEEF5,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SP_TITLE",	0X839EE8BE,	-1);
	add_enum_member(id,"SMS_DVD_COVER_5_BODY",	0X83A5E0AE,	-1);
	add_enum_member(id,"SC16_LINE_1",	0X840D7AB3,	-1);
	add_enum_member(id,"CAR_NAME_TIBURON",	0X841E5117,	-1);
	add_enum_member(id,"OLX_READ_MESSAGE_NOW",	0X8424D624,	-1);
	add_enum_member(id,"OL_PC_ENTERING_PERFORMANCE",	0X843F5D58,	-1);
	add_enum_member(id,"HELP_OPTIONS_CREDITS",	0X844FEB00,	-1);
	add_enum_member(id,"HELP_GENERIC_SCROLLUPDN_ONEBUTTON_NOCANCEL",	0X84684EE8,	-1);
	add_enum_member(id,"ENGAGE_DVD_GENERIC_3_BODY",	0X846E1E9E,	-1);
	add_enum_member(id,"HELP_CAR_SPECIALTIES_NEON_SELECT",	0X846EE660,	-1);
	add_enum_member(id,"OL_PLAYER_STATUS_READY",	0X847121DD,	-1);
	add_enum_member(id,"OL_NO_EA_SERVER_GAMERTAG",	0X8497E678,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS1_SUBJECT",	0X84C9E2D9,	-1);
	add_enum_member(id,"SMS_LOC_GO_TO_GARAGE_BODY",	0X84D8A279,	-1);
	add_enum_member(id,"OLX_ERROR_INVALID_GAMERTAG",	0X84DBC3E8,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_OPTIONS",	0X84E39124,	-1);
	add_enum_member(id,"UI_MAIN_ONLINE_LAN",	0X84E79DFF,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_2_MEDIUM",	0X84E800ED,	-1);
	add_enum_member(id,"UI_CAREER_LOAD_TEST_TRACK",	0X8513F2C0,	-1);
	add_enum_member(id,"UI_EA_MESSENGER",	0X851C212A,	-1);
	add_enum_member(id,"CAR_SELECT_CONFIRM_TRADE_IN",	0X85215BC6,	-1);
	add_enum_member(id,"POST_RACE_REWARD_TITLE",	0X8528BD24,	-1);
	add_enum_member(id,"OL_MSG_PROBLEM_CONNECTING_TO_EA",	0X85344A3E,	-1);
	add_enum_member(id,"SMS_UNLOCK_06_SUBJECT",	0X85600F91,	-1);
	add_enum_member(id,"HUD_KMH",	0X8569A25F,	-1);
	add_enum_member(id,"HUD_MPH",	0X8569AB44,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SWT_BODY",	0X8590F3C5,	-1);
	add_enum_member(id,"OLX_SIGN_IN",	0X859BF6F8,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_REARVIEW",	0X85A6CE05,	-1);
	add_enum_member(id,"LOADING_TITLE_UNRANKED_USING_CARS",	0X85C044A2,	-1);
	add_enum_member(id,"SHOP_BLURB_PAINT_SHOP_1",	0X85D2ED13,	-1);
	add_enum_member(id,"SMS_DVD_COVER_6_BODY",	0X85FB094F,	-1);
	add_enum_member(id,"OPT_DEBUG_RENDERING",	0X86203875,	-1);
	add_enum_member(id,"HUD_HURRY",	0X862A0519,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_ERROR_SELECTING",	0X86444C9D,	-1);
	add_enum_member(id,"OL_MSG_NETWORK_NOT_LOCATED",	0X8645E0D4,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_PERFORMANCE",	0X864BD0BD,	-1);
	add_enum_member(id,"FLAGS_DENMARK",	0X8655E76D,	-1);
	add_enum_member(id,"OL_GOT_FINAL_SCORE",	0X8668DC07,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_EUROLITE",	0X867B06A0,	-1);
	add_enum_member(id,"TOP_HOOD_MADDOG",	0X8680E646,	-1);
	add_enum_member(id,"OPT_ONLINE_VOICE_TO_SPEAKER",	0X86CC69B7,	-1);
	add_enum_member(id,"CONFIRM_STORE_SETTINGS",	0X86CD6929,	-1);
	add_enum_member(id,"QR_TRACK_OPTIONS",	0X86F0A661,	-1);
	add_enum_member(id,"OL_MSG_PROBLEM_RECONNECTING_TO_LOBBY",	0X86F11927,	-1);
	add_enum_member(id,"HUD_TOTAL",	0X86FFE723,	-1);
	add_enum_member(id,"MESSAGE_03_SUBJECT",	0X87055515,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_1",	0X8718DD0B,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_2",	0X8718DD0C,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_3",	0X8718DD0D,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_4",	0X8718DD0E,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_5",	0X8718DD0F,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_6",	0X8718DD10,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_7",	0X8718DD11,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_8",	0X8718DD12,	-1);
	add_enum_member(id,"ENGAGE_SPON_STREET_RANDOM_9",	0X8718DD13,	-1);
	add_enum_member(id,"SMS_UNLOCK_01_BODY",	0X87783A6A,	-1);
	add_enum_member(id,"SU_SPORT_SPRINGS_AND_SHOCKS",	0X87962B3F,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_TOO_YOUNG",	0X87983521,	-1);
	add_enum_member(id,"YELLOW",	0X87AC789B,	-1);
	add_enum_member(id,"TUNING_TYPE_REAR_SHOCKS",	0X87C86448,	-1);
	return id;
}

static Enums_2(id) {

	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_1",	0X8809CAD2,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_2",	0X8809CAD3,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_3",	0X8809CAD4,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_4",	0X8809CAD5,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_5",	0X8809CAD6,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_6",	0X8809CAD7,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_7",	0X8809CAD8,	-1);
	add_enum_member(id,"ENGAGE_SPON_DRAG_RANDOM_8",	0X8809CAD9,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L1_BLUE",	0X880C43AB,	-1);
	add_enum_member(id,"STYLE_HEADSTART",	0X882C96AF,	-1);
	add_enum_member(id,"MONTH_OCTOBER",	0X8832F372,	-1);
	add_enum_member(id,"SMS_DVD_COVER_7_BODY",	0X885031F0,	-1);
	add_enum_member(id,"TYPE_2_LEFT_HOOD_NOZZLE",	0X8852BF06,	-1);
	add_enum_member(id,"UI_COMMON_OFF",	0X88576CFF,	-1);
	add_enum_member(id,"UI_COMMON_YES",	0X88579775,	-1);
	add_enum_member(id,"TRACK_DIRECTION_REVERSE_ONLINE",	0X885ED413,	-1);
	add_enum_member(id,"Marketing_String_1",	0X88632EE7,	-1);
	add_enum_member(id,"Marketing_String_2",	0X88632EE8,	-1);
	add_enum_member(id,"Marketing_String_3",	0X88632EE9,	-1);
	add_enum_member(id,"Marketing_String_4",	0X88632EEA,	-1);
	add_enum_member(id,"Marketing_String_5",	0X88632EEB,	-1);
	add_enum_member(id,"SMS_OUTRUN_INTRO_SUBJECT",	0X886DA3D8,	-1);
	add_enum_member(id,"DECAL_COLOR",	0X889BACB6,	-1);
	add_enum_member(id,"OL_MSG_INVITE_WITHDRAWN",	0X88A7CF05,	-1);
	add_enum_member(id,"STYLE_SHORTCUT",	0X88DE696B,	-1);
	add_enum_member(id,"SMS_OUTRUN_DEFEAT_BODY",	0X88F9ACB3,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_EXIT_SHOP",	0X88FF0D21,	-1);
	add_enum_member(id,"MU_PAUSE_SHIFT_ASSIST",	0X890FA231,	-1);
	add_enum_member(id,"PAINT_ADD_VINYL_TO_SETUP",	0X8966D866,	-1);
	add_enum_member(id,"SMS_UNLOCK_16_SUBJECT",	0X896AA0B2,	-1);
	add_enum_member(id,"TRAFFIC_NONE",	0X896BCB4D,	-1);
	add_enum_member(id,"CUSTOMIZE_NO_MORE_SPACE",	0X8990EADB,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L1_BLACK",	0X89946400,	-1);
	add_enum_member(id,"PRS_QUARTER_MILE_SPEED",	0X899AB38D,	-1);
	add_enum_member(id,"DECAL_SLOT1",	0X89BB9CEA,	-1);
	add_enum_member(id,"DECAL_SLOT2",	0X89BB9CEB,	-1);
	add_enum_member(id,"DECAL_SLOT3",	0X89BB9CEC,	-1);
	add_enum_member(id,"DECAL_SLOT4",	0X89BB9CED,	-1);
	add_enum_member(id,"DECAL_SLOT5",	0X89BB9CEE,	-1);
	add_enum_member(id,"DECAL_SLOT6",	0X89BB9CEF,	-1);
	add_enum_member(id,"DECAL_SLOT7",	0X89BB9CF0,	-1);
	add_enum_member(id,"DECAL_SLOT8",	0X89BB9CF1,	-1);
	add_enum_member(id,"SMS_UNLOCK_02_BODY",	0X89CD630B,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PERF_ALREADY_STOCK",	0X89D4E03F,	-1);
	add_enum_member(id,"OL_MSG_MAX_INVITES_SENT",	0X89E3B31F,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L1_GREEN",	0X89F23A14,	-1);
	add_enum_member(id,"REPLAY_HIDE",	0X8A0AB225,	-1);
	add_enum_member(id,"DYNO_SHOP_HEADER",	0X8A24D87A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TANDEM_SUBJECT",	0X8A33654C,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SCNORWAY_TITLE",	0X8A5A61B1,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_AQUA",	0X8A60F52C,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_BLUE",	0X8A616C4C,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_GOLD",	0X8A6435CA,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_LIME",	0X8A66DA4B,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_PINK",	0X8A690BF6,	-1);
	add_enum_member(id,"HELP_CRIB_DVD",	0X8A9E0F44,	-1);
	add_enum_member(id,"OL_MSG_PASSWORD_REQUEST_SENT",	0X8AA2AA13,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL2_DEMO_BODY",	0X8AA477A8,	-1);
	add_enum_member(id,"SMS_DVD_COVER_8_BODY",	0X8AA55A91,	-1);
	add_enum_member(id,"PRR_TOP_SPEED",	0X8B026675,	-1);
	add_enum_member(id,"OL_MSG_CANT_FIND_GAMETAG",	0X8B207E1A,	-1);
	add_enum_member(id,"OL_FINISH_REGISTRATION",	0X8B476814,	-1);
	add_enum_member(id,"UI_ICE_TRUNK_AUDIO",	0X8B543F71,	-1);
	add_enum_member(id,"CSTATISTICS_STAGE",	0X8B84E940,	-1);
	add_enum_member(id,"QR_OPT_CATCH_UP",	0X8B8E913A,	-1);
	add_enum_member(id,"OPT_DEFAULT_CONTROLLER_STRING",	0X8BAB66EF,	-1);
	add_enum_member(id,"OL_PASSWORD",	0X8BC0B80C,	-1);
	add_enum_member(id,"PRW_HEADER_TEXT",	0X8BEC8F84,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GPS_SUBJECT",	0X8C00BBDD,	-1);
	add_enum_member(id,"FLAGS_NETHERLANDS",	0X8C066D23,	-1);
	add_enum_member(id,"SMS_UNLOCK_03_BODY",	0X8C228BAC,	-1);
	add_enum_member(id,"HELP_LOAD_PROFILE_BOOT",	0X8C4D03EA,	-1);
	add_enum_member(id,"OLX_ALL",	0X8CAC9D6A,	-1);
	add_enum_member(id,"URL_LEADER",	0X8CB6E51E,	-1);
	add_enum_member(id,"UI_PAUSE_QUIT_DEMO",	0X8CBE2B00,	-1);
	add_enum_member(id,"PRR_TOTAL_POINTS",	0X8CC45AB2,	-1);
	add_enum_member(id,"LOADING_PERFORMANCE_TUNING_DYNO",	0X8CD2171B,	-1);
	add_enum_member(id,"SMS_DVD_COVER_9_BODY",	0X8CFA8332,	-1);
	add_enum_member(id,"OL_BLOCK_CONFIRM",	0X8D0A8371,	-1);
	add_enum_member(id,"CAREER_CAR_LOT_BROWSE_CRIB_CARS",	0X8D0DAFEC,	-1);
	add_enum_member(id,"EC_REMOVE_SPEED_LIMITER",	0X8D0FA2D9,	-1);
	add_enum_member(id,"OL_WARNING_JOIN_GAME_RANKED_PS2XBX",	0X8D204E91,	-1);
	add_enum_member(id,"OL_IS_ONLINE_IN",	0X8D3EE1AF,	-1);
	add_enum_member(id,"PC_NAV_CUSTOMIZE",	0X8D5ABF58,	-1);
	add_enum_member(id,"SMS_UNLOCK_26_SUBJECT",	0X8D7531D3,	-1);
	add_enum_member(id,"QR_TRACK_COMMENT_LABEL",	0X8D9B9EC7,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_SUV_EVENTS",	0X8DA6481D,	-1);
	add_enum_member(id,"OL_OP_Voice_Volume",	0X8DAD3684,	-1);
	add_enum_member(id,"STYLE_FIRST_SPOT",	0X8DCACCBC,	-1);
	add_enum_member(id,"LABEL_PLAYERS_ONLINE",	0X8DEECE42,	-1);
	add_enum_member(id,"STYLE21_HOOD_CF",	0X8E024964,	-1);
	add_enum_member(id,"OL_GAME_ROOM_BAN_PLAYER",	0X8E06920B,	-1);
	add_enum_member(id,"VINYL_CATEGORY_ARTFACTORY",	0X8E076BEC,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_INSTALL_TRUNK_LAYOUT_REPLACE",	0X8E4312B0,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_1",	0X8E4433AF,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_2",	0X8E4433B0,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_3",	0X8E4433B1,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_4",	0X8E4433B2,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_5",	0X8E4433B3,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_6",	0X8E4433B4,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_7",	0X8E4433B5,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_8",	0X8E4433B6,	-1);
	add_enum_member(id,"ENGAGE_KO_RANDOM_9",	0X8E4433B7,	-1);
	add_enum_member(id,"DECAL_ZONE_HOOD",	0X8E52365C,	-1);
	add_enum_member(id,"IG_CURRENT",	0X8E566831,	-1);
	add_enum_member(id,"SMS_UNLOCK_04_BODY",	0X8E77B44D,	-1);
	add_enum_member(id,"CSTATISTICS_DRIFT_WINS",	0X8EAB27C5,	-1);
	add_enum_member(id,"KIT00_REAR_BUMPER",	0X8EBBEEBA,	-1);
	add_enum_member(id,"OL_SELECT_NET_CONFIG",	0X8EF89614,	-1);
	add_enum_member(id,"SAVELOAD_INFORM_MEMCARD_OUT_AUTOSAVE_CONFIRM_GC",	0X8F1436A4,	-1);
	add_enum_member(id,"LOADING_ONLINE_UNRANKED_ALTERNATE",	0X8F24D3B7,	-1);
	add_enum_member(id,"OL_CREATE_ACCOUNT_TITLE",	0X8F287CFA,	-1);
	add_enum_member(id,"AUDIO_COMP_CROSSOVER_0_LARGE",	0X8F4B9DFD,	-1);
	add_enum_member(id,"EA_TERMS_CONDITIONS_DONT_ACCEPT",	0X8F56222B,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL_SUBJECT",	0X8F6E7874,	-1);
	add_enum_member(id,"SPONSORSHIPS_TITLE",	0X8F998FBB,	-1);
	add_enum_member(id,"AUDIO_COMP_CROSSOVER_0_SMALL",	0X8FD0966B,	-1);
	add_enum_member(id,"OPT_REFLECTION_DETAIL",	0X8FE9288E,	-1);
	add_enum_member(id,"ENTER_INGAME_MAGAZINE_BODY",	0X8FF3F225,	-1);
	add_enum_member(id,"UI_REPLAY_LAP",	0X90038D25,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_MTTM_BODY",	0X90083E89,	-1);
	add_enum_member(id,"OL_MSG_TOS_DOWNLOAD_FAILED",	0X9016A670,	-1);
	add_enum_member(id,"HELP_OL__PERFORMANCE_SHOP_PART_SELECT",	0X9021F500,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_REMOVE_HOOD_DECALS",	0X903854F0,	-1);
	add_enum_member(id,"OL_COUNTDOWN_TIME",	0X90599828,	-1);
	add_enum_member(id,"SMS_OUTRUN_VICTORY_SUBJECT",	0X90643BDC,	-1);
	add_enum_member(id,"OL_MSG_ERROR_TALKING_TO_SERVER",	0X906B132A,	-1);
	add_enum_member(id,"UI_REPLAY_HIDE",	0X90732102,	-1);
	add_enum_member(id,"UI_REPLAY_SHOW",	0X90792669,	-1);
	add_enum_member(id,"TRAFFIC_MEDIUM",	0X907C555E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STREETX_BODY",	0X907D8D60,	-1);
	add_enum_member(id,"OL_TERMS_OF_SERVICE",	0X909CD3E8,	-1);
	add_enum_member(id,"TEST_PAUSE_SAVE_SETTINGS",	0X90C2D8BA,	-1);
	add_enum_member(id,"SMS_UNLOCK_05_BODY",	0X90CCDCEE,	-1);
	add_enum_member(id,"STYLE_TRAFFIC_HIT",	0X90DFD9D2,	-1);
	add_enum_member(id,"PC_DEMO_KEEP_EYES",	0X90F3E1CF,	-1);
	add_enum_member(id,"OL_GAME_ROOM_MUTE_VOIP",	0X90F8AC46,	-1);
	add_enum_member(id,"OL_MSG_ACCEPTING_BUDDY_INVITE",	0X91070FF2,	-1);
	add_enum_member(id,"MONTH_JULY",	0X913729C8,	-1);
	add_enum_member(id,"MONTH_JUNE",	0X913729F6,	-1);
	add_enum_member(id,"VINYL_CATEGORY_HOODS",	0X913AC36A,	-1);
	add_enum_member(id,"PEARL_PAINT",	0X913DF10E,	-1);
	add_enum_member(id,"LABEL_HORSEPOWER",	0X91439E2C,	-1);
	add_enum_member(id,"STYLE_THIRD_SPOT",	0X914508CF,	-1);
	add_enum_member(id,"STYLE_DRAFTING",	0X9148097E,	-1);
	add_enum_member(id,"OPT_PLAYER_CAM_SUPER_FAR",	0X916039B4,	-1);
	add_enum_member(id,"SMS_UNLOCK_36_SUBJECT",	0X917FC2F4,	-1);
	add_enum_member(id,"LOADING_TITLE_RACE_BREAKER",	0X9182C3F3,	-1);
	add_enum_member(id,"CUSTOMIZE_SORRY_TOO_MANY_CARS",	0X91921A8D,	-1);
	add_enum_member(id,"HELP_OLX_MAIN_MENU",	0X91BB1BD2,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_CANNOT_CREATE",	0X91C92A94,	-1);
	add_enum_member(id,"CC_PERF_SHOP_BODY",	0X91D22557,	-1);
	add_enum_member(id,"FLAGS_SCOTLAND",	0X91D36963,	-1);
	add_enum_member(id,"PRR_RACE_TIME",	0X91F0139B,	-1);
	add_enum_member(id,"SPONSOR_AVERAGE_POINTS",	0X91F7CA09,	-1);
	add_enum_member(id,"VINYL_CATEGORY_SMEAR",	0X92008D45,	-1);
	add_enum_member(id,"VINYL_CATEGORY_SPARK",	0X9202238E,	-1);
	add_enum_member(id,"PAINT_CATEGORY_PURCHASE_SETUP",	0X920DBB02,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ORGANIC_BODY",	0X92243754,	-1);
	add_enum_member(id,"CSTATISTICS_OVERALL_STATUS",	0X92260F04,	-1);
	add_enum_member(id,"OL_ENTERING_DYNO_WARNING",	0X92377943,	-1);
	add_enum_member(id,"LOADING_TITLE_PERFORMANCE_SHOP",	0X923E2728,	-1);
	add_enum_member(id,"STRING_WHEEL_OPTIONS",	0X92423B95,	-1);
	add_enum_member(id,"OL_MESS_INVITATION_TIMED_OUT",	0X924CF95E,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_MTTM_TITLE",	0X9252C11D,	-1);
	add_enum_member(id,"TR_SHORT_THROW_SHIFT_KIT",	0X92AC16EB,	-1);
	add_enum_member(id,"CAR_NAME_GENERIC",	0X92E4F7F1,	-1);
	add_enum_member(id,"SMS_UNLOCK_06_BODY",	0X9322058F,	-1);
	add_enum_member(id,"HELP_OPTIONS_MAIN",	0X9323DF57,	-1);
	add_enum_member(id,"UI_REPLAY_SELECT",	0X93243268,	-1);
	add_enum_member(id,"OL_COLLISION_DETECTION",	0X932538C3,	-1);
	add_enum_member(id,"UI_COMMON_BACK",	0X933DD695,	-1);
	add_enum_member(id,"UI_COMMON_NEXT",	0X93447EE3,	-1);
	add_enum_member(id,"UI_COMMON_SLOT",	0X93475966,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STREETX_SUBJECT",	0X9354D1C2,	-1);
	add_enum_member(id,"HELP_OL__PERFORMANCE_SHOP_BRAND_SELECT",	0X939209B0,	-1);
	add_enum_member(id,"TUNING_TYPE_REAR_SPRINGS",	0X93B7D1A3,	-1);
	add_enum_member(id,"QR_MODE_OPTIONS",	0X93C075B1,	-1);
	add_enum_member(id,"QR_CIRCUIT",	0X93FDEE74,	-1);
	add_enum_member(id,"DEMO_DPAD_OR_ANALOG",	0X93FEE5ED,	-1);
	add_enum_member(id,"MINIMAP_CARLOT",	0X93FF4A6E,	-1);
	add_enum_member(id,"SMS_INTRO_HIDDEN_BODY",	0X94330D15,	-1);
	add_enum_member(id,"LABEL_DISCOUNT",	0X94544527,	-1);
	add_enum_member(id,"VISUAL_PART_WIDE_BODY_KIT",	0X945E9BC5,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_RACE",	0X946BF653,	-1);
	add_enum_member(id,"SMS_MSG_TYPE_SHOP",	0X946CA212,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STEERING_CONTROLS_DEMO_SUBJECT",	0X9471028B,	-1);
	add_enum_member(id,"UI_CRIB_REGION_3_COMMENT",	0X947F6403,	-1);
	add_enum_member(id,"UI_RIMS_HEADER",	0X94C5E7BF,	-1);
	add_enum_member(id,"CS_REGION_STATUS",	0X94D3715B,	-1);
	add_enum_member(id,"OLX_OPTIONS_TITLE_STRING",	0X94EF34D4,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_PERF_PACKAGE",	0X94F4C140,	-1);
	add_enum_member(id,"DVDSTATISTICS_NONE",	0X950302D7,	-1);
	add_enum_member(id,"ROOF_STYLE05_OFFSET",	0X9519F8B0,	-1);
	add_enum_member(id,"KIT00_EXHAUST",	0X951B63E8,	-1);
	add_enum_member(id,"SMS_DVD_COVER_9_SUBJECT",	0X951CCE54,	-1);
	add_enum_member(id,"TOP_HOOD_SKULL2",	0X953E4317,	-1);
	add_enum_member(id,"TOP_HOOD_SKULL3",	0X953E4318,	-1);
	add_enum_member(id,"OL_PRIVATE_ROOM",	0X95684A90,	-1);
	add_enum_member(id,"SMS_UNLOCK_07_BODY",	0X95772E30,	-1);
	add_enum_member(id,"SMS_UNLOCK_46_SUBJECT",	0X958A5415,	-1);
	add_enum_member(id,"TUNING_ACCELERATION",	0X95A7073D,	-1);
	add_enum_member(id,"EC_PERFORMANCE_CHIP",	0X95B7A7FB,	-1);
	add_enum_member(id,"OPT_FOG",	0X95B8F38D,	-1);
	add_enum_member(id,"KB_BTN_DELETE",	0X95E10F41,	-1);
	add_enum_member(id,"HELP_OL__CARSPECIALTIES_SHOP_MAIN",	0X95EB6769,	-1);
	add_enum_member(id,"OL_VIEW_STATS",	0X9633E6C2,	-1);
	add_enum_member(id,"HELP_COLOR_WITHTRIGGERS",	0X96438588,	-1);
	add_enum_member(id,"OPT_PLAYER_LAP_INFO",	0X969F96A5,	-1);
	add_enum_member(id,"OL_CAR_CLASS_RESTRICTION_NO_COLON",	0X96A1E80F,	-1);
	add_enum_member(id,"PRR_POSITION",	0X96B05F47,	-1);
	add_enum_member(id,"DEMO_LEGAL_MUSIC_TEXT",	0X96B89C4C,	-1);
	add_enum_member(id,"HUD_GPS_SEARCHING",	0X96D596BC,	-1);
	add_enum_member(id,"LAN_OL_LOBBY_CREATEGAME",	0X96D7D398,	-1);
	add_enum_member(id,"FLAG_CROSS_A",	0X96DBE962,	-1);
	add_enum_member(id,"FLAG_CROSS_B",	0X96DBE963,	-1);
	add_enum_member(id,"FLAG_CROSS_C",	0X96DBE964,	-1);
	add_enum_member(id,"PRS_TRIPMETER",	0X96DD344F,	-1);
	add_enum_member(id,"START_GPS",	0X96DDB796,	-1);
	add_enum_member(id,"PC_DEMO_LEGAL_NOTICE_NISSAN",	0X96E47726,	-1);
	add_enum_member(id,"OL_CREATE_NEW_PERSONA",	0X9700A5AD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STAB_SUBJECT",	0X9701F11D,	-1);
	add_enum_member(id,"CREATE_GAME_TITLE",	0X972DD7ED,	-1);
	add_enum_member(id,"ENGAGE_TIPS_LOT_SUBJECT",	0X97422602,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_LOAD_THE_PROFILE",	0X976BDAAA,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_REMOVE_HOOD_DECALS_VINYLS",	0X9796DFB4,	-1);
	add_enum_member(id,"ASK_ENTER_BODY_SHOP",	0X979E6441,	-1);
	add_enum_member(id,"HUD_400_METRE_SPEED",	0X97A4E19F,	-1);
	add_enum_member(id,"NEW_CAREER",	0X97B1DCDA,	-1);
	add_enum_member(id,"OL_MSG_MUST_BE_IN_SAME_GAME",	0X97B25A02,	-1);
	add_enum_member(id,"SAVELOAD_TITLE_XBOX",	0X97B3C8CF,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_1_SUBJECT",	0X97BA56C9,	-1);
	add_enum_member(id,"OL_OPT_CONFIRM_PASSWORD",	0X97CB518B,	-1);
	add_enum_member(id,"SC15_LINE_1",	0X97CBA5D2,	-1);
	add_enum_member(id,"SC15_LINE_2",	0X97CBA5D3,	-1);
	add_enum_member(id,"MU_PAUSE_VOIP_UNMUTE",	0X97CBC6D8,	-1);
	add_enum_member(id,"SMS_UNLOCK_08_BODY",	0X97CC56D1,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_2_SUBJECT",	0X97E04A41,	-1);
	add_enum_member(id,"PC_NAV_MESSAGE_MANAGEMENT",	0X97EFCB16,	-1);
	add_enum_member(id,"LOADING_MEGALO_SHOP",	0X97FCBDEA,	-1);
	add_enum_member(id,"TYPE_2_RIGHT_HOOD_NOZZLE",	0X9807BA99,	-1);
	add_enum_member(id,"ASK_ENTER_CRIB",	0X987EECDA,	-1);
	add_enum_member(id,"TYPE_2_GREEN_BLUE",	0X988238A9,	-1);
	add_enum_member(id,"TYPE_2_GREEN_GOLD",	0X98850227,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_1_MEDIUM",	0X98A62C0C,	-1);
	add_enum_member(id,"MESSAGE_01_BODY",	0X98D34851,	-1);
	add_enum_member(id,"MESSAGE_01_FROM",	0X98D587F7,	-1);
	add_enum_member(id,"CAREER_CAR_SELECT_TITLE",	0X98E3CE26,	-1);
	add_enum_member(id,"SMS_CAR_UNLOCK_1_BODY",	0X98F11A2F,	-1);
	add_enum_member(id,"CAR_NAME_RX7_FULL",	0X991414A7,	-1);
	add_enum_member(id,"SPONSOR_POINTS_TITLE",	0X99419A50,	-1);
	add_enum_member(id,"OL_OPT_ENTER_PASSWORD",	0X9953843B,	-1);
	add_enum_member(id,"SAVELOAD_SAVEPOINT",	0X996463E6,	-1);
	add_enum_member(id,"OL_CREATE_USER_ACCOUNT_CONFIRM_PASSWORD",	0X99659496,	-1);
	add_enum_member(id,"ENTER_INGAME_DVD_SUBJECT",	0X99829679,	-1);
	add_enum_member(id,"UNIQUES_SHOP_TITLE",	0X9986A6E3,	-1);
	add_enum_member(id,"SMS_UNLOCK_56_SUBJECT",	0X9994E536,	-1);
	add_enum_member(id,"OL_FEEDBACK_LEWDNESS_DESC",	0X99D8BAE0,	-1);
	add_enum_member(id,"SMS_GO_TO_MAILBOX",	0X99E91974,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STEERING_CONTROLS_DEMO_BODY",	0X9A1D4AC9,	-1);
	add_enum_member(id,"SMS_UNLOCK_09_BODY",	0X9A217F72,	-1);
	add_enum_member(id,"OL_ENTER_MESSAGE",	0X9A2E5F7B,	-1);
	add_enum_member(id,"TYPE_1_LEFT_HOOD_NOZZLE",	0X9A3C9CE5,	-1);
	add_enum_member(id,"OL_MESS_OTHER_HAS_MAX_FRIENDS",	0X9A58E01C,	-1);
	add_enum_member(id,"OL_GAME_ROOM_START_RACE",	0X9A9F1336,	-1);
	add_enum_member(id,"OL_NETWORK_CONFIG_CORRUPT",	0X9AB08DA6,	-1);
	add_enum_member(id,"PRS_POSITION",	0X9ABAF068,	-1);
	add_enum_member(id,"MAGAZINES_TITLE",	0X9AD5095F,	-1);
	add_enum_member(id,"SPONSOR_EDELBROCK",	0X9AE84A1D,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SC_TITLE",	0X9AE9D2F1,	-1);
	add_enum_member(id,"TIMER_ZERO",	0X9B07307F,	-1);
	add_enum_member(id,"LABEL_POINTS_TO_NEXT_CLASS",	0X9B1307F0,	-1);
	add_enum_member(id,"MESSAGE_02_BODY",	0X9B2870F2,	-1);
	add_enum_member(id,"MESSAGE_02_FROM",	0X9B2AB098,	-1);
	add_enum_member(id,"HUD_GETAWAY_LOST_LEAD",	0X9B2AF3C7,	-1);
	add_enum_member(id,"DEBUG_ASK_ENTER_CIRCUIT_SUBJECT",	0X9B39C122,	-1);
	add_enum_member(id,"MU_PAUSE_HANDLING_PILOT",	0X9B3A5569,	-1);
	add_enum_member(id,"OLX_OPTIONS_TITLE",	0X9B6BF47E,	-1);
	add_enum_member(id,"OL_EXITING_GAMEROOM_CONFIRM",	0X9B796534,	-1);
	add_enum_member(id,"SMS_OUTRUN_DEFEAT_SUBJECT",	0X9B7E1435,	-1);
	add_enum_member(id,"OL_COUNTDOWN_TIMER",	0X9B8C9D7A,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_CANNOT_START_GAME_HOST",	0X9B90975B,	-1);
	add_enum_member(id,"OL_CREATE_USER_INFORM_ABOUT_EA_CRAPOLA",	0X9B985275,	-1);
	add_enum_member(id,"LS_NINTENDO",	0X9BA134FC,	-1);
	add_enum_member(id,"CONFIRM_LOAD_PREVIOUS",	0X9BA4BEC8,	-1);
	add_enum_member(id,"STYLE_FOURTH_SPOT",	0X9BCB71CC,	-1);
	add_enum_member(id,"UI_CAREER_WORLD_MAP",	0X9C07CA52,	-1);
	add_enum_member(id,"OL_NUMBER_OF_LAPS",	0X9C302C85,	-1);
	add_enum_member(id,"PERF_CATEGORY_SUSPENSION",	0X9C34C75F,	-1);
	add_enum_member(id,"SMS_UNLOCK_04_SUBJECT",	0X9C672D8F,	-1);
	add_enum_member(id,"OL_MSG_STARTING_GAME",	0X9C6E60A4,	-1);
	add_enum_member(id,"CUSTOMIZE_CANT_SELL_STOCK_PARTS",	0X9C74BAA2,	-1);
	add_enum_member(id,"FLAGS_UK",	0X9CA10D4B,	-1);
	add_enum_member(id,"FLAG_USA",	0X9CA77701,	-1);
	add_enum_member(id,"JUKEBOX_PLAY_ALL",	0X9CCE64C4,	-1);
	add_enum_member(id,"JUKEBOX_PLAY_OFF",	0X9CCE9F86,	-1);
	add_enum_member(id,"LABEL_HOST_DISCONNECT",	0X9CE0DA05,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE_STREET_CROSS",	0X9CE82D2E,	-1);
	add_enum_member(id,"OPT_DEBUG_ONLINE",	0X9CF7A73C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS3_DEMO_SUBJECT",	0X9D4851BF,	-1);
	add_enum_member(id,"RIMS_BRAND_GIANELLE",	0X9D50E640,	-1);
	add_enum_member(id,"MINIMAP_GARAGE",	0X9D53BD10,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TANDEM_BODY",	0X9D67BD2A,	-1);
	add_enum_member(id,"MESSAGE_03_BODY",	0X9D7D9993,	-1);
	add_enum_member(id,"MESSAGE_03_FROM",	0X9D7FD939,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BB_TITLE",	0X9D90733F,	-1);
	add_enum_member(id,"SMS_UNLOCK_66_SUBJECT",	0X9D9F7657,	-1);
	add_enum_member(id,"SMS_LOC_X_SPONSOR_BODY",	0X9DA14F06,	-1);
	add_enum_member(id,"OL_MSG_LOGIN_SPECIFY_ALL_INFO",	0X9DA1F76D,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_VINYL_LAYER_SELECT",	0X9DA9E93D,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TURBO",	0X9DB0A710,	-1);
	add_enum_member(id,"FILTER_EVENT_OFF",	0X9DB54A80,	-1);
	add_enum_member(id,"DYNO_TIP_DOWNFORCE",	0X9DCC6E8B,	-1);
	add_enum_member(id,"SPONSOR_POINTS_EARNED",	0X9DE5AEDD,	-1);
	add_enum_member(id,"PC_NAV_CONFIRM_QUIT",	0X9DE6B485,	-1);
	add_enum_member(id,"OL_MSG_HAS_INVITED_TO_VOICE_CHAT",	0X9DE8D763,	-1);
	add_enum_member(id,"OL_MSG_END_CHAT_WARNING",	0X9DF2BE4A,	-1);
	add_enum_member(id,"PC_NAV_INSTALL_PACKAGE",	0X9E067677,	-1);
	add_enum_member(id,"MESSAGE_01_SUBJECT",	0X9E0C7313,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_AM",	0X9E101F88,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BB",	0X9E101F9E,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BW",	0X9E101FB3,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_H4",	0X9E102056,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_IT",	0X9E102097,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_MT",	0X9E10211B,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_PM",	0X9E102177,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SC",	0X9E1021D0,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SP",	0X9E1021DD,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SS",	0X9E1021E0,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_ST",	0X9E1021E1,	-1);
	add_enum_member(id,"CONFIRM_CONVERT_KIT_TO_CARBON",	0X9E274DAA,	-1);
	add_enum_member(id,"TRACK_DIRECTION_FORWARD",	0X9E4C4648,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SAS_TITLE",	0X9E4F95C2,	-1);
	add_enum_member(id,"OPT_AUDIO_SPEECH_VOL",	0X9E5FB82A,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_3_LARGE",	0X9E809A98,	-1);
	add_enum_member(id,"TYPE_2_SKY_BLUE",	0X9E9F1DAF,	-1);
	add_enum_member(id,"DEBUG_ASK_ENTER_SPRINT_SUBJECT",	0X9EC5F82F,	-1);
	add_enum_member(id,"QR_TRACK_4021_COMMENT",	0X9EDE424E,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_3_SMALL",	0X9F059306,	-1);
	add_enum_member(id,"PC_NAV_CONTINUE",	0X9F1B2C7A,	-1);
	add_enum_member(id,"NEON_WHITE_PULSE",	0X9F231697,	-1);
	add_enum_member(id,"SMS_FROM_HEADER",	0X9F29D70D,	-1);
	add_enum_member(id,"UI_CHANGE_SELECTION",	0X9F730547,	-1);
	add_enum_member(id,"LABEL_CLIENT_DISCONNECT",	0X9F7F6486,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_RACING_MINIMAP",	0X9FA5EC9E,	-1);
	add_enum_member(id,"UI_REPLAY_TITLE",	0X9FB0AC8A,	-1);
	add_enum_member(id,"OL_MSG_DISCONNECTED_MAX_TIMEOUT",	0X9FBA141D,	-1);
	add_enum_member(id,"MESSAGE_04_BODY",	0X9FD2C234,	-1);
	add_enum_member(id,"MESSAGE_04_FROM",	0X9FD501DA,	-1);
	add_enum_member(id,"HELP_OL_SHOP_SELECT",	0X9FE6DADA,	-1);
	add_enum_member(id,"OL_CROSS_GAME_INVITATION_MESSAGE",	0XA0345C44,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_GO_TO_GARAGE_SUBJECT",	0XA0414CFF,	-1);
	add_enum_member(id,"SMS_UNLOCK_14_SUBJECT",	0XA071BEB0,	-1);
	add_enum_member(id,"HUD_STRING_ERROR",	0XA074449F,	-1);
	add_enum_member(id,"PC_KEYS_HYDRAULIC_PRESSURIZE",	0XA081F0CC,	-1);
	add_enum_member(id,"RIMS_BRAND_LOWENHART",	0XA08A29B3,	-1);
	add_enum_member(id,"PAINT_SHOP_CONFIRM_PURCHASE_SETUP",	0XA0C16CAB,	-1);
	add_enum_member(id,"OL_MESS_CHEATING",	0XA0C5D893,	-1);
	add_enum_member(id,"Career_WorldMap",	0XA0C6AE56,	-1);
	add_enum_member(id,"HELP_PERFORMANCE_SHOP_PART_SELECT",	0XA0F26827,	-1);
	add_enum_member(id,"CHOOSE_VINYL_LAYER_TITLE",	0XA114130E,	-1);
	add_enum_member(id,"OPT_AUDIO_MODE_DTS",	0XA11F5B71,	-1);
	add_enum_member(id,"DVD_TITLE",	0XA14CAF1E,	-1);
	add_enum_member(id,"OL_FEEDBACK_MSG_SENT",	0XA19617BD,	-1);
	add_enum_member(id,"LOADING_ONLINE_UNRANKED",	0XA1B18D38,	-1);
	add_enum_member(id,"CONFIRM_UNMUTE",	0XA1DA642A,	-1);
	add_enum_member(id,"SMS_END_OF_GAME_MESSAGE_BODY",	0XA1E95F26,	-1);
	add_enum_member(id,"LABEL_LAPS",	0XA1F4476E,	-1);
	add_enum_member(id,"LABEL_LOSS",	0XA1F4835F,	-1);
	add_enum_member(id,"LABEL_NAME",	0XA1F55FBF,	-1);
	add_enum_member(id,"UI_CRIB_REWARD_OPTIONS_TITLE",	0XA1F64ECC,	-1);
	add_enum_member(id,"LABEL_RANK",	0XA1F7916A,	-1);
	add_enum_member(id,"LABEL_TIME",	0XA1F8CC0D,	-1);
	add_enum_member(id,"LABEL_TYPE",	0XA1F91080,	-1);
	add_enum_member(id,"LABEL_WINS",	0XA1FA715F,	-1);
	add_enum_member(id,"LABEL_YEAR",	0XA1FB776F,	-1);
	add_enum_member(id,"MESSAGE_05_BODY",	0XA227EAD5,	-1);
	add_enum_member(id,"MESSAGE_05_FROM",	0XA22A2A7B,	-1);
	add_enum_member(id,"CONFIRM_SETTINGS_CHANGED_STORE",	0XA2323032,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERFSHFT_BODY",	0XA2573673,	-1);
	add_enum_member(id,"OL_DO_YOU_WANT_TO_TRADE_CONFIRM",	0XA267C67F,	-1);
	add_enum_member(id,"LAN_CONNECTION_LOST",	0XA2717C2A,	-1);
	add_enum_member(id,"LABEL_GAME_STATUS",	0XA277357B,	-1);
	add_enum_member(id,"TYPE_3_SKY_BLUE",	0XA2A9AED0,	-1);
	add_enum_member(id,"OPT_AUDIO_ENGINE_VOL",	0XA2B1F888,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_1",	0XA2BBDF33,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_2",	0XA2BBDF34,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_3",	0XA2BBDF35,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_4",	0XA2BBDF36,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_5",	0XA2BBDF37,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_6",	0XA2BBDF38,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_7",	0XA2BBDF39,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_8",	0XA2BBDF3A,	-1);
	add_enum_member(id,"ENGAGE_SUV_RANDOM_9",	0XA2BBDF3B,	-1);
	add_enum_member(id,"ENGAGE_TIPS_STAB_DEMO_SUBJECT",	0XA2D77741,	-1);
	add_enum_member(id,"ONLINE_MACHINE_TOO_SLOW",	0XA2DA0CCD,	-1);
	add_enum_member(id,"SU_LARGE_DIAMETER_SWAY_BARS",	0XA2EF10A5,	-1);
	add_enum_member(id,"OL_CHALLENGED_BY",	0XA329D7BA,	-1);
	add_enum_member(id,"OL_MSG_UNBLOCKING_BUDDY",	0XA33AA702,	-1);
	add_enum_member(id,"HELP_CONTROLER_OPTIONS",	0XA33D508A,	-1);
	add_enum_member(id,"TEST_PAUSE_START_TUNING",	0XA34E13BD,	-1);
	add_enum_member(id,"CS_CAREER_STATISTICS",	0XA3532050,	-1);
	add_enum_member(id,"LAN_PC_NO_CONNECTION",	0XA392D977,	-1);
	add_enum_member(id,"LOADING_TITLE_SUV_EVENTS",	0XA3AA0ACF,	-1);
	add_enum_member(id,"SMS_STEERING_CONTROLS_BODY",	0XA3E97CD2,	-1);
	add_enum_member(id,"OL_MSG_SERVER_DOWN_OLX",	0XA3F55E1F,	-1);
	add_enum_member(id,"OL_FEEDBACK_BAD_NAME_DESC",	0XA403C822,	-1);
	add_enum_member(id,"OL_OUTRUN_LEAD_TIME",	0XA40518E9,	-1);
	add_enum_member(id,"LABEL_PLAYER_CHEATS",	0XA4052182,	-1);
	add_enum_member(id,"OL_OPT_MAX_PLAYERS",	0XA40967B0,	-1);
	add_enum_member(id,"UI_ICE_HOOD",	0XA41D9EB6,	-1);
	add_enum_member(id,"UI_ICE_NEON",	0XA420BE7C,	-1);
	add_enum_member(id,"UI_ICE_TINT",	0XA42419AB,	-1);
	add_enum_member(id,"OL_BUSY_MSG",	0XA424C082,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL2_DEMO_SUBJECT",	0XA432F70A,	-1);
	add_enum_member(id,"LOADING_TITLE_URL_RACES",	0XA4615FBD,	-1);
	add_enum_member(id,"STYLE_DRIFT",	0XA46AAEA8,	-1);
	add_enum_member(id,"OL_MSG_LOBBY_RECONNECT_PROBLEM",	0XA46CB187,	-1);
	add_enum_member(id,"SMS_UNLOCK_24_SUBJECT",	0XA47C4FD1,	-1);
	add_enum_member(id,"MESSAGE_06_BODY",	0XA47D1376,	-1);
	add_enum_member(id,"MESSAGE_06_FROM",	0XA47F531C,	-1);
	add_enum_member(id,"CSTATISTICS_TOTAL_REPUTATION",	0XA49003BA,	-1);
	add_enum_member(id,"OL_BAD_CONNECTION_MSG",	0XA492AE15,	-1);
	add_enum_member(id,"OL_USER_UNBLOCKED",	0XA4B092EE,	-1);
	add_enum_member(id,"DISCOUNT_NOT_APPLICABLE",	0XA4C02484,	-1);
	add_enum_member(id,"OL_IS_PLAYING",	0XA4CA09C8,	-1);
	add_enum_member(id,"STYLE_JTURN",	0XA4D88F02,	-1);
	add_enum_member(id,"ASK_ENTER_ICE_SHOP_HEADER",	0XA4E5EE6C,	-1);
	add_enum_member(id,"HELP_OL_MESSENGER_FEEDBACK",	0XA4F8464E,	-1);
	add_enum_member(id,"EVENT_REWARD_UG_PERF",	0XA512F58C,	-1);
	add_enum_member(id,"WORLD_CHALLENGE_SUBJECT_UNIQUE_PERF",	0XA517FD7A,	-1);
	add_enum_member(id,"PERFORMANCE_PARTS_STATS_TITLE",	0XA51CD509,	-1);
	add_enum_member(id,"OL_WARNING_JOIN_GAME_RANKED_PC",	0XA53035DD,	-1);
	add_enum_member(id,"UI_MAIN_CUSTOMIZE",	0XA53039A3,	-1);
	add_enum_member(id,"PRR_OVERTIME",	0XA540D71D,	-1);
	add_enum_member(id,"STYLE_HYDRAULIC_BOUNCE",	0XA57BEB8F,	-1);
	add_enum_member(id,"NEON_AQUA",	0XA5A57EB6,	-1);
	add_enum_member(id,"NEON_BLUE",	0XA5A5F5D6,	-1);
	add_enum_member(id,"NEON_GOLD",	0XA5A8BF54,	-1);
	add_enum_member(id,"NEON_LIME",	0XA5AB63D5,	-1);
	add_enum_member(id,"NEON_NONE",	0XA5AC963E,	-1);
	add_enum_member(id,"LANG_DANISH",	0XA5AD5A37,	-1);
	add_enum_member(id,"NEON_PINK",	0XA5AD9580,	-1);
	add_enum_member(id,"PC_DEMO_VISUAL_CUSTOMIZATION",	0XA5AEA201,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_GOODSESSION",	0XA5B53F2B,	-1);
	add_enum_member(id,"PRW_GENERIC_REWARD_STRING",	0XA5B5FA0E,	-1);
	add_enum_member(id,"EN_REPLACE_HEADERS",	0XA5B64B48,	-1);
	add_enum_member(id,"OL_REQUIRED_INFO_ACCOUNT",	0XA5CF4291,	-1);
	add_enum_member(id,"ASK_ENTER_PAINT_SHOP_HEADER",	0XA5F04BD7,	-1);
	add_enum_member(id,"OL_EXIT_ROOM_CLIENT",	0XA632EEAD,	-1);
	add_enum_member(id,"CSTATISTICS_AVERAGE_REPUTATION",	0XA63A4AF1,	-1);
	add_enum_member(id,"CONFIRM_REVERT_TRUNK_FROM_CARBON",	0XA645A29E,	-1);
	add_enum_member(id,"REWARD_SPONSORSHIP_TITLE",	0XA654CB8C,	-1);
	add_enum_member(id,"LOADING_TITLE_GAME_TIPS",	0XA67DEFD6,	-1);
	add_enum_member(id,"MONTH_AUGUST",	0XA6A78A3D,	-1);
	add_enum_member(id,"PAINT_SHOP_CONFIRM_PURCHASE_CHANGED_SETUP",	0XA6C0D334,	-1);
	add_enum_member(id,"LAN_ENTER_SERVER_NAME",	0XA6CC56CD,	-1);
	add_enum_member(id,"MESSAGE_07_BODY",	0XA6D23C17,	-1);
	add_enum_member(id,"MESSAGE_07_FROM",	0XA6D47BBD,	-1);
	add_enum_member(id,"HELP_OL_CAR_SELECT2",	0XA73A17A8,	-1);
	add_enum_member(id,"ENTER_FRONTEND_DVD_BODY",	0XA747EA86,	-1);
	add_enum_member(id,"PERF_CATEGORY_ECU",	0XA7884765,	-1);
	add_enum_member(id,"PERF_CATEGORY_NOS",	0XA7886F38,	-1);
	add_enum_member(id,"SPONSOR_INFO_KENWOOD",	0XA79139B4,	-1);
	add_enum_member(id,"OPT_CAR_SHADOW",	0XA7A683AC,	-1);
	add_enum_member(id,"HUD_LB_DISCONNECTED",	0XA7DB717F,	-1);
	add_enum_member(id,"HELP_OL_CAR_SELECT",	0XA7FA00B6,	-1);
	add_enum_member(id,"TYPE_2_LEFT_WHEEL_NOZZLE",	0XA8162C11,	-1);
	add_enum_member(id,"BEST_LAP_TIME",	0XA8247197,	-1);
	add_enum_member(id,"VINYL_CATEGORY_ANIMAL",	0XA829D5BF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SPECIAL2_SUBJECT",	0XA8432F46,	-1);
	add_enum_member(id,"SC13_LINE_10",	0XA8477E40,	-1);
	add_enum_member(id,"ENGAGE_TIPS_REALTUNE_SUBJECT",	0XA85772B3,	-1);
	add_enum_member(id,"SMS_UNLOCK_34_SUBJECT",	0XA886E0F2,	-1);
	add_enum_member(id,"TRACK_DIRECTION",	0XA88FFEB4,	-1);
	add_enum_member(id,"OL_RANKINGS_RANK",	0XA89D8F41,	-1);
	add_enum_member(id,"OL_MSG_LAN_UNKNOWN_ERROR_STARTING_SERVER",	0XA8CD6FD3,	-1);
	add_enum_member(id,"ROOF_STYLE04_OFFSET",	0XA8D823CF,	-1);
	add_enum_member(id,"OL_ERROR_AGE_REQUIRED",	0XA8DA51CF,	-1);
	add_enum_member(id,"LVL_2_HYDRAULICS",	0XA8DDDA95,	-1);
	add_enum_member(id,"MESSAGE_08_BODY",	0XA92764B8,	-1);
	add_enum_member(id,"MESSAGE_08_FROM",	0XA929A45E,	-1);
	add_enum_member(id,"CUST_CATEGORY_BODY",	0XA92B4AE8,	-1);
	add_enum_member(id,"HELP_CAR_SPECIALTIES_CHANGE_COMPONENT",	0XA93E10E9,	-1);
	add_enum_member(id,"OL_MSG_SENDING_BUDDY_REQUEST",	0XA948A646,	-1);
	add_enum_member(id,"PC_CHAT_HERE",	0XA94D67F4,	-1);
	add_enum_member(id,"MU_OPTIONS_SAVE_FAILED",	0XA959B6BE,	-1);
	add_enum_member(id,"PC_DEMO_STREET_RACING",	0XA962AEDF,	-1);
	add_enum_member(id,"ENGAGE_TIPS_CAR_BODY",	0XA96729E7,	-1);
	add_enum_member(id,"MU_PAUSE_LEADERBOARD",	0XA9877C52,	-1);
	add_enum_member(id,"BODY_01",	0XA98A490D,	-1);
	add_enum_member(id,"BODY_02",	0XA98A490E,	-1);
	add_enum_member(id,"BODY_03",	0XA98A490F,	-1);
	add_enum_member(id,"BODY_04",	0XA98A4910,	-1);
	add_enum_member(id,"BODY_05",	0XA98A4911,	-1);
	add_enum_member(id,"BODY_06",	0XA98A4912,	-1);
	add_enum_member(id,"BODY_07",	0XA98A4913,	-1);
	add_enum_member(id,"BODY_08",	0XA98A4914,	-1);
	add_enum_member(id,"BODY_09",	0XA98A4915,	-1);
	add_enum_member(id,"BODY_10",	0XA98A492D,	-1);
	add_enum_member(id,"BODY_11",	0XA98A492E,	-1);
	add_enum_member(id,"BODY_12",	0XA98A492F,	-1);
	add_enum_member(id,"BODY_13",	0XA98A4930,	-1);
	add_enum_member(id,"BODY_14",	0XA98A4931,	-1);
	add_enum_member(id,"BODY_15",	0XA98A4932,	-1);
	add_enum_member(id,"OL_EJECT_DISC",	0XA997B866,	-1);
	add_enum_member(id,"OPT_DISPLAY_RESOLUTION",	0XA9A76BBA,	-1);
	add_enum_member(id,"TYPE_3_RED_GREEN",	0XA9AE9FBD,	-1);
	add_enum_member(id,"HELP_OL_POST_RACE_RESULTS",	0XA9BA6972,	-1);
	add_enum_member(id,"OPT_DEPTH_OF_FIELD",	0XA9C27DFD,	-1);
	add_enum_member(id,"JUKEBOX_RANDOM",	0XA9C9C8F7,	-1);
	add_enum_member(id,"OPT_VIDEO_SCREEN_POS_HORIZONTAL",	0XA9CFE581,	-1);
	add_enum_member(id,"BRIGHT_PURPLE",	0XA9D56AB6,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_MAIN",	0XA9E93FF5,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_NEED_TO_UPGRADE_TRUNK_AUDIO",	0XA9E966D7,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF4_SUBJECT",	0XAA3157B4,	-1);
	add_enum_member(id,"OL_RACE_BREAKER",	0XAA35EF4F,	-1);
	add_enum_member(id,"LOAD_CARS",	0XAA3CD907,	-1);
	add_enum_member(id,"LOAD_GAME",	0XAA3F09D8,	-1);
	add_enum_member(id,"PRS_400M_SPEED",	0XAA461724,	-1);
	add_enum_member(id,"CONFIRM_CAREER_RESTART",	0XAA50AA02,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_GTFIN_TITLE",	0XAA750253,	-1);
	add_enum_member(id,"PRR_FINISH_TIME",	0XAA78EB41,	-1);
	add_enum_member(id,"SCISSOR",	0XAA816BA5,	-1);
	add_enum_member(id,"PERF_CATEGORY_BRAKE",	0XAA8959AD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_LOT2_SUBJECT",	0XAA8C8E94,	-1);
	add_enum_member(id,"SMS_HEADER",	0XAAABBD7A,	-1);
	add_enum_member(id,"SPONSOR_INFO_BRIDE",	0XAAAE97A3,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_PLASMAGLOW",	0XAAB2AE0E,	-1);
	add_enum_member(id,"HELP_GRAPHICS_SHOP_DECAL_SELECT_CATEGORY",	0XAADE3025,	-1);
	add_enum_member(id,"SPONSOR_INFO_ENKEI",	0XAAE2B849,	-1);
	add_enum_member(id,"NO_DIRECT_PORT_NITROUS_OXIDE",	0XAAFDFF65,	-1);
	add_enum_member(id,"LOADING",	0XAB0E817D,	-1);
	add_enum_member(id,"BUTTON_SHOP_OR_ENGAGE",	0XAB1032FA,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_ERROR_CREATING_GAME",	0XAB13CAE4,	-1);
	add_enum_member(id,"SAVELOAD_INFORM_NO_PROFILES_FOUND",	0XAB1F0E92,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_PIGEON_PARK",	0XAB3ABABA,	-1);
	add_enum_member(id,"BRIGHT_BLUE",	0XAB432026,	-1);
	add_enum_member(id,"PRS_TIME_BEHIND",	0XAB44ED8B,	-1);
	add_enum_member(id,"SPONSOR_INFO_KONIG",	0XAB4FE4F5,	-1);
	add_enum_member(id,"CAR_NAME_DEFAULT",	0XAB635959,	-1);
	add_enum_member(id,"OL_REMOVE_FRIEND",	0XAB6C5A1E,	-1);
	add_enum_member(id,"HELP_OL__CARSPECIALTIES_SHOP_AUDIOCOMPONENTS_SELECT",	0XAB7B635B,	-1);
	add_enum_member(id,"MESSAGE_09_BODY",	0XAB7C8D59,	-1);
	add_enum_member(id,"MESSAGE_09_FROM",	0XAB7ECCFF,	-1);
	add_enum_member(id,"LANG_FRENCH",	0XAB866FD6,	-1);
	add_enum_member(id,"UI_CRIB_REGION_1_COMMENT",	0XAB868201,	-1);
	add_enum_member(id,"SC14_LINE_1",	0XAB89D0F1,	-1);
	add_enum_member(id,"SC14_LINE_2",	0XAB89D0F2,	-1);
	add_enum_member(id,"SC14_LINE_3",	0XAB89D0F3,	-1);
	add_enum_member(id,"SC14_LINE_4",	0XAB89D0F4,	-1);
	add_enum_member(id,"SC14_LINE_5",	0XAB89D0F5,	-1);
	add_enum_member(id,"SC14_LINE_6",	0XAB89D0F6,	-1);
	add_enum_member(id,"HUD_MAGAZINE_REWARD",	0XABA1E56F,	-1);
	add_enum_member(id,"TYPE_3_GREEN",	0XABA38CC3,	-1);
	add_enum_member(id,"STYLE_FIFTH_SPOT",	0XABB12765,	-1);
	add_enum_member(id,"UI_CAREER_CHANGE_PARTS",	0XABB24BBC,	-1);
	add_enum_member(id,"CSTATISTICS_GAME_COMPLETED",	0XABBA6482,	-1);
	add_enum_member(id,"PERF_CATEGORY_TIRES",	0XABCA6AEF,	-1);
	add_enum_member(id,"PERF_CATEGORY_TURBO",	0XABD0FF14,	-1);
	add_enum_member(id,"HUD_FINISH_FOURTH",	0XAC122037,	-1);
	add_enum_member(id,"OPT_PLAYER_GAUGES",	0XAC148579,	-1);
	add_enum_member(id,"SMS_DVD_COVER_7_SUBJECT",	0XAC23EC52,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_BRIDE",	0XAC399F5D,	-1);
	add_enum_member(id,"UI_MILES_ABBR",	0XAC3A4F4C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BRAKE_BIAS",	0XAC45FB67,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_0_MEDIUM",	0XAC64572B,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_ENKEI",	0XAC6DC003,	-1);
	add_enum_member(id,"WELCOME_TEXT",	0XAC7679CF,	-1);
	add_enum_member(id,"DECAL_ZONE_REARWINDOW",	0XAC7937B4,	-1);
	add_enum_member(id,"DYNO_CHART",	0XAC7BD52A,	-1);
	add_enum_member(id,"SMS_UNLOCK_44_SUBJECT",	0XAC917213,	-1);
	add_enum_member(id,"DYNO_FTLBS",	0XACB8DFF3,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_CANNOT_QUIT",	0XACC1F7DA,	-1);
	add_enum_member(id,"SAVE_PROFILE",	0XACCEAB1E,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_KONIG",	0XACDAECAF,	-1);
	add_enum_member(id,"KIT00_FRONT_BUMPER",	0XACEACA19,	-1);
	add_enum_member(id,"LANG_GERMAN",	0XACF7765A,	-1);
	add_enum_member(id,"ENTER_BIRTHDAY",	0XAD18D273,	-1);
	add_enum_member(id,"STYLE_HYDRAULIC_EXTEND",	0XAD1D90BB,	-1);
	add_enum_member(id,"DEMO_GAME_TIP_BODY_SHOP",	0XAD2FD00F,	-1);
	add_enum_member(id,"STRING_ROOF_NO_PAINT",	0XAD460262,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAG2_BODY",	0XAD75E258,	-1);
	add_enum_member(id,"OL_GAME_ROOM_REGISTER_COMPLAINT",	0XAD7F0CF9,	-1);
	add_enum_member(id,"DYNO_RESET",	0XAD89EA7B,	-1);
	add_enum_member(id,"HELP_CHANGE_HUD_COLOR",	0XADA7304B,	-1);
	add_enum_member(id,"OL_DNAS_BLURB",	0XADBBF215,	-1);
	add_enum_member(id,"OL_USE_EXISTING_FORGOT_PASSWORD",	0XADBC52F2,	-1);
	add_enum_member(id,"PRS_LAPS_LED",	0XADBFD917,	-1);
	add_enum_member(id,"OL_MESS_DECLINED_INIVITE_IN_GAME",	0XADE22A0E,	-1);
	add_enum_member(id,"QR_CAR_SHOW",	0XADE367B7,	-1);
	add_enum_member(id,"ENGAGE_TIPS_KO_SUBJECT",	0XAE02B0AD,	-1);
	add_enum_member(id,"PRS_BEST_LAP",	0XAE280D3D,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS3_DEMO_BODY",	0XAE5FC67D,	-1);
	add_enum_member(id,"TYPE_2_RIGHT_WHEEL_NOZZLE",	0XAE6A9A04,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TRLBRK_SUBJECT",	0XAE735E44,	-1);
	add_enum_member(id,"EN_MUFFLER",	0XAE79FC42,	-1);
	add_enum_member(id,"OL_PLAYER_STATUS_LOADING",	0XAEB6FD26,	-1);
	add_enum_member(id,"TYPE_2_UPPER_LEFT_LOWER_RIGHT_NOZZLES",	0XAEC3F2E0,	-1);
	add_enum_member(id,"SMS_MINIMAP_INSTRUCTION_BODY",	0XAEF20F6A,	-1);
	add_enum_member(id,"OL_DNAS_TITLE",	0XAF000100,	-1);
	add_enum_member(id,"SMS_STORED_MESSAGES",	0XAF089FF9,	-1);
	add_enum_member(id,"NEON_LIME_PULSE",	0XAF0FD61D,	-1);
	add_enum_member(id,"ASK_ENTER_PERF_SHOP_HEADER",	0XAF258EE8,	-1);
	add_enum_member(id,"OL_MSG_YOUR_VOICE_INVITE_HAS_BEEN_TIMED_OUT",	0XAF3DCEEE,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BB_BODY",	0XAF67346B,	-1);
	add_enum_member(id,"PRS_BEST_LAP_TIME",	0XAF6943CB,	-1);
	add_enum_member(id,"HELP_UNIQUES_BROWSER",	0XAF93FE34,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_AIRPORT",	0XAFA49DEC,	-1);
	add_enum_member(id,"LABEL_DISC_PERCENT",	0XAFEDED91,	-1);
	add_enum_member(id,"HUD_GPS_NO_LINK",	0XAFF55C52,	-1);
	add_enum_member(id,"OL_DISCONNECT_SONY_EUROPE",	0XAFFF7C7A,	-1);
	add_enum_member(id,"CAR_NAME_240SX",	0XB054C635,	-1);
	add_enum_member(id,"MONTH_FEBRUARY",	0XB0792804,	-1);
	add_enum_member(id,"MAILBOX_NAME_MISC",	0XB0819356,	-1);
	add_enum_member(id,"SMS_UNLOCK_54_SUBJECT",	0XB09C0334,	-1);
	add_enum_member(id,"TYPE_1_BOTH_RIGHT_NOZZLES",	0XB0BDBFEE,	-1);
	add_enum_member(id,"SMS_MAG_GENERIC_BODY_1",	0XB0BF75FF,	-1);
	add_enum_member(id,"SMS_MAG_GENERIC_BODY_2",	0XB0BF7600,	-1);
	add_enum_member(id,"HELP_CRIB_CHANGEPARTS_PERFORMANCE",	0XB0DC76E7,	-1);
	add_enum_member(id,"EA_MESSENGER_TITLE",	0XB0FCF98E,	-1);
	add_enum_member(id,"RSTATISTICS_URL_EVENTS",	0XB1029122,	-1);
	add_enum_member(id,"UI_CRIB_TEST_TRACK",	0XB10AE56F,	-1);
	add_enum_member(id,"PC_OL_LOBBY_CREATE_GAME",	0XB12454EF,	-1);
	add_enum_member(id,"OL_MSG_LAN_STARTING_SERVER",	0XB13D6A9B,	-1);
	add_enum_member(id,"OL_APPLY_FILTER",	0XB18A5DE4,	-1);
	add_enum_member(id,"UI_CRIB_CAR_TRADE",	0XB18C1000,	-1);
	add_enum_member(id,"CAR_NAME_CIVIC",	0XB1948B02,	-1);
	add_enum_member(id,"CAR_NAME_CORSA",	0XB197C58C,	-1);
	add_enum_member(id,"CAR_NAME_COUPE",	0XB197D1F0,	-1);
	add_enum_member(id,"SAVELOAD_TITLE_GC",	0XB19F8A18,	-1);
	add_enum_member(id,"SAVELOAD_TITLE_PC",	0XB19F8B41,	-1);
	add_enum_member(id,"CAR_NAME_FOCUS",	0XB1CDCF94,	-1);
	add_enum_member(id,"MU_PAUSE_VOIP_MUTE",	0XB1D77B95,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_COMPLETED",	0XB1EE4CA9,	-1);
	add_enum_member(id,"OLX_FRIENDS",	0XB204477C,	-1);
	add_enum_member(id,"CAR_NAME_IS300",	0XB20601A3,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE_KITS",	0XB229FA7E,	-1);
	add_enum_member(id,"VINYL_CATEGORY_EXOTIC",	0XB236D659,	-1);
	add_enum_member(id,"STYLE_BESTLAP",	0XB245F7FA,	-1);
	add_enum_member(id,"CAR_NAME_MIATA",	0XB2492820,	-1);
	add_enum_member(id,"LOADING_TITLE_SPONSORSHIPS",	0XB263C898,	-1);
	add_enum_member(id,"GAME_TIP_BODY_SHOP",	0XB285FD2B,	-1);
	add_enum_member(id,"CAR_NAME_S2000",	0XB2A8D169,	-1);
	add_enum_member(id,"UC_CAR_SPECIALTY_BODY",	0XB2B15FC6,	-1);
	add_enum_member(id,"CAR_NAME_SUPRA",	0XB2BC8F3F,	-1);
	add_enum_member(id,"STYLE_LEADLAP",	0XB2BDD862,	-1);
	add_enum_member(id,"OLX_DASHBOARD",	0XB2CE8B59,	-1);
	add_enum_member(id,"BUTTON_ANALOG_BRAKE_REVERSE",	0XB2D0DA8B,	-1);
	add_enum_member(id,"LOADING_GARAGE",	0XB2F970E3,	-1);
	add_enum_member(id,"NEON_YELLOW_PULSE",	0XB2FAD532,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_FOTF_BODY",	0XB303E2B6,	-1);
	add_enum_member(id,"TUNING_FRONT",	0XB32908DC,	-1);
	add_enum_member(id,"ENTER_ACCOUNT_NAME",	0XB32F2B49,	-1);
	add_enum_member(id,"TR_6_SPEED_TRANSMISSION",	0XB3421B53,	-1);
	add_enum_member(id,"DECAL_LAYOUT1",	0XB348F286,	-1);
	add_enum_member(id,"DECAL_LAYOUT2",	0XB348F287,	-1);
	add_enum_member(id,"MU_PAUSE_OPTIONS",	0XB34993C9,	-1);
	add_enum_member(id,"PASSWORD",	0XB34AB032,	-1);
	add_enum_member(id,"OL_LABEL_STATUS",	0XB352039C,	-1);
	add_enum_member(id,"OPT_CHANGE_PLAYER",	0XB35B3AC3,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_CANNOT_USE",	0XB368B7A5,	-1);
	add_enum_member(id,"SMS_UNLOCK_02_SUBJECT",	0XB36E4B8D,	-1);
	add_enum_member(id,"HELP_DECAL_SUBMENU",	0XB36E7C1E,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_STREETX",	0XB372757A,	-1);
	add_enum_member(id,"TYPE_2_RED_BLUE",	0XB3838713,	-1);
	add_enum_member(id,"TYPE_2_RED_GOLD",	0XB3865091,	-1);
	add_enum_member(id,"IG_PREV",	0XB39C1F0B,	-1);
	add_enum_member(id,"VINYL_CATEGORY_FLAMES",	0XB3AB0D65,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_VINYL_CARBON_HOOD",	0XB3BBB11D,	-1);
	add_enum_member(id,"PC_KEYS_E_BRAKE",	0XB3D1EA35,	-1);
	add_enum_member(id,"FLAG_SCOTLAND",	0XB3DA9890,	-1);
	add_enum_member(id,"TUNING_POWER",	0XB3DC79A0,	-1);
	add_enum_member(id,"STRING_QUIT_PERFORMANCE",	0XB3FB59A9,	-1);
	add_enum_member(id,"CAR_SELECT_CAREER",	0XB4045365,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_RETRIEVING_CAR_INFO",	0XB419C854,	-1);
	add_enum_member(id,"QR_CAR_SELECT",	0XB423FF36,	-1);
	add_enum_member(id,"TYPE_3_SKY_BLUE_VIVID_RED",	0XB44AF78B,	-1);
	add_enum_member(id,"MINIMAP_ICE",	0XB46342BA,	-1);
	add_enum_member(id,"MINIMAP_SUV",	0XB4636FA7,	-1);
	add_enum_member(id,"MINIMAP_URL",	0XB46377BC,	-1);
	add_enum_member(id,"TYPE_2_SKY_BLUE_GREEN",	0XB49D6A3F,	-1);
	add_enum_member(id,"SMS_UNLOCK_64_SUBJECT",	0XB4A69455,	-1);
	add_enum_member(id,"OPT_WHEEL_SINGLE_TURN",	0XB4EBFD6F,	-1);
	add_enum_member(id,"SELECT_CAR",	0XB5074AB4,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_EDELBROCK",	0XB5180D22,	-1);
	add_enum_member(id,"ASK_ENTER_SPON_DRIFT_SUBJECT",	0XB5205101,	-1);
	add_enum_member(id,"LOADING_TITLE_WINNING_RACES",	0XB5242444,	-1);
	add_enum_member(id,"RIM_PAINT",	0XB5423D02,	-1);
	add_enum_member(id,"OPT_DISPLAY_LOD",	0XB55E7665,	-1);
	add_enum_member(id,"OPT_DISPLAY_LOW",	0XB55E7678,	-1);
	add_enum_member(id,"DRAG_RUNNERUP",	0XB561DD7B,	-1);
	add_enum_member(id,"GPS_SHOPWCASE_NOT_ALLOWED",	0XB568418C,	-1);
	add_enum_member(id,"HELP_OPTIONS_GAMEPLAY",	0XB575A5E2,	-1);
	add_enum_member(id,"PERFORMANCE_PARTS_PACKAGE_CONTENTS",	0XB58FC812,	-1);
	add_enum_member(id,"HELP_OPTIONS_TRAILERS",	0XB5B3AB78,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_GTFIN",	0XB5CBEFB2,	-1);
	add_enum_member(id,"UI_KILOMETERS_ABBR",	0XB5D640B1,	-1);
	add_enum_member(id,"OL_MSG_JOIN_GAME_INCORRECT_PASSWORD",	0XB5EAA702,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF2_DEMO_BODY",	0XB6050914,	-1);
	add_enum_member(id,"OL_RACE_MODE_SELECT",	0XB6068C57,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_CANNOT_START_GAME_CLIENT",	0XB62E143C,	-1);
	add_enum_member(id,"TRAFFIC_HEAVY",	0XB672F15A,	-1);
	add_enum_member(id,"PRR_TIME_TITLE",	0XB67DA102,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SCNORWAY_BODY",	0XB6941C9D,	-1);
	add_enum_member(id,"OL_MSG_ERROR_RETRIEVING_PERSONAL_RANKINGS",	0XB6AAE6A6,	-1);
	add_enum_member(id,"CUSTOMIZE_TITLE_PAINT_SHOP",	0XB6AAECF7,	-1);
	add_enum_member(id,"TUNING_DRAG_STATS_MSG_ZERO_TO_SIXTY",	0XB6BB5E46,	-1);
	add_enum_member(id,"TRAFFIC_LIGHT",	0XB6BD9C95,	-1);
	add_enum_member(id,"VINYL_CATEGORY_BODY",	0XB6CFF09B,	-1);
	add_enum_member(id,"VINYL_CATEGORY_FLAG",	0XB6D214E7,	-1);
	add_enum_member(id,"TUNING_TYPE_FRONT_SWAY_BAR",	0XB6D444B4,	-1);
	add_enum_member(id,"OL_DECLINE_INVITE",	0XB6D8E83B,	-1);
	add_enum_member(id,"OL_PASSWORD_TITLE",	0XB6D9262D,	-1);
	add_enum_member(id,"VINYL_CATEGORY_TEAR",	0XB6D9A479,	-1);
	add_enum_member(id,"VINYL_CATEGORY_WILD",	0XB6DB5BFD,	-1);
	add_enum_member(id,"Marketing_Header_1",	0XB6DE8C19,	-1);
	add_enum_member(id,"Marketing_Header_2",	0XB6DE8C1A,	-1);
	add_enum_member(id,"Marketing_Header_3",	0XB6DE8C1B,	-1);
	add_enum_member(id,"Marketing_Header_4",	0XB6DE8C1C,	-1);
	add_enum_member(id,"Marketing_Header_5",	0XB6DE8C1D,	-1);
	add_enum_member(id,"OL_NET_CONFIG_NEW_EDIT",	0XB6F38223,	-1);
	add_enum_member(id,"LANG_KOREAN",	0XB700EBE0,	-1);
	add_enum_member(id,"OL_MSG_DELETE_PERSONA",	0XB709ACA9,	-1);
	add_enum_member(id,"SC01_02_HOTSHOT",	0XB70F221F,	-1);
	add_enum_member(id,"BUTTON_EBRAKE",	0XB70FF4A4,	-1);
	add_enum_member(id,"OPT_BURNOUT_3_DEMO",	0XB7326E56,	-1);
	add_enum_member(id,"OL_MIN_NUM_PLAYERS",	0XB755F08B,	-1);
	add_enum_member(id,"PERFORMANCE_PACKAGE_1",	0XB75BA92C,	-1);
	add_enum_member(id,"PERFORMANCE_PACKAGE_2",	0XB75BA92D,	-1);
	add_enum_member(id,"PERFORMANCE_PACKAGE_3",	0XB75BA92E,	-1);
	add_enum_member(id,"MONTH_APRIL",	0XB776E01C,	-1);
	add_enum_member(id,"LOADING_CAR_SPECIALTIES",	0XB7787C07,	-1);
	add_enum_member(id,"SMS_UNLOCK_12_SUBJECT",	0XB778DCAE,	-1);
	add_enum_member(id,"SAVELOAD_TOO_MANY_PROFILES",	0XB786AF76,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_ST_TITLE",	0XB787DBC2,	-1);
	add_enum_member(id,"TYPE_3_RED_BLUE",	0XB78E1834,	-1);
	add_enum_member(id,"TYPE_3_RED_GOLD",	0XB790E1B2,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_0_LARGE",	0XB791E455,	-1);
	add_enum_member(id,"HUD_LB_TOTALLED",	0XB7B75185,	-1);
	add_enum_member(id,"CONFIRM_PURCHASE_CONVERT_KIT_TO_CARBON",	0XB7C84DA4,	-1);
	add_enum_member(id,"PC_NAV_RESET_KEYS",	0XB7D0D273,	-1);
	add_enum_member(id,"PC_KEYS_SHIFT_DOWN",	0XB7D33921,	-1);
	add_enum_member(id,"MESS_SEARCH",	0XB7F74A4C,	-1);
	add_enum_member(id,"LOADING_PERFORMANCE_SHOP",	0XB80E6A27,	-1);
	add_enum_member(id,"AUDIO_COMP_AMP_0_SMALL",	0XB816DCC3,	-1);
	add_enum_member(id,"OL_GAME_BREAKER",	0XB82A976E,	-1);
	add_enum_member(id,"STRING_TOO_SLOW",	0XB8387A0B,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_1_BODY",	0XB847959E,	-1);
	add_enum_member(id,"MONTH_MARCH",	0XB847CBAF,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PACKAGE_ALREADY_INSTALLED",	0XB84A37FA,	-1);
	add_enum_member(id,"CHALLENGE_DATA_3_UNDER",	0XB881F9EA,	-1);
	add_enum_member(id,"ENGAGE_TIPS_DRIFT_BODY",	0XB884104A,	-1);
	add_enum_member(id,"KIT00_SPOILER",	0XB8A457E4,	-1);
	add_enum_member(id,"PRS_ZERO_HUNDRED",	0XB8CF16FC,	-1);
	add_enum_member(id,"OL_SEND_GROUP_MESSAGE",	0XB8ED90F3,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_HOTELS",	0XB8FCE39A,	-1);
	add_enum_member(id,"ERROR_CONTROLLER_UNPLUGGED_TITLE_NGC",	0XB8FE370E,	-1);
	add_enum_member(id,"SMS_UNLOCK_40_BODY",	0XB90C04CD,	-1);
	add_enum_member(id,"STYLE_OUTRAGEOUS_DRIFT",	0XB9278DD5,	-1);
	add_enum_member(id,"PERFORMANCE_SHOP_TITLE",	0XB938CB4B,	-1);
	add_enum_member(id,"UI_COMMON_EXPLORE",	0XB94A4D03,	-1);
	add_enum_member(id,"MU_PAUSE_POSITION",	0XB97124D2,	-1);
	add_enum_member(id,"FE_REORDER_LAYERS",	0XB9AC83EB,	-1);
	add_enum_member(id,"OL_MSG_NET_CONFIG_PROBLEM",	0XB9BCDE4B,	-1);
	add_enum_member(id,"OL_END_VOICE_CHAT",	0XB9C852E4,	-1);
	add_enum_member(id,"CC_MEGALOW_BODY",	0XB9D874DD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TIRE_GRIP",	0XBA010BE9,	-1);
	add_enum_member(id,"ICE_TEST_NOS_PURGE",	0XBA0E1020,	-1);
	add_enum_member(id,"PAINT_EXHAUST",	0XBA1CC49C,	-1);
	add_enum_member(id,"OL_BLOCK_PLAYER_MESSG",	0XBA321D6E,	-1);
	add_enum_member(id,"MINIMAP_SPRINT",	0XBA613729,	-1);
	add_enum_member(id,"OPT_CONTROLLER_CONFIG",	0XBA7306AA,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_2_BODY",	0XBA9CBE3F,	-1);
	add_enum_member(id,"OL_FEEDBACK_SCREAMING_DESC_PC",	0XBAC0F186,	-1);
	add_enum_member(id,"BR_CROSS_DRILLED_ROTORS",	0XBAD47443,	-1);
	add_enum_member(id,"VISUAL_PART_SPOILER",	0XBB034EA6,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_COAL_HARBOUR_EAST",	0XBB0877C8,	-1);
	add_enum_member(id,"MAGAZINE_SELECT_VIEW_DVD",	0XBB095CA1,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_COAL_HARBOUR_WEST",	0XBB12679E,	-1);
	add_enum_member(id,"REQUIRED",	0XBB298A80,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_3_LARGE",	0XBB3D6D0D,	-1);
	add_enum_member(id,"SMS_UNLOCK_41_BODY",	0XBB612D6E,	-1);
	add_enum_member(id,"OL_INFORMATION_SHARING",	0XBB6F0A6A,	-1);
	add_enum_member(id,"SMS_UNLOCK_22_SUBJECT",	0XBB836DCF,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_3_SMALL",	0XBBC2657B,	-1);
	add_enum_member(id,"PRR_AVERAGE_SPEED",	0XBBF1787D,	-1);
	add_enum_member(id,"OL_GAME_ROOM_CANCEL_READY",	0XBBF1F488,	-1);
	add_enum_member(id,"OPT_CAREER_DIFFICULTY",	0XBC0E6C55,	-1);
	add_enum_member(id,"OL_QUIT_GAME_RANKED_CONFIRMATION",	0XBC25C6B1,	-1);
	add_enum_member(id,"OL_MSG_ERROR_GETTING_NET_CONFIG",	0XBC2737B5,	-1);
	add_enum_member(id,"OL_FEEDBACK_SUBMITTED",	0XBC3AB08E,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_FORT_UNION",	0XBC4C1F6E,	-1);
	add_enum_member(id,"ORDINAL_FIFTH",	0XBC4CAE38,	-1);
	add_enum_member(id,"ORDINAL_FIRST",	0XBC4CE12F,	-1);
	add_enum_member(id,"EA_TRAX_Header",	0XBC5662AB,	-1);
	add_enum_member(id,"OL_RANKINGS_TITLE",	0XBC782557,	-1);
	add_enum_member(id,"CIRCUIT_RUNNERUP",	0XBC8BF7F0,	-1);
	add_enum_member(id,"ROOF_STYLE03_OFFSET",	0XBC964EEE,	-1);
	add_enum_member(id,"SU_COIL_OVER_SUSPENSION_SYSTEM",	0XBCACB9A2,	-1);
	add_enum_member(id,"SAVELOAD_PROFILE_MANAGER",	0XBCB18F38,	-1);
	add_enum_member(id,"ORDINAL_NINTH",	0XBCDD9448,	-1);
	add_enum_member(id,"PRS_QUARTER_MILE_SPEED2",	0XBCF1255F,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_3_BODY",	0XBCF1E6E0,	-1);
	add_enum_member(id,"CAR_NAME_3000GT",	0XBCF9BCB2,	-1);
	add_enum_member(id,"OL_NET_SELECT_ADAPTER",	0XBD0ED1FF,	-1);
	add_enum_member(id,"ORDINAL_SIXTH",	0XBD383957,	-1);
	add_enum_member(id,"ENGAGE_TIPS_FREEWAY_BODY",	0XBD42A464,	-1);
	add_enum_member(id,"ORDINAL_THIRD",	0XBD498562,	-1);
	add_enum_member(id,"FE_INSTALL_ABBREV",	0XBD620BB1,	-1);
	add_enum_member(id,"PC_KEYS_STEERING_RIGHT",	0XBD7BA1AA,	-1);
	add_enum_member(id,"UI_ONLINE_OPTIONS",	0XBD81116C,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_DISRUPTIVE",	0XBD88662D,	-1);
	add_enum_member(id,"ACCEPT_DATE",	0XBDAC6A0C,	-1);
	add_enum_member(id,"BRIGHT_YELLOW",	0XBDAEF57A,	-1);
	add_enum_member(id,"SMS_UNLOCK_42_BODY",	0XBDB6560F,	-1);
	add_enum_member(id,"OPT_WORLD_DETAIL",	0XBDE2E94B,	-1);
	add_enum_member(id,"WT_REMOVE_REAR_SEATS",	0XBDE6757F,	-1);
	add_enum_member(id,"STYLE_VICTORY",	0XBE05E07F,	-1);
	add_enum_member(id,"SMS_LOC_EVENTS_OUT_THERE_SUBJECT",	0XBE2750A0,	-1);
	add_enum_member(id,"UI_COMMON_NO",	0XBE503981,	-1);
	add_enum_member(id,"UI_COMMON_ON",	0XBE5039A1,	-1);
	add_enum_member(id,"HELP_PERFORMANCE_SHOP_BRAND_SELECT",	0XBE70E1B7,	-1);
	add_enum_member(id,"RIMS_BRAND_GIOVANNA",	0XBE87BA52,	-1);
	add_enum_member(id,"ENTER_EMAIL_ADDRESS",	0XBEDF2B09,	-1);
	add_enum_member(id,"WORLD_CHALLENGE_SUBJECT_REWARD_DVD",	0XBF178F39,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_ORANGE",	0XBF23DA34,	-1);
	add_enum_member(id,"ENGAGE_SHORT_TRACK_FROM",	0XBF2B2CBC,	-1);
	add_enum_member(id,"STYLE_360",	0XBF44ADC8,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_4_BODY",	0XBF470F81,	-1);
	add_enum_member(id,"SC13_LINE_1",	0XBF47FC10,	-1);
	add_enum_member(id,"SC13_LINE_2",	0XBF47FC11,	-1);
	add_enum_member(id,"SC13_LINE_3",	0XBF47FC12,	-1);
	add_enum_member(id,"SC13_LINE_4",	0XBF47FC13,	-1);
	add_enum_member(id,"SC13_LINE_5",	0XBF47FC14,	-1);
	add_enum_member(id,"SC13_LINE_6",	0XBF47FC15,	-1);
	add_enum_member(id,"SC13_LINE_7",	0XBF47FC16,	-1);
	add_enum_member(id,"SC13_LINE_8",	0XBF47FC17,	-1);
	add_enum_member(id,"SC13_LINE_9",	0XBF47FC18,	-1);
	add_enum_member(id,"BUTTON_DPAD_DOWN_RESET_CAR",	0XBF61E081,	-1);
	add_enum_member(id,"SMS_UNLOCK_32_SUBJECT",	0XBF8DFEF0,	-1);
	add_enum_member(id,"UI_CRIB_SPONSOR_CATEGORY",	0XBF959BCC,	-1);
	add_enum_member(id,"OPT_PLAYER_PROMPT_FOR_TRANNY",	0XBFB34120,	-1);
	add_enum_member(id,"SMS_INSTRUCTION_DEMO_BODY",	0XBFC91944,	-1);
	add_enum_member(id,"HUD_GETAWAY_GOT_LEAD",	0XBFD1936F,	-1);
	add_enum_member(id,"SMS_UNLOCK_43_BODY",	0XC00B7EB0,	-1);
	add_enum_member(id,"DEFAULT_STRING_ERROR",	0XC01A6F63,	-1);
	add_enum_member(id,"OL_MSG_THE_VOICE_INVITE_HAS_BEEN_WITHDRAWN",	0XC01EBECE,	-1);
	add_enum_member(id,"PAINT_CHOOSE_VINYL_COLORS",	0XC034CE3D,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SMS_SUBJECT",	0XC0398786,	-1);
	add_enum_member(id,"OPT_PLAYER_SCORE",	0XC03F9F19,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_LOGIN_INVALID_PASSWORD",	0XC042C11C,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_RETURN_TO_LOGIN",	0XC04643B0,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_BEACON_HILL_BODY",	0XC05DE3EF,	-1);
	add_enum_member(id,"MAILBOX_NAME_INBOX",	0XC06E138A,	-1);
	add_enum_member(id,"OLX_ERROR_EMAIL_PASSWORD",	0XC080D534,	-1);
	add_enum_member(id,"REGION_NAME_1",	0XC08AF0B3,	-1);
	add_enum_member(id,"REGION_NAME_2",	0XC08AF0B4,	-1);
	add_enum_member(id,"REGION_NAME_3",	0XC08AF0B5,	-1);
	add_enum_member(id,"REGION_NAME_4",	0XC08AF0B6,	-1);
	add_enum_member(id,"REGION_NAME_5",	0XC08AF0B7,	-1);
	add_enum_member(id,"HELP_CRIB_WORLD_MAP",	0XC090500B,	-1);
	add_enum_member(id,"HELP_OL_MESSENGER",	0XC092120A,	-1);
	add_enum_member(id,"HELP_VIDEO_OPTIONS",	0XC097DD69,	-1);
	add_enum_member(id,"SAVE_LOAD_TITLE",	0XC09B6BCE,	-1);
	add_enum_member(id,"UI_ONLINE_SELECT_CAR",	0XC0BEDF15,	-1);
	add_enum_member(id,"TYPE_3_SKY_BLUE_GREEN",	0XC0D29020,	-1);
	add_enum_member(id,"SPONSOR_CHOOSE_A_SPONSOR",	0XC101E626,	-1);
	add_enum_member(id,"CUST_CATEGORY_INTERIORS",	0XC10D7979,	-1);
	add_enum_member(id,"V2_ALL_BUT_HOOD_LEFT_PURGE",	0XC11D723E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF2_SUBJECT",	0XC13875B2,	-1);
	add_enum_member(id,"OL_WAITING",	0XC147E3AC,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_5_BODY",	0XC19C3822,	-1);
	add_enum_member(id,"LOADING_TITLE_GRAPHICS_SHOP_VINYLS",	0XC1C8FD6B,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAP_DEMO_BODY",	0XC1D92693,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_FROM",	0XC1E0FB6B,	-1);
	add_enum_member(id,"MU_OPTIONS_LOAD_FAILED",	0XC1ED97CF,	-1);
	add_enum_member(id,"SMS_RETURN",	0XC20A08F1,	-1);
	add_enum_member(id,"SPONSOR_SIGNING_BONUS",	0XC23410E7,	-1);
	add_enum_member(id,"SMS_UNLOCK_44_BODY",	0XC260A751,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_STILLEN",	0XC26BCEB2,	-1);
	add_enum_member(id,"SPONSOR_AVERAGE_DIFFERENCE",	0XC2867F37,	-1);
	add_enum_member(id,"HUD_FINISH_YOUR_TIME",	0XC2878EBC,	-1);
	add_enum_member(id,"OL_ANSWER_VOICE_CHAT_INVITE",	0XC2AEFA2B,	-1);
	add_enum_member(id,"TYPE_2_RED",	0XC2BB742C,	-1);
	add_enum_member(id,"HUD_ZERO_SIXTY_TIME",	0XC2BE294D,	-1);
	add_enum_member(id,"TYPE_3_RED",	0XC2CD8CAD,	-1);
	add_enum_member(id,"OL_MSG_LAN_CONFIRM_EXIT",	0XC2E59520,	-1);
	add_enum_member(id,"OL_SESSION_END",	0XC304FA53,	-1);
	add_enum_member(id,"SMS_DVD_COVER_5_SUBJECT",	0XC32B0A50,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH_SUBJECT",	0XC3303625,	-1);
	add_enum_member(id,"OL_FEEDBACK_GOOD_ATTITUDE_DESC",	0XC33D7AE7,	-1);
	add_enum_member(id,"CSTATISTICS_MAGAZINES_WON",	0XC35DD09E,	-1);
	add_enum_member(id,"TUNING_DRAG_STATS_BURNOUT_DISTANCE",	0XC35E2357,	-1);
	add_enum_member(id,"CSTATISTICS_RACES_WON",	0XC3755F6D,	-1);
	add_enum_member(id,"EC_ENGINE_MANAGEMENT_UNIT",	0XC3836997,	-1);
	add_enum_member(id,"SMS_UNLOCK_42_SUBJECT",	0XC3989011,	-1);
	add_enum_member(id,"HELP_PERFORMANCE_SHOP_MAIN",	0XC3A914F6,	-1);
	add_enum_member(id,"HELP_CAREER_CARLOT",	0XC3CABAFD,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SD3_TITLE",	0XC3CD7C45,	-1);
	add_enum_member(id,"MU_PAUSE_EXPLORE",	0XC3E5BCDC,	-1);
	add_enum_member(id,"OPT_PLAYER_CAM_BUMPER",	0XC3E9AE58,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_STREETGLOW",	0XC4144667,	-1);
	add_enum_member(id,"OL_TRACK_NAME",	0XC419592E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GEAR_RATIOS",	0XC42392F4,	-1);
	add_enum_member(id,"FLAG_BRAZIL",	0XC4260F7C,	-1);
	add_enum_member(id,"HELP_OLX_GAMERTAG_SELECT",	0XC42EABA0,	-1);
	add_enum_member(id,"PRS_BURNOUT_DISTANCE",	0XC431600C,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE_SPOILERS",	0XC43176D4,	-1);
	add_enum_member(id,"VINYL_CATEGORY_MODERN",	0XC436F812,	-1);
	add_enum_member(id,"SAVELOAD_INFORM_MEMCARD_OUT_AUTOSAVE_CONFIRM",	0XC43CB6FB,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TRANS_SUBJECT",	0XC4476A7B,	-1);
	add_enum_member(id,"LABEL_RETURN_TO_FREE_RUN",	0XC44A6515,	-1);
	add_enum_member(id,"LABEL_GAMES_CREATED",	0XC44A7EE2,	-1);
	add_enum_member(id,"OPT_PLAYER_SPLIT_LAP_RECORD",	0XC44D3943,	-1);
	add_enum_member(id,"DYNO_TIP_SWAYBARS",	0XC4553F70,	-1);
	add_enum_member(id,"TUNING_LABEL_DRIFT",	0XC476882B,	-1);
	add_enum_member(id,"OL_READ_INVITE",	0XC48A4103,	-1);
	add_enum_member(id,"RIMS_BRAND_WELD_RACING",	0XC49C11FE,	-1);
	add_enum_member(id,"TYPE_3_UPPER_RIGHT_LOWER_LEFT_NOZZLES",	0XC4AFDEA1,	-1);
	add_enum_member(id,"SMS_UNLOCK_45_BODY",	0XC4B5CFF2,	-1);
	add_enum_member(id,"KIT01_TRUNK_AUDIO",	0XC4C2638C,	-1);
	add_enum_member(id,"ADD_PAINT_TO_INVOICE",	0XC4C5D271,	-1);
	add_enum_member(id,"OL_FEEDBACK_CHEATING_DESC",	0XC4C7EDBE,	-1);
	add_enum_member(id,"TYPE_2_MAGENTA_BLUE",	0XC4CC1A95,	-1);
	add_enum_member(id,"WORLD_CHALLENGE_FAIL",	0XC4DF3B44,	-1);
	add_enum_member(id,"SC_TAKE_PICTURE",	0XC4E42EB4,	-1);
	add_enum_member(id,"OL_RACE_WITH_VEHICLE",	0XC4F4678E,	-1);
	add_enum_member(id,"OPT_AUDIO_MODE_MONO",	0XC50FA35F,	-1);
	add_enum_member(id,"UI_REPLAY_SELECT_XBOX",	0XC5146FE8,	-1);
	add_enum_member(id,"FLAG_CANADA",	0XC54E4D70,	-1);
	add_enum_member(id,"ENGAGE_TIPS_CAR_SUBJECT",	0XC572F4E9,	-1);
	add_enum_member(id,"LOADING_TITLE_BODY_SHOP",	0XC583D824,	-1);
	add_enum_member(id,"HELP_OL_OPTIONS_MAIN",	0XC5AC0F31,	-1);
	add_enum_member(id,"OL_PC_CDKEY_ACCOUNT",	0XC5C25C87,	-1);
	add_enum_member(id,"HELP_OL_MONTHLY_RANK",	0XC5C27A17,	-1);
	add_enum_member(id,"ASK_ENTER_SPON_SHORT_TRACK_SUBJECT",	0XC5F7902C,	-1);
	add_enum_member(id,"BUTTON_KOREAN",	0XC5FA36BA,	-1);
	add_enum_member(id,"CUST_CATEGORY_PAINT_VINYL",	0XC6089CA7,	-1);
	add_enum_member(id,"VISUALS_SHOP",	0XC613B25F,	-1);
	add_enum_member(id,"DEMO_BODY_KITS_BLURB",	0XC6141CA1,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_EXPLORING_MINIMAP",	0XC6269082,	-1);
	add_enum_member(id,"LANG_ENGLISH",	0XC628BECA,	-1);
	add_enum_member(id,"TYPE_1_BOTH_HOOD_NOZZLES",	0XC6462D9A,	-1);
	add_enum_member(id,"OL_DNAS_TRADEMARK",	0XC6588E19,	-1);
	add_enum_member(id,"LOADING_TITLE_UNRANKED_USING_MESSENGER",	0XC6590BC2,	-1);
	add_enum_member(id,"STYLE_SPRAYSHOW",	0XC6644A5F,	-1);
	add_enum_member(id,"HELP_QR_MODE_SELECT",	0XC6923ECD,	-1);
	add_enum_member(id,"FILTER_EVENT_ON",	0XC6B7EB02,	-1);
	add_enum_member(id,"SMS_UNLOCK_46_BODY",	0XC70AF893,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_ORANGE",	0XC7228AA0,	-1);
	add_enum_member(id,"OL_MSG_DECLINING_FRIEND_REQUEST",	0XC744B7AB,	-1);
	add_enum_member(id,"TUNING_DRAG_STATS_MSG_400_METRE",	0XC76C65B4,	-1);
	add_enum_member(id,"QR_RACING_LEAGUE",	0XC786C4E7,	-1);
	add_enum_member(id,"UI_CRIB_SHOW_MAGAZINES",	0XC7993F9A,	-1);
	add_enum_member(id,"SMS_UNLOCK_52_SUBJECT",	0XC7A32132,	-1);
	add_enum_member(id,"MU_OPTIONS_TITLE",	0XC7CA52ED,	-1);
	add_enum_member(id,"POST_RACE_STATS_TITLE",	0XC7DA078E,	-1);
	add_enum_member(id,"MU_PAUSE_QUIT_TO_FE",	0XC7E1420C,	-1);
	add_enum_member(id,"DYNO_TIP_TIRE_GRIP",	0XC7E6E649,	-1);
	add_enum_member(id,"CUSTOMIZE_NEW_CAR",	0XC8054CE0,	-1);
	add_enum_member(id,"OPT_DPAD_XBOX",	0XC82976EA,	-1);
	add_enum_member(id,"UI_ICE_TRUNK_AUDIO_LAYOUT",	0XC835538E,	-1);
	add_enum_member(id,"EA_TERMS_CONDITIONS_DO_ACCEPT",	0XC85F0389,	-1);
	add_enum_member(id,"OL_MSG_TO_NAME",	0XC8983262,	-1);
	add_enum_member(id,"V1_ALL_BUT_WHEEL_LEFT_PURGE",	0XC8988F48,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_GTF_TITLE",	0XC8A8009C,	-1);
	add_enum_member(id,"TUNING_TYPE_ECUTORQUE",	0XC8B8FBF1,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH3_SUBJECT",	0XC8B91418,	-1);
	add_enum_member(id,"TU_STAGE_1_TURBO_KIT",	0XC8BFCF5D,	-1);
	add_enum_member(id,"UI_ICE_TRUNK_AUDIO_LAYOUT_SELECTION",	0XC8D23393,	-1);
	add_enum_member(id,"OLX_ERROR_USED_ACCOUNT",	0XC8EB64B7,	-1);
	add_enum_member(id,"TYPE_3_MAGENTA",	0XC913BF6F,	-1);
	add_enum_member(id,"PC_LAN_DISCONNECTED",	0XC91A3FDE,	-1);
	add_enum_member(id,"HELP_CRIB_REWARD_SPONSORS",	0XC91B17F1,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_HONEST",	0XC91D620F,	-1);
	add_enum_member(id,"ENGAGE_TIPS_HIDDEN_SUBJECT",	0XC923C8FF,	-1);
	add_enum_member(id,"CONFIRM_RESTORE_SETTINGS",	0XC92DB340,	-1);
	add_enum_member(id,"HUD_QUARTER_MILE_TIME",	0XC93F1717,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_LEADERBOARD",	0XC93FBFB5,	-1);
	add_enum_member(id,"SMS_UNLOCK_47_BODY",	0XC9602134,	-1);
	add_enum_member(id,"CSTATISTICS_RACES_ENTERED",	0XC967AEE0,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BRK_BODY",	0XC96F4170,	-1);
	add_enum_member(id,"TYPE_3_GREEN_BLUE",	0XC975960A,	-1);
	add_enum_member(id,"TYPE_3_GREEN_GOLD",	0XC9785F88,	-1);
	add_enum_member(id,"PRR_FINISH_TIME_TITLE",	0XC97A2D22,	-1);
	add_enum_member(id,"HUD_FINISH_SECOND",	0XC9A64EFB,	-1);
	add_enum_member(id,"DECAL_ZONE_RIGHTDOOR",	0XC9A967C4,	-1);
	add_enum_member(id,"CONFIRM_BACK_TO_CRIB",	0XC9BA9E3E,	-1);
	add_enum_member(id,"SMS_MESSAGE_HEADER_STORED",	0XC9C5976E,	-1);
	add_enum_member(id,"OL_ACCEPT_INVITE",	0XC9DC5BB7,	-1);
	add_enum_member(id,"SMS_FROM_BODY_SHOP",	0XC9E0946B,	-1);
	add_enum_member(id,"OL_INVITE_CANCELLED",	0XC9E362A2,	-1);
	add_enum_member(id,"CAR_SELECT_LOCKED",	0XC9F7F7E5,	-1);
	add_enum_member(id,"OL_MSG_DISCONNECTED_FROM_SERVER_XBL",	0XC9FD0980,	-1);
	add_enum_member(id,"FLAGS_BRAZIL",	0XC9FE8F8F,	-1);
	add_enum_member(id,"TUNING_LABEL_STREET_X",	0XCA169C60,	-1);
	add_enum_member(id,"OL_MAIN_TITLE",	0XCA38D55F,	-1);
	add_enum_member(id,"TYPE_3_ALL_NOZZLES",	0XCA3AB03F,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_MAP",	0XCA495B29,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAG_BODY",	0XCA50BBC6,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_EGT_BODY",	0XCA538367,	-1);
	add_enum_member(id,"CAR_SELECT_OPEN_FOR_SPONSOR",	0XCA89507E,	-1);
	add_enum_member(id,"SKILL_MEDIUM",	0XCAB262DE,	-1);
	add_enum_member(id,"CAR_NAME_A3",	0XCABFC328,	-1);
	add_enum_member(id,"CAR_NAME_TT",	0XCABFC5BC,	-1);
	add_enum_member(id,"MU_PAUSE_DRIVE_CAMERAS",	0XCADB45D2,	-1);
	add_enum_member(id,"OL_MSG_DISCONNECTED_IDLE_TIMEOUT",	0XCAEE48F5,	-1);
	add_enum_member(id,"HELP_VIRTUAL_KEYBOARD",	0XCAF6D39E,	-1);
	add_enum_member(id,"ENGAGE_TIPS_METRIC_BODY",	0XCB22B3F5,	-1);
	add_enum_member(id,"FLAGS_CANADA",	0XCB26CD83,	-1);
	add_enum_member(id,"HELP_QR_TRACK_PRESET",	0XCB2AFC50,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_URL",	0XCB35C4DE,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS6_SUBJECT",	0XCB3817DE,	-1);
	add_enum_member(id,"ENGAGE_TIPS_OUTRUN_INTRO_DEMO_BODY",	0XCB5D2FCD,	-1);
	add_enum_member(id,"UI_CRIB_QUIT_TO_MAIN_MENU",	0XCB5E3178,	-1);
	add_enum_member(id,"IG_FIRST_RUN",	0XCB5E7E4A,	-1);
	add_enum_member(id,"OL_CREATE_USER_GENDER",	0XCB6B7CFF,	-1);
	add_enum_member(id,"OLX_GAMERTAG",	0XCB881919,	-1);
	add_enum_member(id,"SMS_UNLOCK_62_SUBJECT",	0XCBADB253,	-1);
	add_enum_member(id,"SMS_UNLOCK_48_BODY",	0XCBB549D5,	-1);
	add_enum_member(id,"DYNO_BHP",	0XCBBC6512,	-1);
	add_enum_member(id,"DYNO_KMH",	0XCBBC8BF8,	-1);
	add_enum_member(id,"DYNO_MAX",	0XCBBC92FE,	-1);
	add_enum_member(id,"DYNO_MIN",	0XCBBC93FC,	-1);
	add_enum_member(id,"DYNO_TIP",	0XCBBCB1C5,	-1);
	add_enum_member(id,"SPONSOR_RACETYPE_DRIFT",	0XCC01C4E7,	-1);
	add_enum_member(id,"HOSE_PAINT",	0XCC3401E9,	-1);
	add_enum_member(id,"TOP_HOOD_FLAMESKULL",	0XCC3C446A,	-1);
	add_enum_member(id,"MU_PAUSE_VIBRATION_XBOX",	0XCC3C798B,	-1);
	add_enum_member(id,"BD_PU_Tutorials_207",	0XCC3D71E7,	-1);
	add_enum_member(id,"BD_PU_Tutorials_208",	0XCC3D71E8,	-1);
	add_enum_member(id,"BD_PU_Tutorials_209",	0XCC3D71E9,	-1);
	add_enum_member(id,"BD_PU_Tutorials_211",	0XCC3D7202,	-1);
	add_enum_member(id,"BD_PU_Tutorials_212",	0XCC3D7203,	-1);
	add_enum_member(id,"BD_PU_Tutorials_219",	0XCC3D720A,	-1);
	add_enum_member(id,"BD_PU_Tutorials_220",	0XCC3D7222,	-1);
	add_enum_member(id,"BD_PU_Tutorials_221",	0XCC3D7223,	-1);
	add_enum_member(id,"BD_PU_Tutorials_222",	0XCC3D7224,	-1);
	add_enum_member(id,"BD_PU_Tutorials_223",	0XCC3D7225,	-1);
	add_enum_member(id,"BD_PU_Tutorials_224",	0XCC3D7226,	-1);
	add_enum_member(id,"BD_PU_Tutorials_225",	0XCC3D7227,	-1);
	add_enum_member(id,"BD_PU_Tutorials_242",	0XCC3D7266,	-1);
	add_enum_member(id,"BD_PU_Tutorials_243",	0XCC3D7267,	-1);
	add_enum_member(id,"BD_PU_Tutorials_244",	0XCC3D7268,	-1);
	add_enum_member(id,"BD_PU_Tutorials_245",	0XCC3D7269,	-1);
	add_enum_member(id,"BD_PU_Tutorials_246",	0XCC3D726A,	-1);
	add_enum_member(id,"BD_PU_Tutorials_247",	0XCC3D726B,	-1);
	add_enum_member(id,"BD_PU_Tutorials_254",	0XCC3D7289,	-1);
	add_enum_member(id,"BD_PU_Tutorials_255",	0XCC3D728A,	-1);
	add_enum_member(id,"BD_PU_Tutorials_256",	0XCC3D728B,	-1);
	add_enum_member(id,"BD_PU_Tutorials_257",	0XCC3D728C,	-1);
	add_enum_member(id,"BD_PU_Tutorials_258",	0XCC3D728D,	-1);
	add_enum_member(id,"SMS_MESSAGE_HEADER",	0XCC438B1E,	-1);
	add_enum_member(id,"HUD_DRIFT_MAXXED",	0XCC62C8BE,	-1);
	add_enum_member(id,"OL_CREATING_GAME",	0XCC6C959F,	-1);
	add_enum_member(id,"TUNING_LABEL_URL",	0XCC76DEE5,	-1);
	add_enum_member(id,"WT_REMOVE_INTERIOR_PANELS",	0XCC89DC24,	-1);
	add_enum_member(id,"PRS_ZERO_SIXTY",	0XCCBC22B3,	-1);
	add_enum_member(id,"OL_EA_LOGIN_SERVER_DOWN",	0XCCC6B264,	-1);
	add_enum_member(id,"HELP_OL_GAMEROOM",	0XCCD1A5D8,	-1);
	add_enum_member(id,"DYNO_TIP_TURBO",	0XCD085170,	-1);
	add_enum_member(id,"MU_PAUSE_LAP_INFO",	0XCD432BE5,	-1);
	add_enum_member(id,"MESSAGE_08_SUBJECT",	0XCD738A1A,	-1);
	add_enum_member(id,"OL_MSG_REMOVE_FRIEND_CONFIRM",	0XCD787311,	-1);
	add_enum_member(id,"HELP_OL_KEYBOARD",	0XCD87AA12,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_AMT_TITLE",	0XCD9FDAFD,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_1",	0XCDA93FAE,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_2",	0XCDA93FAF,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_3",	0XCDA93FB0,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_4",	0XCDA93FB1,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_5",	0XCDA93FB2,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_6",	0XCDA93FB3,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_7",	0XCDA93FB4,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_8",	0XCDA93FB5,	-1);
	add_enum_member(id,"ENGAGE_DRIFT_RANDOM_9",	0XCDA93FB6,	-1);
	add_enum_member(id,"SMS_MESSAGE_HEADER_UNREAD",	0XCE04C2FC,	-1);
	add_enum_member(id,"SMS_UNLOCK_49_BODY",	0XCE0A7276,	-1);
	add_enum_member(id,"HELP_OL_OPTIONS_EATRAX",	0XCE497C51,	-1);
	add_enum_member(id,"OL_QUIT_GAME_UNRANKED_CONFIRMATION",	0XCE50DA14,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SC_BODY",	0XCE5A65DD,	-1);
	add_enum_member(id,"UI_CAREER_VIEW_REWARDS",	0XCE62C0BF,	-1);
	add_enum_member(id,"PRR_NAME",	0XCE678AD3,	-1);
	add_enum_member(id,"DYNO_GEAR_RATIOS",	0XCE77D7C8,	-1);
	add_enum_member(id,"HOOD_TEAR1",	0XCE7CE385,	-1);
	add_enum_member(id,"HOOD_TEAR2",	0XCE7CE386,	-1);
	add_enum_member(id,"HOOD_TEAR3",	0XCE7CE387,	-1);
	add_enum_member(id,"SMS_UNLOCK_10_SUBJECT",	0XCE7FFAAC,	-1);
	add_enum_member(id,"FEET_ABBREVIATION",	0XCE8EDAB8,	-1);
	add_enum_member(id,"OL_LOBBY_TITLE",	0XCE9A2532,	-1);
	add_enum_member(id,"ENGAGE_STAGE_0_SPRINT_0",	0XCE9F1A96,	-1);
	add_enum_member(id,"NEIGHBOURHOOD_YOU_ENTERED",	0XCEA71F0E,	-1);
	add_enum_member(id,"CUST_CATEGORY_DEBUG",	0XCEB35461,	-1);
	add_enum_member(id,"LABEL_GAMES_PLAYED_2_LINES",	0XCEB3FF94,	-1);
	add_enum_member(id,"HOOD_WILD1",	0XCEB58B89,	-1);
	add_enum_member(id,"HOOD_WILD2",	0XCEB58B8A,	-1);
	add_enum_member(id,"HOOD_WILD3",	0XCEB58B8B,	-1);
	add_enum_member(id,"CAR_NAME_NAVIGATOR",	0XCEBDE67F,	-1);
	add_enum_member(id,"TUNING_TOP_SPEED",	0XCEBFAA36,	-1);
	add_enum_member(id,"VINYL_CATEGORY_RACING",	0XCEE2F041,	-1);
	add_enum_member(id,"CAR_SELECT_GO_GET_A_SPONSOR_CAR",	0XCF3B2D70,	-1);
	add_enum_member(id,"OLX_DASHBOARD_TROUBLESHOOTER",	0XCF41CC19,	-1);
	add_enum_member(id,"KB_BTN_SHIFT",	0XCF4E278C,	-1);
	add_enum_member(id,"STRING_NO_PROFILE",	0XCF4F80C2,	-1);
	add_enum_member(id,"KB_BTN_SPACE",	0XCF52681A,	-1);
	add_enum_member(id,"SMS_INSTRUCTION_DEMO_SUBJECT",	0XCF758326,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_10",	0XCF8CB898,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_11",	0XCF8CB899,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_12",	0XCF8CB89A,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_13",	0XCF8CB89B,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_14",	0XCF8CB89C,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_15",	0XCF8CB89D,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_16",	0XCF8CB89E,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_17",	0XCF8CB89F,	-1);
	add_enum_member(id,"ENGAGE_CIRCUIT_RANDOM_18",	0XCF8CB8A0,	-1);
	add_enum_member(id,"OPT_CAR_HEADLIGHT",	0XCFBEDB50,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4001",	0XCFCC5D73,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4002",	0XCFCC5D74,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4003",	0XCFCC5D75,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4004",	0XCFCC5D76,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4005",	0XCFCC5D77,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4022",	0XCFCC5DB6,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4023",	0XCFCC5DB7,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4024",	0XCFCC5DB8,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4061",	0XCFCC5E39,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4062",	0XCFCC5E3A,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4081",	0XCFCC5E7B,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4082",	0XCFCC5E7C,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4083",	0XCFCC5E7D,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4084",	0XCFCC5E7E,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4086",	0XCFCC5E80,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4087",	0XCFCC5E81,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4088",	0XCFCC5E82,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4102",	0XCFCC61B5,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4103",	0XCFCC61B6,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4104",	0XCFCC61B7,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4106",	0XCFCC61B9,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4107",	0XCFCC61BA,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4123",	0XCFCC61F8,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4124",	0XCFCC61F9,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4125",	0XCFCC61FA,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4127",	0XCFCC61FC,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4162",	0XCFCC627B,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4163",	0XCFCC627C,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4201",	0XCFCC65F5,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4202",	0XCFCC65F6,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4203",	0XCFCC65F7,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4211",	0XCFCC6616,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4212",	0XCFCC6617,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4213",	0XCFCC6618,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4221",	0XCFCC6637,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4222",	0XCFCC6638,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4223",	0XCFCC6639,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4401",	0XCFCC6E77,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4402",	0XCFCC6E78,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4403",	0XCFCC6E79,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4404",	0XCFCC6E7A,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4601",	0XCFCC76F9,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4602",	0XCFCC76FA,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4603",	0XCFCC76FB,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4604",	0XCFCC76FC,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4605",	0XCFCC76FD,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4606",	0XCFCC76FE,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4607",	0XCFCC76FF,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4608",	0XCFCC7700,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4702",	0XCFCC7B3B,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4703",	0XCFCC7B3C,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4704",	0XCFCC7B3D,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4712",	0XCFCC7B5C,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4713",	0XCFCC7B5D,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4714",	0XCFCC7B5E,	-1);
	add_enum_member(id,"REVERSE_TRACK_NAME_4715",	0XCFCC7B5F,	-1);
	add_enum_member(id,"FLAG_GREECE",	0XCFD1B203,	-1);
	add_enum_member(id,"MU_PAUSE_WORLD_MAP",	0XCFEC91A2,	-1);
	add_enum_member(id,"FULL_MAP_REGION",	0XD00905F2,	-1);
	add_enum_member(id,"MU_PAUSE_REARVIEW_MIRROR",	0XD02C18BC,	-1);
	add_enum_member(id,"ROOF_STYLE02_OFFSET",	0XD0547A0D,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_10",	0XD07CAC18,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_11",	0XD07CAC19,	-1);
	add_enum_member(id,"ENGAGE_URL_RANDOM_12",	0XD07CAC1A,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_DISRUPTIVE_DESC",	0XD08DDC6B,	-1);
	add_enum_member(id,"CHALLENGE_DATA_EVEN",	0XD0942448,	-1);
	add_enum_member(id,"LOADING_TITLE_STORE_LOCATIONS",	0XD0AD7875,	-1);
	add_enum_member(id,"OL_HIGHEST_PLAYERS_LEVEL",	0XD0B3953B,	-1);
	add_enum_member(id,"PRS_FEET",	0XD0B86077,	-1);
	add_enum_member(id,"OL_MESS_DECLINED_INVITE",	0XD0BA5D76,	-1);
	add_enum_member(id,"OPT_GAMEPLAY",	0XD0CF6EE1,	-1);
	add_enum_member(id,"PC_NAV_EA_MESSENGER",	0XD0EFBEA3,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_CREATE_THE_PROFILE",	0XD0F75ADE,	-1);
	add_enum_member(id,"OL_OP_BadConWarning",	0XD1009B34,	-1);
	add_enum_member(id,"CUSTOMIZE_DECALS_ON_STOCK_HOOD_ONLY",	0XD104AD36,	-1);
	add_enum_member(id,"OPT_TRAILERS",	0XD10D7477,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_NOT_COMPLETED",	0XD11ECD79,	-1);
	add_enum_member(id,"PAINT_CATEGORY_INSTALL_SETUP",	0XD132A6FE,	-1);
	add_enum_member(id,"XBOX_DPAD_STRING",	0XD13BD9CE,	-1);
	add_enum_member(id,"PC_OL_SEARCH",	0XD14DDF21,	-1);
	add_enum_member(id,"OL_FEEDBACK_LEWDNESS_DESC_PC",	0XD152ED92,	-1);
	add_enum_member(id,"OL_MSG_JOIN_GAME_FULL",	0XD155595A,	-1);
	add_enum_member(id,"OL_WARNING_JOIN_GAME_UNRANKED_PC",	0XD157C200,	-1);
	add_enum_member(id,"BD_PU_Tutorials_208_A",	0XD1619868,	-1);
	add_enum_member(id,"BD_PU_Tutorials_208_B",	0XD1619869,	-1);
	add_enum_member(id,"BD_PU_Tutorials_209_A",	0XD1619CA9,	-1);
	add_enum_member(id,"BD_PU_Tutorials_223_A",	0XD1629BE5,	-1);
	add_enum_member(id,"BD_PU_Tutorials_224_A",	0XD162A026,	-1);
	add_enum_member(id,"BD_PU_Tutorials_256_A",	0XD1644DCB,	-1);
	add_enum_member(id,"CONFIRM_OVERWRITE_SAVED_GAME",	0XD16D5D1E,	-1);
	add_enum_member(id,"SAVELOAD_INFORM_SAVE_FAILED_AUTOSAVE_OFF",	0XD183936B,	-1);
	add_enum_member(id,"CUSTOMIZE_NOT_ENOUGH_MONEY",	0XD1AC60BE,	-1);
	add_enum_member(id,"SMS_UNLOCK_10_BODY",	0XD21D4E8A,	-1);
	add_enum_member(id,"QR_COMMENTS_LABEL",	0XD23814C6,	-1);
	add_enum_member(id,"MINIMAP_YOURCAR",	0XD24B682E,	-1);
	add_enum_member(id,"VINYL_CATEGORY_SPLASH",	0XD24C5678,	-1);
	add_enum_member(id,"OPT_ONLINE_VOICE_VOLUME",	0XD2822102,	-1);
	add_enum_member(id,"CUSTOMIZE_CANT_PAINT_STOCK_ENGINE",	0XD286BE3A,	-1);
	add_enum_member(id,"SMS_UNLOCK_20_SUBJECT",	0XD28A8BCD,	-1);
	add_enum_member(id,"VINYL_CATEGORY_STRIPE",	0XD2982464,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_INVALID_PASSWORD_LENGTH",	0XD29A1A18,	-1);
	add_enum_member(id,"RIMS_BRAND_AVUS",	0XD2E7035E,	-1);
	add_enum_member(id,"RIMS_BRAND_DONZ",	0XD2E889DA,	-1);
	add_enum_member(id,"RIMS_BRAND_FOXX",	0XD2E9A3E4,	-1);
	add_enum_member(id,"RIMS_BRAND_MOMO",	0XD2ED7917,	-1);
	add_enum_member(id,"RIMS_BRAND_NFSU",	0XD2EDDFFB,	-1);
	add_enum_member(id,"RIMS_BRAND_ROTA",	0XD2F037D5,	-1);
	add_enum_member(id,"RIMS_BRAND_VOLK",	0XD2F2685B,	-1);
	add_enum_member(id,"RIMS_BRAND_WORK",	0XD2F2F582,	-1);
	add_enum_member(id,"SC12_LINE_1",	0XD306272F,	-1);
	add_enum_member(id,"SC12_LINE_2",	0XD3062730,	-1);
	add_enum_member(id,"SC12_LINE_3",	0XD3062731,	-1);
	add_enum_member(id,"SC12_LINE_4",	0XD3062732,	-1);
	add_enum_member(id,"SC12_LINE_5",	0XD3062733,	-1);
	add_enum_member(id,"SC12_LINE_6",	0XD3062734,	-1);
	add_enum_member(id,"SC12_LINE_7",	0XD3062735,	-1);
	add_enum_member(id,"OPT_PLAYER_TRANSMISSION",	0XD31407E7,	-1);
	add_enum_member(id,"ENGAGE_SPON_SPRINT_RANDOM_10",	0XD3213604,	-1);
	add_enum_member(id,"STYLE_POWERSLIDE",	0XD33186AD,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_TUR_BODY",	0XD333FDE2,	-1);
	add_enum_member(id,"FLAGS_FRANCE",	0XD352FE3A,	-1);
	add_enum_member(id,"OPT_VIDEO_WIDESCREEN",	0XD3588630,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_LOSE_ANY_CHANGES_TO_THE_PROFILE",	0XD36620FE,	-1);
	add_enum_member(id,"UI_APPLY_FILTER",	0XD3764387,	-1);
	add_enum_member(id,"TU_STAGE_3_TURBO_KIT",	0XD37939DF,	-1);
	add_enum_member(id,"BUTTON_CHANGE_POV",	0XD38DF194,	-1);
	add_enum_member(id,"DEBUG_ASK_ENTER_SPRINT",	0XD3A4D4E0,	-1);
	add_enum_member(id,"HELP_CAR_SPECIALTIES_SUB_LEVELS",	0XD3E04E45,	-1);
	add_enum_member(id,"HELP_GENERIC_SCROLLUPDN_MULTBUTTON_NOCANCEL",	0XD3E8B668,	-1);
	add_enum_member(id,"OLX_ERROR_SERVICE_BUSY",	0XD4261E6D,	-1);
	add_enum_member(id,"FINISHED",	0XD4293449,	-1);
	add_enum_member(id,"UI_REPLY",	0XD447B268,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_0_LARGE",	0XD44EB6CA,	-1);
	add_enum_member(id,"SC09_LINE_1",	0XD4568855,	-1);
	add_enum_member(id,"SC09_LINE_2",	0XD4568856,	-1);
	add_enum_member(id,"SC09_LINE_3",	0XD4568857,	-1);
	add_enum_member(id,"SC09_LINE_4",	0XD4568858,	-1);
	add_enum_member(id,"SC09_LINE_5",	0XD4568859,	-1);
	add_enum_member(id,"UI_START",	0XD461C58A,	-1);
	add_enum_member(id,"SMS_UNLOCK_11_BODY",	0XD472772B,	-1);
	add_enum_member(id,"SUICIDE",	0XD47554E5,	-1);
	add_enum_member(id,"SC_CYCLE_CAMERAS",	0XD478421F,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_CONTROLS",	0XD4827E5F,	-1);
	add_enum_member(id,"OL_JOINING_GAME",	0XD48FBA40,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_REQ_SENT",	0XD4966F2C,	-1);
	add_enum_member(id,"SMS_MINIMAP_INSTRUCTION_SUBJECT",	0XD4978F8C,	-1);
	add_enum_member(id,"CSTATISTICS_REGION_HIDDEN_SHOPS",	0XD49FED27,	-1);
	add_enum_member(id,"OL_MESS_INVITED_BY",	0XD4ABF03D,	-1);
	add_enum_member(id,"VINYL_CATEGORY_TRIBAL",	0XD4C40CEB,	-1);
	add_enum_member(id,"POST_RACE_RESULT_TITLE",	0XD4D01B7E,	-1);
	add_enum_member(id,"AUDIO_COMP_LCD_0_SMALL",	0XD4D3AF38,	-1);
	add_enum_member(id,"OL_BRINGING_UP_NETWORK",	0XD5344356,	-1);
	add_enum_member(id,"SMS_PERF_GENERIC_2_SUBJECT",	0XD553E45A,	-1);
	add_enum_member(id,"VINYL_CATEGORY_TRIBALSET",	0XD55AD357,	-1);
	add_enum_member(id,"CS_INTRO_STATUS",	0XD56AFE23,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_YELLOW",	0XD59232B4,	-1);
	add_enum_member(id,"FLAGS_GREECE",	0XD5AA3216,	-1);
	add_enum_member(id,"PC_DISCONNECT_MESSAGE",	0XD5D46FDF,	-1);
	add_enum_member(id,"HELP_OL_OPTIONS_CONTROLS",	0XD5F3F0E0,	-1);
	add_enum_member(id,"OL_INSUFFICIENT_PLAYERS_REMAIN",	0XD616E55A,	-1);
	add_enum_member(id,"LAN_QUIT_TO_MAIN",	0XD63B6982,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_NEED_TO_UPGRADE_ENGINE",	0XD649BE08,	-1);
	add_enum_member(id,"ENGAGE_TIPS_RIDE_HEIGHT",	0XD655DF00,	-1);
	add_enum_member(id,"MU_VOLUME",	0XD677FCF8,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_BLACK",	0XD68EA0C1,	-1);
	add_enum_member(id,"SMS_UNLOCK_30_SUBJECT",	0XD6951CEE,	-1);
	add_enum_member(id,"EC_FUEL_FILTER",	0XD6A265F7,	-1);
	add_enum_member(id,"SMS_UNLOCK_12_BODY",	0XD6C79FCC,	-1);
	add_enum_member(id,"VINYL_CATEGORY_UNIQUE",	0XD6D115E4,	-1);
	add_enum_member(id,"HELP_MAIN_MENU",	0XD6DFCF20,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_GRAPE",	0XD6EC6733,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_GREEN",	0XD6EC76D5,	-1);
	add_enum_member(id,"MINIMAP_PERFORMANCE",	0XD6F5819B,	-1);
	add_enum_member(id,"OPT_OVER_BRIGHT",	0XD6F5F38C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_NEW_SUBJECT",	0XD707383D,	-1);
	add_enum_member(id,"RSTATISTICS_DVD_COVERS",	0XD7123A0A,	-1);
	add_enum_member(id,"QR_DRIFT",	0XD7162CFA,	-1);
	add_enum_member(id,"OLX_CREATE_MATCH",	0XD72BC791,	-1);
	add_enum_member(id,"ENGAGE_STAGE_0_CIRCUIT_0",	0XD7681229,	-1);
	add_enum_member(id,"ENGAGE_STAGE_0_CIRCUIT_1",	0XD768122A,	-1);
	add_enum_member(id,"SHOP_EXIT_CONFIRMATION",	0XD76E0B5A,	-1);
	add_enum_member(id,"CONTROLLER_TITLE_PS2",	0XD77A22D8,	-1);
	add_enum_member(id,"STYLE_BURNOUT",	0XD7832E9E,	-1);
	add_enum_member(id,"OL_YOU_HAVE_TOO_MANY_BLOCKED",	0XD7A26411,	-1);
	add_enum_member(id,"DYNO_TIP_SPRINGS",	0XD7C2416A,	-1);
	add_enum_member(id,"PRS_BEST_DRIFT",	0XD7D8CA79,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_PART_REMOVE_DECALS",	0XD7E713D7,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_PM_TITLE",	0XD7EAB3D8,	-1);
	add_enum_member(id,"LOADING_GAMEPLAY_RACEBREAKER",	0XD8089C82,	-1);
	add_enum_member(id,"QR_SHORT_TRACK",	0XD8244725,	-1);
	add_enum_member(id,"OL_MUST_BE_IN_GAME_ROOM",	0XD831EAB3,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_NAME_THE_PROFILE",	0XD84FE2EB,	-1);
	add_enum_member(id,"OL_MSG_CANCEL_LOBBY_LOGIN",	0XD857CE14,	-1);
	add_enum_member(id,"PLAYER_1",	0XD87133BC,	-1);
	add_enum_member(id,"PLAYER_2",	0XD87133BD,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_CARBON_VINYL_WIDEBODY",	0XD8B8402A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ORSTRAT_BODY",	0XD8BC8820,	-1);
	add_enum_member(id,"ERROR_CONTROLLER_UNPLUGGED_TITLE_PSX2",	0XD8C66783,	-1);
	add_enum_member(id,"ERROR_CONTROLLER_UNPLUGGED_TITLE_XBOX",	0XD8CA8137,	-1);
	add_enum_member(id,"SMS_MAG_GENERIC_SUBJ_1",	0XD8D26325,	-1);
	add_enum_member(id,"SMS_MAG_GENERIC_SUBJ_2",	0XD8D26326,	-1);
	add_enum_member(id,"UI_ICE_NEON_UNDERCAR",	0XD8EA6D2F,	-1);
	add_enum_member(id,"HELP_OPTIONS_EATRAX",	0XD8F5EDF7,	-1);
	add_enum_member(id,"SMS_UNLOCK_13_BODY",	0XD91CC86D,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AUTO_BODY",	0XD91FE7EA,	-1);
	add_enum_member(id,"OPT_LEFT_ANALOG_XBOX",	0XD924586D,	-1);
	add_enum_member(id,"EC_FUEL_PRESSURE_REGULATOR",	0XD92807BE,	-1);
	add_enum_member(id,"ENGAGE_TIPS_WEATHER_SUBJECT",	0XD92EF843,	-1);
	add_enum_member(id,"OPT_WHEEL_MULTITURN",	0XD93BB359,	-1);
	add_enum_member(id,"OPT_PLAYER_SPLIT_LEADER",	0XD93F8F55,	-1);
	add_enum_member(id,"OL_MESS_WITHDRAWN_CHALLENGE",	0XD951D84A,	-1);
	add_enum_member(id,"MONTH_DECEMBER",	0XD95B07DB,	-1);
	add_enum_member(id,"OLX_MAIN_MENU",	0XD972D70A,	-1);
	add_enum_member(id,"TYPE_3_BOTH_LEFT_NOZZLES",	0XD99150FD,	-1);
	add_enum_member(id,"OL_MSG_GAMEROOM_CANNOT_START_GAME",	0XD99CFE5E,	-1);
	add_enum_member(id,"TUNING_TYPE_FRONTDOWNFORCE",	0XD99FC2E4,	-1);
	add_enum_member(id,"LOADING_TITLE_HIDDEN_EVENTS",	0XD9B267DD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS1_BODY",	0XD9C35DD7,	-1);
	add_enum_member(id,"LVL_3_HYDRAULICS",	0XD9D137F6,	-1);
	add_enum_member(id,"OL_ENTERING_VOICE_CHAT_WHEN_IN_CHAT",	0XD9D8184F,	-1);
	add_enum_member(id,"UI_PAUSE_PLAYER_OPTIONS_TITLE",	0XD9DC2F12,	-1);
	add_enum_member(id,"OL_MSG_RACE_RESULTS_REJECTED",	0XD9DD2A50,	-1);
	add_enum_member(id,"LOADING_TITLE_PERFORMANCE_SAVES",	0XD9FF5230,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PART_ALREADY_INSTALLED",	0XDA15D7E5,	-1);
	add_enum_member(id,"OL_GAME_ROOM_PRIVATE_MSG",	0XDA2B33AF,	-1);
	add_enum_member(id,"SMS_DVD_COVER_3_SUBJECT",	0XDA32284E,	-1);
	add_enum_member(id,"DATE_ENTRY_TITLE",	0XDA3A368F,	-1);
	add_enum_member(id,"OL_CREATE_USER_SHARE_WITH_EA_PREMIUM",	0XDA3CDDBB,	-1);
	add_enum_member(id,"HELP_OL_OPTIONS_STANDARD_MENU",	0XDA850671,	-1);
	add_enum_member(id,"DECAL_ZONE_LEFTDOOR",	0XDA88B711,	-1);
	add_enum_member(id,"CAR_SELECT_CONFIRM_CHOOSE_CAR",	0XDA8F3E96,	-1);
	add_enum_member(id,"SMS_UNLOCK_40_SUBJECT",	0XDA9FAE0F,	-1);
	add_enum_member(id,"STRING_WORLD_MAP_SELECT",	0XDAAC95F9,	-1);
	add_enum_member(id,"LOADING_ONLINE_UNRANKED_FILTER",	0XDAB13DFD,	-1);
	add_enum_member(id,"PAINT_BRAKE",	0XDACD9FFF,	-1);
	add_enum_member(id,"DYNO_TIP_ECU",	0XDACF52C1,	-1);
	add_enum_member(id,"OLX_ACCOUNT_RECOVERY",	0XDAF58A4C,	-1);
	add_enum_member(id,"QR_BEST_TIME",	0XDB0C5EFD,	-1);
	add_enum_member(id,"UI_PAUSE_QUIT_TO_FREE_ROAM",	0XDB4E3C0D,	-1);
	add_enum_member(id,"SMS_UNLOCK_14_BODY",	0XDB71F10E,	-1);
	return id;
}

static Enums_3(id) {

	add_enum_member(id,"SKILL_EASY",	0XDBBB4E8F,	-1);
	add_enum_member(id,"SKILL_HARD",	0XDBBCF37C,	-1);
	add_enum_member(id,"OL_FEEDBACK_SCREAMING",	0XDBFF7776,	-1);
	add_enum_member(id,"HUD_GETAWAY_WON",	0XDC089C64,	-1);
	add_enum_member(id,"UI_CRIB_SPONSOR_THREE",	0XDC0D10C6,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS2_BODY",	0XDC188678,	-1);
	add_enum_member(id,"BUTTON_SHIFTUP",	0XDC1CD97D,	-1);
	add_enum_member(id,"NEON_YELLOW",	0XDC1DF72A,	-1);
	add_enum_member(id,"LABEL_COURSE",	0XDC2588EF,	-1);
	add_enum_member(id,"OL_FEEDBACK_GREAT_SESSION_DESC",	0XDC764D91,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH2_DEMO_SUBJECT",	0XDC92757B,	-1);
	add_enum_member(id,"QR_SPRINT",	0XDCB9F861,	-1);
	add_enum_member(id,"OL_MSG_ERROR_INIT_NET_ADAPTER",	0XDCBC9B42,	-1);
	add_enum_member(id,"HEADER_CRIB_PERFORMANCE",	0XDCCD75F8,	-1);
	add_enum_member(id,"MU_PAUSE_HIGHLIGHT_CAMERAS",	0XDCD8E7F0,	-1);
	add_enum_member(id,"OPT_EATRAX",	0XDCFB6B36,	-1);
	add_enum_member(id,"CHECKING_MEMORY_CARD_GC",	0XDD242BB5,	-1);
	add_enum_member(id,"PAINT_SPINNER",	0XDD3BEBF9,	-1);
	add_enum_member(id,"SMS_HEADER_RECEIVED",	0XDD43C1C0,	-1);
	add_enum_member(id,"LOADING_TITLE_DRIFT_RACING",	0XDD54F549,	-1);
	add_enum_member(id,"OL_PLAYER_STATUS_WAITING",	0XDD68EABB,	-1);
	add_enum_member(id,"FLAGS_THAILAND",	0XDD8927B0,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L2_YELLOW",	0XDD90E320,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ENGBRK_BODY",	0XDDA280CA,	-1);
	add_enum_member(id,"PAINT_SPOILER",	0XDDA5B898,	-1);
	add_enum_member(id,"SMS_UNLOCK_15_BODY",	0XDDC719AF,	-1);
	add_enum_member(id,"OPT_CONTROLLER_RUMBLE",	0XDDDC5E1B,	-1);
	add_enum_member(id,"CONTINUE",	0XDE02CF84,	-1);
	add_enum_member(id,"OL_END_NO_PLAYERS",	0XDE126E0B,	-1);
	add_enum_member(id,"BR_LARGE_DIAMETER_ROTORS",	0XDE28F2CF,	-1);
	add_enum_member(id,"QR_MODE_OPTIONS_TITLE",	0XDE3BCB92,	-1);
	add_enum_member(id,"LOADING_CAR_LOT",	0XDE4F2480,	-1);
	add_enum_member(id,"TEST_PAUSE_QUIT_TUNING",	0XDE5CDFB2,	-1);
	add_enum_member(id,"OL_SEARCHING_FOR_GAMES",	0XDE5FF65F,	-1);
	add_enum_member(id,"HELP_CRIB_SAVE",	0XDE67DAB5,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS3_BODY",	0XDE6DAF19,	-1);
	add_enum_member(id,"HELP_CARSPECIALTIES_SHOP_AUDIOCOMPONENTS_SELECT",	0XDE7ACEC2,	-1);
	add_enum_member(id,"STREETX_RUNNERUP",	0XDE9E588C,	-1);
	add_enum_member(id,"SMS_UNLOCK_50_SUBJECT",	0XDEAA3F30,	-1);
	add_enum_member(id,"TYPE_2_SKY_BLUE_GOLD",	0XDEAF63F4,	-1);
	add_enum_member(id,"CUSTOMIZE_HUD_CHOOSE_DIAL_COLOR",	0XDED7CA79,	-1);
	add_enum_member(id,"OLX_CREATE_GAMERTAG",	0XDF05EB0C,	-1);
	add_enum_member(id,"OPT_PLAYER_HANDLING",	0XDF06ED22,	-1);
	add_enum_member(id,"OPT_AUDIO_IG_MUSIC_VOL",	0XDF21EAC2,	-1);
	add_enum_member(id,"ACTIVATE_FILTER",	0XDF327E35,	-1);
	add_enum_member(id,"OL_MUST_BE_INVITE",	0XDF3A33D6,	-1);
	add_enum_member(id,"PERFORMANCE_CHOOSE_SPECIFIC",	0XDF3FD1D6,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAP_BODY",	0XDF4F296F,	-1);
	add_enum_member(id,"PC_KEYS_NITROUS_BOOST",	0XDF5AEF26,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GPS_BODY",	0XDF6D355B,	-1);
	add_enum_member(id,"OL_FEEDBACK_TYPE_RACIST",	0XDF6DAA24,	-1);
	add_enum_member(id,"OLX_MESSAGE_TOO_QUICK",	0XDF834843,	-1);
	add_enum_member(id,"CUSTOMIZE_TITLE_INTERIORS_SHOP",	0XDF86227A,	-1);
	add_enum_member(id,"SPONSOR_BONUSES",	0XDF9A44B1,	-1);
	add_enum_member(id,"LABEL_RANKING_CLASS",	0XDFDE01DD,	-1);
	add_enum_member(id,"HELP_QR_TRACK_OPTIONS",	0XDFF01629,	-1);
	add_enum_member(id,"KIT00_SKIRT",	0XDFF3E933,	-1);
	add_enum_member(id,"LABEL_DRIFT",	0XDFF5A477,	-1);
	add_enum_member(id,"UI_CRIB_SHOW_SPONSORS",	0XE0004602,	-1);
	add_enum_member(id,"SMS_UNLOCK_16_BODY",	0XE01C4250,	-1);
	add_enum_member(id,"STYLE_CLEANLAP",	0XE01FB0EF,	-1);
	add_enum_member(id,"HUD_GAIN_MULTIPLIER",	0XE03EF7A4,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BW_BODY",	0XE06389A0,	-1);
	add_enum_member(id,"RESUME_CAREER",	0XE072DB21,	-1);
	add_enum_member(id,"LABEL_MONTH",	0XE096F2E4,	-1);
	add_enum_member(id,"OL_PPPOE_NOT_CONNECTED",	0XE097DE5F,	-1);
	add_enum_member(id,"CSTATISTICS_PARTS_UNLOCKED",	0XE0AF0D6A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS4_BODY",	0XE0C2D7BA,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_AQUA",	0XE0E14FC0,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_BLUE",	0XE0E1C6E0,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_GOLD",	0XE0E4905E,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_LIME",	0XE0E734DF,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_PINK",	0XE0E9668A,	-1);
	add_enum_member(id,"ENTER_FRONTEND_DVD_SUBJECT",	0XE0F2E528,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_10",	0XE0F67EDC,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_11",	0XE0F67EDD,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_12",	0XE0F67EDE,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_13",	0XE0F67EDF,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_14",	0XE0F67EE0,	-1);
	add_enum_member(id,"CAR_SELECT_TRADE_CAR",	0XE0F68E78,	-1);
	add_enum_member(id,"LABEL_TRACK",	0XE1170A13,	-1);
	add_enum_member(id,"LOADING_TITLE_UNRANKED_FILTER",	0XE125CB3A,	-1);
	add_enum_member(id,"TOP_HOOD_MECHAMOTH",	0XE12E9030,	-1);
	add_enum_member(id,"HELP_CUSTOMIZE_CAR_SELECT",	0XE1385C1E,	-1);
	add_enum_member(id,"UI_SPONSOR_CAR_TRADE_IN",	0XE1417ACA,	-1);
	add_enum_member(id,"HEADER_CRIB_PARTS_MAIN",	0XE1497A54,	-1);
	add_enum_member(id,"OL_NET_ISP_FAIL",	0XE156E946,	-1);
	add_enum_member(id,"CONFIRM_QUIT_TO_MAIN_LOST_PROGRESS",	0XE15B558A,	-1);
	add_enum_member(id,"OL_MSG_PERSONA_SERVER_INVALID_CHARS",	0XE16C24E3,	-1);
	add_enum_member(id,"VISUAL_PART_REVERT_CARBON_FIBRE_KITS",	0XE170F115,	-1);
	add_enum_member(id,"PAINT_SHOP_MESSAGE_1",	0XE1807CC8,	-1);
	add_enum_member(id,"ROOF_STYLE17_OFFSET",	0XE21A1373,	-1);
	add_enum_member(id,"ENGAGE_STAGE_2_CIRCUIT_3",	0XE2217CAE,	-1);
	add_enum_member(id,"UI_CRIB_CHANGE_PARTS",	0XE22A1AAA,	-1);
	add_enum_member(id,"OL_EXISTING_ACCOUNT_TITLE",	0XE239B5B1,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS4_SUBJECT",	0XE23F35DC,	-1);
	add_enum_member(id,"TYPE_1_RIGHT_WHEEL_NOZZLE",	0XE2436BA3,	-1);
	add_enum_member(id,"MAILBOX_NAME_RACHEL",	0XE2442059,	-1);
	add_enum_member(id,"PC_NAV_READ_MESSAGE",	0XE24B4BD5,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AUTO_SUBJECT",	0XE25C980C,	-1);
	add_enum_member(id,"SMS_UNLOCK_17_BODY",	0XE2716AF1,	-1);
	add_enum_member(id,"OL_FRIEND_REQUEST_CANCELLED",	0XE2A74093,	-1);
	add_enum_member(id,"ORDINAL_SEVENTH",	0XE2AB0284,	-1);
	add_enum_member(id,"SMS_UNLOCK_60_SUBJECT",	0XE2B4D051,	-1);
	add_enum_member(id,"ENGAGE_TIPS_NITROUS",	0XE2C85958,	-1);
	add_enum_member(id,"AUDIO_COMP_NOS_0_LARGE",	0XE2D18DE7,	-1);
	add_enum_member(id,"SMS_UNLOCK_09_SUBJECT",	0XE2D56294,	-1);
	add_enum_member(id,"OL_GAME_ROOM_VIEW_CAR",	0XE2D5AD1E,	-1);
	add_enum_member(id,"DYNO_TIP_GEAR_RATIOS",	0XE2E98554,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SWAYBARS",	0XE2F13110,	-1);
	add_enum_member(id,"PRR_SPLIT_TIME_TITLE",	0XE2F9334D,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS5_BODY",	0XE318005B,	-1);
	add_enum_member(id,"MONTH_SEPTEMBER",	0XE32E4F8B,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MIRROR_BODY",	0XE32EE46C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MINIMAP_INSTRUCTION_DEMO_SUBJECT",	0XE3457DE3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF2_DEMO_SUBJECT",	0XE35120F6,	-1);
	add_enum_member(id,"AUDIO_COMP_NOS_0_SMALL",	0XE3568655,	-1);
	add_enum_member(id,"POST_RACE_TITLE",	0XE35CC4C0,	-1);
	add_enum_member(id,"OL_FEEDBACK_SCREAMING_DESC",	0XE3602354,	-1);
	add_enum_member(id,"LOADING_BODY_SHOP",	0XE3730C03,	-1);
	add_enum_member(id,"MESSAGE_10_BODY",	0XE3785C71,	-1);
	add_enum_member(id,"MESSAGE_10_FROM",	0XE37A9C17,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MINIMAP_LEGEND_BLURB_DEMO_BODY",	0XE3950AC4,	-1);
	add_enum_member(id,"OL_MSG_CANNOT_JOIN_GAME",	0XE3A9AB2A,	-1);
	add_enum_member(id,"CAR_NAME_CELICA",	0XE3D80DB5,	-1);
	add_enum_member(id,"STYLE_NEARMISS",	0XE3FA9491,	-1);
	add_enum_member(id,"ROOF_STYLE01_OFFSET",	0XE412A52C,	-1);
	add_enum_member(id,"STYLE_CLEANRACE",	0XE41917AD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MIRROR_SUBJECT",	0XE4215D4E,	-1);
	add_enum_member(id,"SMS_MINIMAP_LEGEND_BLURB_SUBJECT",	0XE445B20F,	-1);
	add_enum_member(id,"CUSTOMIZE_RIM_STYLES_TITLE",	0XE4504D8D,	-1);
	add_enum_member(id,"ASK_ENTER_DRAG_SUBJECT",	0XE45A7387,	-1);
	add_enum_member(id,"OL_XBOXISP_ENTER_PIN",	0XE45F7CE9,	-1);
	add_enum_member(id,"MESSAGE_06_SUBJECT",	0XE47AA818,	-1);
	add_enum_member(id,"SMS_UNLOCK_18_BODY",	0XE4C69392,	-1);
	add_enum_member(id,"TUNING_TYPE_REARGRIP",	0XE4EEBD70,	-1);
	add_enum_member(id,"OLX_ERROR_GAMERTAG_RESERVED",	0XE4FB2C61,	-1);
	add_enum_member(id,"LAN_LOBBY",	0XE50258B1,	-1);
	add_enum_member(id,"ENTER_UNIQUE_SHOP_MESSAGE_BODY",	0XE514579D,	-1);
	add_enum_member(id,"UC_PERF_SHOP_BODY",	0XE5240969,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_GO_TO_GARAGE_NOW_SUBJECT",	0XE52AB652,	-1);
	add_enum_member(id,"PC_NAV_CAR_STATS",	0XE530B5D9,	-1);
	add_enum_member(id,"LOADING_TITLE_THE_CAR_LOT_LIST",	0XE558711C,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS6_BODY",	0XE56D28FC,	-1);
	add_enum_member(id,"SAVELOAD_TITLE_PS2",	0XE590F5A3,	-1);
	add_enum_member(id,"HUD_400_METRE_TIME",	0XE591119D,	-1);
	add_enum_member(id,"HELP_OLX_OPTI_MATCH_GAME_ROOM",	0XE596DB16,	-1);
	add_enum_member(id,"OL_CANCEL_FRIEND_REQUEST",	0XE59BFB1E,	-1);
	add_enum_member(id,"PRR_TOURNAMENT_TITLE",	0XE59E8200,	-1);
	add_enum_member(id,"STRING_QUIT_GARAGE",	0XE5A0D45E,	-1);
	add_enum_member(id,"UI_KOREAN_MISSING_CHARACTERS",	0XE5AEF394,	-1);
	add_enum_member(id,"WORLD_CHALLENGE_SUBJECT_REWARD_MAGAZINE",	0XE5B2C887,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SAS_BODY",	0XE5BA928E,	-1);
	add_enum_member(id,"QR_TRACK_SELECT",	0XE5D63BB5,	-1);
	add_enum_member(id,"TYPE_3_SKY_BLUE_MAGENTA",	0XE6110E0C,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_CITY_LOCATIONS_BODY",	0XE6381123,	-1);
	add_enum_member(id,"OL_GAME_SESSION_CLOSED_UPDATING",	0XE644D9AA,	-1);
	add_enum_member(id,"PREVIEW",	0XE6492E21,	-1);
	add_enum_member(id,"TUNING_HARD",	0XE666E852,	-1);
	add_enum_member(id,"TUNING_HIGH",	0XE66708F3,	-1);
	add_enum_member(id,"TUNING_LESS",	0XE6692B0A,	-1);
	add_enum_member(id,"TUNING_MORE",	0XE669E1C6,	-1);
	add_enum_member(id,"TUNING_REAR",	0XE66C72FD,	-1);
	add_enum_member(id,"TUNING_SOFT",	0XE66D2A8F,	-1);
	add_enum_member(id,"TUNING_WEAK",	0XE66F30DB,	-1);
	add_enum_member(id,"HELP_OL_OPTIONS_ONLINE",	0XE683C971,	-1);
	add_enum_member(id,"MU_PAUSE_SPLIT_TIME",	0XE6ADC177,	-1);
	add_enum_member(id,"SC11_LINE_1",	0XE6C4524E,	-1);
	add_enum_member(id,"SC11_LINE_2",	0XE6C4524F,	-1);
	add_enum_member(id,"SC11_LINE_3",	0XE6C45250,	-1);
	add_enum_member(id,"SC11_LINE_4",	0XE6C45251,	-1);
	add_enum_member(id,"SMS_UNLOCK_19_SUBJECT",	0XE6DFF3B5,	-1);
	add_enum_member(id,"CSTATISTICS_URL_WINS",	0XE6E0BC3F,	-1);
	add_enum_member(id,"IND_GRAPHICS_BODY",	0XE6EE8197,	-1);
	add_enum_member(id,"SMS_UNLOCK_19_BODY",	0XE71BBC33,	-1);
	add_enum_member(id,"HELP_OL_PS2_EALOGIN",	0XE720F694,	-1);
	add_enum_member(id,"MU_PAUSE_HANDLING_DRIVER",	0XE7286E8D,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_AMT_BODY",	0XE7299C69,	-1);
	add_enum_member(id,"TYPE_1_RIGHT_HOOD_NOZZLE",	0XE72D5458,	-1);
	add_enum_member(id,"STRING_SPOILERS_NO_PAINT",	0XE7337E9D,	-1);
	add_enum_member(id,"OL_ERROR2_KICKING_PLAYER",	0XE7440760,	-1);
	add_enum_member(id,"PRS_KMH",	0XE74B7E13,	-1);
	add_enum_member(id,"PRS_MPH",	0XE74B86F8,	-1);
	add_enum_member(id,"CONFIRM_BACK_TO_WORLD_MAP_LOST_PROGRESS",	0XE761C8B8,	-1);
	add_enum_member(id,"OPT_AUDIO",	0XE76CD783,	-1);
	add_enum_member(id,"UI_SELECT_BRAND",	0XE7720E22,	-1);
	add_enum_member(id,"TI_STREET_PERFORMANCE_TIRES",	0XE77350A9,	-1);
	add_enum_member(id,"CAR_SELECT_STOCK",	0XE798A2F7,	-1);
	add_enum_member(id,"OPT_DEBUG",	0XE79A53F8,	-1);
	add_enum_member(id,"CAR_SELECT_TUNED",	0XE7AB43D3,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MINIMAP_LEGEND_BLURB_DEMO_SUBJECT",	0XE7CE04A6,	-1);
	add_enum_member(id,"FLAGS_ENGLAND",	0XE7CF5964,	-1);
	add_enum_member(id,"OL_MONTHLY_RANKINGS_ERROR",	0XE7E42CA9,	-1);
	add_enum_member(id,"DRAG_LEADER",	0XE8140569,	-1);
	add_enum_member(id,"SC08_LINE_1",	0XE814B374,	-1);
	add_enum_member(id,"SC08_LINE_2",	0XE814B375,	-1);
	add_enum_member(id,"SC08_LINE_3",	0XE814B376,	-1);
	add_enum_member(id,"HUD_FINISH_WIN",	0XE815BC6D,	-1);
	add_enum_member(id,"TYPE_2_SKY_BLUE_VIVID_RED",	0XE823C92A,	-1);
	add_enum_member(id,"OL_ERROR_NO_NETWORK_CONFIG",	0XE84D4EBD,	-1);
	add_enum_member(id,"LABEL_WIN_PERCENT",	0XE84E015C,	-1);
	add_enum_member(id,"OL_GAME_WAITING_FOR_RESULTS",	0XE863DD5C,	-1);
	add_enum_member(id,"UI_PAUSE_GAMEPLAY_OPTIONS_TITLE",	0XE8647E75,	-1);
	add_enum_member(id,"SMS_DVD_GENERIC_3_SUBJECT",	0XE86FAF6C,	-1);
	add_enum_member(id,"UI_CRIB_MAGAZINE_ONE",	0XE87DDAA8,	-1);
	add_enum_member(id,"UI_CRIB_MAGAZINE_TWO",	0XE87DF120,	-1);
	add_enum_member(id,"TR_LIGHT_FLYWHEEL",	0XE8867F7B,	-1);
	add_enum_member(id,"SPONSOR_INFO_EUROLITE",	0XE8936126,	-1);
	add_enum_member(id,"SPONSOR_INFO_NOS",	0XE8A652CD,	-1);
	add_enum_member(id,"PRS_SCORE",	0XE8AEBFAF,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_SPONSOR_X_1_SUBJECT",	0XE8D2625C,	-1);
	add_enum_member(id,"TUNING_CAT_DRIVETRAIN",	0XE8DA9E62,	-1);
	add_enum_member(id,"OPT_VIDEO",	0XE8E24508,	-1);
	add_enum_member(id,"OPT_WHEEL",	0XE8F3D566,	-1);
	add_enum_member(id,"DEMO_LEGAL_IP_TEXT",	0XE90F40A4,	-1);
	add_enum_member(id,"UI_CRIB_ASK_SAVE_DVD",	0XE9641A65,	-1);
	add_enum_member(id,"OL_MSG_PLAYER_IS_ALREADY_IN_GAME",	0XE973EA37,	-1);
	add_enum_member(id,"OL_XBL_DISCONNECT_PROMPT",	0XE99AA909,	-1);
	add_enum_member(id,"DEMO_PAINT_VINYLS",	0XE99BC583,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_PAINT_SELECT",	0XE9CD0764,	-1);
	add_enum_member(id,"EN_HIGH_FLOW_HEADERS",	0XE9F82643,	-1);
	add_enum_member(id,"PLAYER_TWO_PRESS_START_PS2",	0XEA171252,	-1);
	add_enum_member(id,"MAILBOX_NAME_UNLOCK",	0XEA33E5B6,	-1);
	add_enum_member(id,"TYPE_3_BOTH_WHEEL_NOZZLES",	0XEA3748E7,	-1);
	add_enum_member(id,"OL_COUNTDOWN_ABORTED",	0XEA6EA8DA,	-1);
	add_enum_member(id,"ICE_OPEN_CLOSE_HOOD",	0XEAA1D5DF,	-1);
	add_enum_member(id,"OL_MSG_INVITING_BUDDY_TO_PLAY",	0XEAB3F535,	-1);
	add_enum_member(id,"OLX_HELP_VIDEO_OPTIONS",	0XEAC5EE5B,	-1);
	add_enum_member(id,"HUD_FINISH_LAST",	0XEAC720D3,	-1);
	add_enum_member(id,"UI_ICE_HYDRAULICS",	0XEAC74624,	-1);
	add_enum_member(id,"SMS_UNLOCK_29_SUBJECT",	0XEAEA84D6,	-1);
	add_enum_member(id,"MU_PAUSE_MAP_TWO_D",	0XEAF13F17,	-1);
	add_enum_member(id,"OL_OPT_ALLOW_SAME_RANKING",	0XEAF89C18,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_CARBON_VINYL",	0XEB587F14,	-1);
	add_enum_member(id,"STYLE24_HOOD_CF",	0XEB779C67,	-1);
	add_enum_member(id,"QR_OPT_TRAFFIC_LEVEL",	0XEB9DFC09,	-1);
	add_enum_member(id,"HELP_SHOP_SELECT",	0XEBF23E40,	-1);
	add_enum_member(id,"OL_MSG_RETRIEVE_RANKINGS",	0XEC3905C1,	-1);
	add_enum_member(id,"STYLE_WALL_IMPACT",	0XEC42BA5C,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_SETTINGS_CHANGED",	0XEC7626D4,	-1);
	add_enum_member(id,"ADD_UNIQUE_VINYL_TO_INVOICE",	0XEC8616FD,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_RUN_RACE",	0XEC9488BB,	-1);
	add_enum_member(id,"PC_DEMO_FREE_ROAMING",	0XEC985DE3,	-1);
	add_enum_member(id,"CUST_CATEGORY_PERFORMANCE",	0XECA6B0CC,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SP_BODY",	0XECAD760A,	-1);
	add_enum_member(id,"CAR_SELECT_ONLINE_RANKED_CARS",	0XECD18034,	-1);
	add_enum_member(id,"BUTTON_STEER_CLUTCH",	0XECD20F7F,	-1);
	add_enum_member(id,"STYLE_INSANE_DRIFT",	0XECD64585,	-1);
	add_enum_member(id,"HUD_OT_GETAWAY_LOSE_THEM",	0XECE6C1D2,	-1);
	add_enum_member(id,"OL_DISCONNECT_PAUSED",	0XED167F64,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH2_BODY",	0XED1DD6D5,	-1);
	add_enum_member(id,"UI_MAIN_OPTIONS",	0XED1F0B2C,	-1);
	add_enum_member(id,"OL_EA_LOGIN_CREATE_NEW_ACCOUNT",	0XED21B47F,	-1);
	add_enum_member(id,"PERFORMANCE_RETURN_TO_STOCK",	0XED55C635,	-1);
	add_enum_member(id,"INSTALLED",	0XED56BE1F,	-1);
	add_enum_member(id,"HELP_OPTIONS_STANDARD_MENU",	0XED586157,	-1);
	add_enum_member(id,"UI_CAREER_CRIB_EVENT_STATUS",	0XED8CA191,	-1);
	add_enum_member(id,"OL_MSG_CANCELLING_INVITE_BUDDY_TO_PLAY",	0XED8E446B,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_VINYL_SELECT",	0XEDE5EB5A,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BW_TITLE",	0XEE176F14,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_VINYL_CARBON_KIT",	0XEE2C85BB,	-1);
	add_enum_member(id,"MU_PAUSE_JUMP_CAMERAS",	0XEE3EA0D4,	-1);
	add_enum_member(id,"OL_DISCONNECT_PROMPT",	0XEE46BDA4,	-1);
	add_enum_member(id,"SMS_UNREAD_MESSAGES",	0XEE64AB47,	-1);
	add_enum_member(id,"TITLE_SCREEN_START_PROMPT",	0XEEEB248E,	-1);
	add_enum_member(id,"SMS_UNLOCK_39_SUBJECT",	0XEEF515F7,	-1);
	add_enum_member(id,"UI_PAUSE_DISPLAY_OPTIONS_TITLE",	0XEF1BB23B,	-1);
	add_enum_member(id,"OL_XBOXISP_CONNECT",	0XEF1DCF4F,	-1);
	add_enum_member(id,"CSTATISTICS_STREET_X_WINS",	0XEF317ADA,	-1);
	add_enum_member(id,"TUNING_CAT_SUSPENSION",	0XEF3772C1,	-1);
	add_enum_member(id,"CONFIRM_APPLY_PAINT",	0XEF433CAD,	-1);
	add_enum_member(id,"PAINT_BASE",	0XEF5B4A75,	-1);
	add_enum_member(id,"PAINT_ROOF",	0XEF644B90,	-1);
	add_enum_member(id,"UI_ICE_HEADLIGHTS",	0XEF6679C9,	-1);
	add_enum_member(id,"OL_MSG_DISCONNECTED_FROM_SERVER",	0XEF6E7CDB,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH3_BODY",	0XEF72FF76,	-1);
	add_enum_member(id,"OL_HOST_QUIT_MESS",	0XEF7CEE30,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_1",	0XEF8B592C,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_2",	0XEF8B592D,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_3",	0XEF8B592E,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_4",	0XEF8B592F,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_5",	0XEF8B5930,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_6",	0XEF8B5931,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_7",	0XEF8B5932,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_8",	0XEF8B5933,	-1);
	add_enum_member(id,"ENGAGE_STREET_RANDOM_9",	0XEF8B5934,	-1);
	add_enum_member(id,"OL_MSG_UPDATE_AND_FILTER_FAILED",	0XEF94AFFD,	-1);
	add_enum_member(id,"TR_DIFFERENTIAL",	0XEF9D7CB1,	-1);
	add_enum_member(id,"SPLIT_SCREEN_MODE_SELECT",	0XEF9F780D,	-1);
	add_enum_member(id,"TUNING_TYPE_FRONT_SHOCKS",	0XEFDB2567,	-1);
	add_enum_member(id,"DELETE_TUNED_CAR",	0XEFDDC126,	-1);
	add_enum_member(id,"CS_CAREER_TITLE",	0XF0559D07,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BB_1_TITLE",	0XF094132F,	-1);
	add_enum_member(id,"ALL_LAP_SCORES",	0XF0952942,	-1);
	add_enum_member(id,"EC_HIGH_FLOW_FUEL_PUMP",	0XF0981AA9,	-1);
	add_enum_member(id,"CAR_NAME_HUMMER",	0XF0A3FEA2,	-1);
	add_enum_member(id,"SMS_CONFIRM_DELETE_MESSAGE",	0XF0A6E6B5,	-1);
	add_enum_member(id,"HELP_OL__PERFORMANCE_SHOP_PACKAGE",	0XF0AA1D96,	-1);
	add_enum_member(id,"PRS_METRES",	0XF0AEB103,	-1);
	add_enum_member(id,"EN_MILD_CAMSHAFT_AND_CAM_GEARS",	0XF0E53130,	-1);
	add_enum_member(id,"HUD_QUARTER_MILE_SPEED",	0XF1139659,	-1);
	add_enum_member(id,"LABEL_LOSSES",	0XF122E057,	-1);
	add_enum_member(id,"BR_STREET_COMPOUND_BRAKE_PADS",	0XF12A0E58,	-1);
	add_enum_member(id,"SMS_DVD_COVER_1_SUBJECT",	0XF139464C,	-1);
	add_enum_member(id,"SPONSOR_NOS",	0XF14900C2,	-1);
	add_enum_member(id,"STRING_MIRRORS_NO_PAINT",	0XF152BEFA,	-1);
	add_enum_member(id,"OLX_TEMPORARY",	0XF155AB34,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_H4_TITLE",	0XF16C1DF7,	-1);
	add_enum_member(id,"EA_ONLINE_TERMS_TITLE",	0XF170C0F4,	-1);
	add_enum_member(id,"SPRINT_RUNNERUP",	0XF18A58BD,	-1);
	add_enum_member(id,"OL_FULL_INBOX",	0XF1B41AEB,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_INSTALL_WORSE_PART",	0XF1BD1A8A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_GRAPH4_BODY",	0XF1C82817,	-1);
	add_enum_member(id,"FLAGS_SWEDEN",	0XF2029031,	-1);
	add_enum_member(id,"UI_ONLINE_XBOX_LIVE",	0XF20BF2F0,	-1);
	add_enum_member(id,"QR_TITLE_SPLIT_SCREEN",	0XF221D7ED,	-1);
	add_enum_member(id,"OLX_ERROR_ACCOUNT_NOT_CURRENT",	0XF22C5E19,	-1);
	add_enum_member(id,"OL_XBOXISP_MEMCARD_STATUS",	0XF25D3E61,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_JUMP_CAMS",	0XF26A5CBF,	-1);
	add_enum_member(id,"SMS_UNIQUE_STAGE_2_VISUAL_1_SUBJECT",	0XF294283E,	-1);
	add_enum_member(id,"OL_STRING_INVALID_CHEATER_PEOPLE",	0XF2AAB6B5,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_APPLY_PERF_PACAKGE",	0XF2D7FFAB,	-1);
	add_enum_member(id,"ENGAGE_TIPS_HIDDEN_BODY",	0XF2DC85BD,	-1);
	add_enum_member(id,"SMS_UNLOCK_49_SUBJECT",	0XF2FFA718,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_TURN_AUTOSAVE_ON",	0XF3568B86,	-1);
	add_enum_member(id,"HELP_OPTIONS_PLAYER",	0XF35B6D7F,	-1);
	add_enum_member(id,"OL_LOST_CONNECTION_ISP",	0XF3843955,	-1);
	add_enum_member(id,"LAN_QUIT_TO_MAIN_LABEL",	0XF39723A1,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_SS_BODY",	0XF3ACEFED,	-1);
	add_enum_member(id,"SOME_TEST_STRING_THAT_DOESNT_SUCK",	0XF3B2F3F9,	-1);
	add_enum_member(id,"HELP_OL_TRACK_OPTIONS",	0XF3D937E1,	-1);
	add_enum_member(id,"CAR_NAME_ECLIPSE",	0XF4242679,	-1);
	add_enum_member(id,"FLAG_DUOCOLOR_A",	0XF42DC0BF,	-1);
	add_enum_member(id,"FLAG_DUOCOLOR_B",	0XF42DC0C0,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_IT_BODY",	0XF43BB904,	-1);
	add_enum_member(id,"SPONSOR_NEUSPEED",	0XF460BA8B,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_1",	0XF4614B27,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_2",	0XF4614B28,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_3",	0XF4614B29,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_4",	0XF4614B2A,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_5",	0XF4614B2B,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_6",	0XF4614B2C,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_7",	0XF4614B2D,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_8",	0XF4614B2E,	-1);
	add_enum_member(id,"ENGAGE_SPON_CIRCUIT_RANDOM_9",	0XF4614B2F,	-1);
	add_enum_member(id,"OLX_XBOX_COMMUNICATOR",	0XF46A8B02,	-1);
	add_enum_member(id,"HELP_TRACK_SELECT",	0XF4AA6D5B,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_MINIMAP_ROTATE",	0XF4B00E99,	-1);
	add_enum_member(id,"HEADER_CRIB_SPECIALTIES",	0XF4B3B4FC,	-1);
	add_enum_member(id,"UI_CRIB_SPONSOR_CAR_PURCHASE_CONFIRM",	0XF4B8CAAB,	-1);
	add_enum_member(id,"HELP_OLX_NEWS",	0XF4D77756,	-1);
	add_enum_member(id,"HELP_OL_GAMEMODE_OPTIONS",	0XF4EA444B,	-1);
	add_enum_member(id,"PC_NAV_EAM_SEARCH",	0XF503F0FD,	-1);
	add_enum_member(id,"DYNO_TIP_RIDE_HEIGHT",	0XF51BD160,	-1);
	add_enum_member(id,"HELP_OL__GRAPHICS_SHOP_VINYL_PAINT_SELECT",	0XF51E40D5,	-1);
	add_enum_member(id,"SMS_SHOWCASE_GENERIC_4_SUBJECT",	0XF52FA9CC,	-1);
	add_enum_member(id,"OPT_ONLINE",	0XF535B856,	-1);
	add_enum_member(id,"CREATE_PROFILE_TITLE",	0XF54CC524,	-1);
	add_enum_member(id,"SMS_VISUAL_GENERIC_5_SUBJECT",	0XF5559D44,	-1);
	add_enum_member(id,"ENGAGE_TIPS_REWARDS_BODY",	0XF568DB09,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_TRUNK_LAYOUT",	0XF58C0CD9,	-1);
	add_enum_member(id,"SAVELOAD_CONFIRM_TURN_AUTOSAVE_ON_XBOX",	0XF5A12BC6,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_APPLY_PART",	0XF5AC2B2A,	-1);
	add_enum_member(id,"SAVELOAD_BOOTLOAD_SUCCESS",	0XF5AD01B9,	-1);
	add_enum_member(id,"OL_EA_LOGIN_CHEAT_DEVICE_DETECTED",	0XF5AD272B,	-1);
	add_enum_member(id,"ROOF_STYLE16_OFFSET",	0XF5D83E92,	-1);
	add_enum_member(id,"SPRINT_LEADER",	0XF600C82B,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_ST_BODY",	0XF602188E,	-1);
	add_enum_member(id,"METAL_PAINT",	0XF605116D,	-1);
	add_enum_member(id,"TEST_PAUSE_TEST_TRACK",	0XF62234EF,	-1);
	add_enum_member(id,"SMS_STEERING_CONTROLS_SUBJECT",	0XF62CE3F4,	-1);
	add_enum_member(id,"MU_PAUSE_RESUME_RACE",	0XF6601088,	-1);
	add_enum_member(id,"FE_REPAINT",	0XF667659C,	-1);
	add_enum_member(id,"ERROR_UNPLUGGED_CONTROLLER",	0XF673DAB6,	-1);
	add_enum_member(id,"OL_END_SERVER",	0XF68289C6,	-1);
	add_enum_member(id,"OL_GAME_FILTER_TITLE",	0XF6A08779,	-1);
	add_enum_member(id,"OL_MSG_CROSS_GAME_INVITE",	0XF6A6A950,	-1);
	add_enum_member(id,"OPT_PLAYER_DRIVE_CAMERA",	0XF6CCDC5F,	-1);
	add_enum_member(id,"HELP_OPTIONS_AUDIO",	0XF6D18624,	-1);
	add_enum_member(id,"OPT_AUDIO_MODE_PRO_LOGIC",	0XF6FAFF24,	-1);
	add_enum_member(id,"SMS_UNLOCK_59_SUBJECT",	0XF70A3839,	-1);
	add_enum_member(id,"MAGAZINE_SELECT_HEADER",	0XF7333312,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE_HOODS",	0XF7363420,	-1);
	add_enum_member(id,"UI_PAUSE_DEBUG_OPTIONS_TITLE",	0XF738C0CC,	-1);
	add_enum_member(id,"TYPE_1_LEFT_WHEEL_NOZZLE",	0XF73BC5D0,	-1);
	add_enum_member(id,"OL_REJECT_TERMS_POPUP",	0XF73CE6D3,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_MINIMAP_STATIC",	0XF75595F2,	-1);
	add_enum_member(id,"OPT_PLAYER",	0XF760EABE,	-1);
	add_enum_member(id,"SMS_FROM_PERF_SHOP",	0XF779C04A,	-1);
	add_enum_member(id,"PRR_DRAG_PERFORMANCE_TITLE",	0XF77E6402,	-1);
	add_enum_member(id,"V2_ALL_BUT_WHEEL_LEFT_PURGE",	0XF7BB4269,	-1);
	add_enum_member(id,"OL_NET_SELECT_BLURB",	0XF7CCC795,	-1);
	add_enum_member(id,"TYPE_2_SKY_BLUE_MAGENTA",	0XF7FAEBEB,	-1);
	add_enum_member(id,"VISUAL_PART_CARBON_FIBRE_TRUNK",	0XF8111A17,	-1);
	add_enum_member(id,"SMS_CAR_UNLOCK_1_SUBJECT",	0XF81E6031,	-1);
	add_enum_member(id,"PC_DEMO_MAIN_BODY",	0XF8224247,	-1);
	add_enum_member(id,"UI_SWITCH_TO_STATS",	0XF82DF37E,	-1);
	add_enum_member(id,"LOADING_GRAPHICS_SHOP_ALTERNATE",	0XF83505E5,	-1);
	add_enum_member(id,"HELP_OLX_OPTI_MATCH_AVAILABLE",	0XF84B1941,	-1);
	add_enum_member(id,"OPT_GAMEPLAY_SPEEDO_UNITS",	0XF86A6272,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L1_MED_BLACK",	0XF8798275,	-1);
	add_enum_member(id,"CAR_NAME_LANCER",	0XF88F18E9,	-1);
	add_enum_member(id,"BUTTON_NOT_USED",	0XF8B4303B,	-1);
	add_enum_member(id,"OL_ANSWER_FRIEND_REQUEST",	0XF8BCEE28,	-1);
	add_enum_member(id,"MAILBOX_NAME_GAME_TIPS",	0XF8CB19A3,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L1_MED_GREEN",	0XF8D75889,	-1);
	add_enum_member(id,"OL_NET_SELECT_TITLE",	0XF910D680,	-1);
	add_enum_member(id,"OPT_JOYPAD_CONFIG",	0XF91FBA4D,	-1);
	add_enum_member(id,"ENGAGE_TIPS_BS2_SUBJECT",	0XF94653DA,	-1);
	add_enum_member(id,"OLX_SIGN_IN_ERROR",	0XF9505DE1,	-1);
	add_enum_member(id,"SMS_LOC_GO_TO_GARAGE_SUBJECT",	0XF9617C3B,	-1);
	add_enum_member(id,"ENGAGE_TIPS_MAG_SUBJECT",	0XF9B92E68,	-1);
	add_enum_member(id,"BUTTON_ANALOG_SHIFT_UP_DOWN",	0XF9D402E4,	-1);
	add_enum_member(id,"PRS_FINISH_TIME",	0XF9D7F4C2,	-1);
	add_enum_member(id,"SMS_UNLOCK_07_SUBJECT",	0XF9DC8092,	-1);
	add_enum_member(id,"TYPE_1_UPPER_RIGHT_LOWER_LEFT_NOZZLES",	0XF9F24EDF,	-1);
	add_enum_member(id,"OL_RESTART_TIME",	0XFA14812C,	-1);
	add_enum_member(id,"LABEL_PLAYER",	0XFA37740B,	-1);
	add_enum_member(id,"AUDIO_COMP_EMPTY_LARGE",	0XFA444E97,	-1);
	add_enum_member(id,"KB_BTN_SPEC_CHARS",	0XFA4C00A9,	-1);
	add_enum_member(id,"LABEL_POINTS",	0XFA71F3BB,	-1);
	add_enum_member(id,"SC10_LINE_1",	0XFA827D6D,	-1);
	add_enum_member(id,"SC10_LINE_2",	0XFA827D6E,	-1);
	add_enum_member(id,"SC10_LINE_3",	0XFA827D6F,	-1);
	add_enum_member(id,"SC10_LINE_4",	0XFA827D70,	-1);
	add_enum_member(id,"SC10_LINE_5",	0XFA827D71,	-1);
	add_enum_member(id,"SC10_LINE_6",	0XFA827D72,	-1);
	add_enum_member(id,"SMS_ACCESS_MESSAGE_MANAGEMENT",	0XFAB08903,	-1);
	add_enum_member(id,"HELP_CRIB_CAR_SELECT",	0XFAB1B6BB,	-1);
	add_enum_member(id,"OL_RESTRICTION_EVEN",	0XFABFC6DC,	-1);
	add_enum_member(id,"OL_RESTRICTION_NONE",	0XFAC4999E,	-1);
	add_enum_member(id,"AUDIO_COMP_EMPTY_SMALL",	0XFAC94705,	-1);
	add_enum_member(id,"SMS_LOC_GO_TO_CAR_LOT_NOW_BODY",	0XFAD22C09,	-1);
	add_enum_member(id,"WT_FOAM_FILLED_INTERIOR",	0XFAF29146,	-1);
	add_enum_member(id,"HELP_OL_VIEW_CAR",	0XFB226531,	-1);
	add_enum_member(id,"LOADING_ONLINE_UNRANKED_TIERED",	0XFB559794,	-1);
	add_enum_member(id,"CAR_SELECT_TRADE_THIS_CAR",	0XFB75E78F,	-1);
	add_enum_member(id,"RIMS_BRAND_OZ",	0XFB7DFC68,	-1);
	add_enum_member(id,"MESSAGE_04_SUBJECT",	0XFB81C616,	-1);
	add_enum_member(id,"OL_GAME_ROOM_LEAVE",	0XFB94489B,	-1);
	add_enum_member(id,"CYCLE_NUMBERS",	0XFBB574EA,	-1);
	add_enum_member(id,"TUNING_TYPE_NOS_TORQUE",	0XFBBDD223,	-1);
	add_enum_member(id,"LAN_OL_LOBBY_FILTER",	0XFBD139F0,	-1);
	add_enum_member(id,"SC07_LINE_1",	0XFBD2DE93,	-1);
	add_enum_member(id,"SC07_LINE_2",	0XFBD2DE94,	-1);
	add_enum_member(id,"SC07_LINE_3",	0XFBD2DE95,	-1);
	add_enum_member(id,"OL_MESS_BLOCK_MAX",	0XFBE5AD60,	-1);
	add_enum_member(id,"HELP_CAREER_OPTIONS",	0XFBFCE084,	-1);
	add_enum_member(id,"OL_GAME_ROOM_READY",	0XFC00D963,	-1);
	add_enum_member(id,"LAP_TIME",	0XFC1B498A,	-1);
	add_enum_member(id,"ENGAGE_TIPS_ECU",	0XFC25C061,	-1);
	add_enum_member(id,"PLAYER_ONE_PRESS_START",	0XFC6731A6,	-1);
	add_enum_member(id,"OL_MSG_CONFIRM_QUIT_ONLINE_TUNING",	0XFC820867,	-1);
	add_enum_member(id,"SMS_LOC_TEXT_COAL_HARBOR_WEST_SUBJECT",	0XFC89EE1F,	-1);
	add_enum_member(id,"ENGAGE_TIPS_TRANS_BODY",	0XFC9B38B9,	-1);
	add_enum_member(id,"HELP_CARSPECIALTIES_SHOP_TRUNKLAYOUT_OR_COMPONENTS_SELECT",	0XFD036061,	-1);
	add_enum_member(id,"ENGAGE_TIPS_AIRPORT_BODY",	0XFD074292,	-1);
	add_enum_member(id,"RSTATISTICS_GO_TO_GARAGE",	0XFD123B59,	-1);
	add_enum_member(id,"OL_RACE_MODE",	0XFD143578,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_BLACK",	0XFD1A4DD5,	-1);
	add_enum_member(id,"DEMO_AUDIO_MUSIC_VOL",	0XFD1ED7C5,	-1);
	add_enum_member(id,"OPT_AUDIO_SFX_VOL",	0XFD487543,	-1);
	add_enum_member(id,"SPONSOR_INFO_PIAA",	0XFD71A998,	-1);
	add_enum_member(id,"SPONSOR_INFO_TOYO",	0XFD73F7C8,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_GRAPE",	0XFD781447,	-1);
	add_enum_member(id,"WINDSHIELD_TINT_L3_PEARL_GREEN",	0XFD7823E9,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_PIAA",	0XFD7DA212,	-1);
	add_enum_member(id,"SPONSOR_DETAILS_TOYO",	0XFD7FF042,	-1);
	add_enum_member(id,"OL_GAME_MODE",	0XFD81B9F7,	-1);
	add_enum_member(id,"OL_GAME_NAME",	0XFD820BF3,	-1);
	add_enum_member(id,"OL_GAME_TYPE",	0XFD85BCB4,	-1);
	add_enum_member(id,"OPT_ANIMATED_TEXTURE",	0XFD93D884,	-1);
	add_enum_member(id,"OLX_EXIT_GAME_TO_DASHBOARD",	0XFD9E06CD,	-1);
	add_enum_member(id,"ENGAGE_TIPS_PERF2_BODY",	0XFDB23750,	-1);
	add_enum_member(id,"SPONSOR_INFO_ALPINE",	0XFDC3BDB6,	-1);
	add_enum_member(id,"CUSTOMIZE_CONFIRM_PURCHASE_WORSE_PACKAGE",	0XFDDD0C23,	-1);
	add_enum_member(id,"SMS_UNLOCK_17_SUBJECT",	0XFDE711B3,	-1);
	add_enum_member(id,"DEMO_ONLINE_ICONS",	0XFE122D23,	-1);
	add_enum_member(id,"LABEL_RACERS",	0XFE1B7D1E,	-1);
	add_enum_member(id,"TUNING_TYPE_FRONT_SPRINGS",	0XFE22B6A2,	-1);
	add_enum_member(id,"OL_MSG_YOUR_VOICE_INVITE_HAS_BEEN_DECLINED",	0XFE38ABBC,	-1);
	add_enum_member(id,"OUTRUN_TIME_LIMIT",	0XFE407A18,	-1);
	add_enum_member(id,"MU_PAUSE_QUIT_RACE",	0XFE4B4CFA,	-1);
	add_enum_member(id,"OL_MSG_ACCOUNT_CREATE_NAME_REJECTED",	0XFE641264,	-1);
	add_enum_member(id,"TUNING_TYPE_TURBOTORQUE",	0XFE82FDE0,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_PM_BODY",	0XFEBF45E4,	-1);
	add_enum_member(id,"ENGAGE_TIPS_SLWIN_BODY",	0XFEC151FE,	-1);
	add_enum_member(id,"OPT_CONTROLLER_INSTRUCTIONS_STRING",	0XFED0D3DF,	-1);
	add_enum_member(id,"TUNING_TYPE_REAR_SWAY_BAR",	0XFF0CBFD5,	-1);
	add_enum_member(id,"BUTTON_MINI_MAP_LEGEND",	0XFF0E7232,	-1);
	add_enum_member(id,"PRR_HEADER_TEXT",	0XFF115FFF,	-1);
	add_enum_member(id,"OL_SENDING_FEEDBACK",	0XFF12B5C5,	-1);
	add_enum_member(id,"OL_MAX_PLAYERS",	0XFF1C4CFE,	-1);
	add_enum_member(id,"OL_RANKINGS_GAMES_COLUMN",	0XFF29E90F,	-1);
	add_enum_member(id,"SMS_DVD_GENERIC_1_SUBJECT",	0XFF76CD6A,	-1);
	add_enum_member(id,"MAGAZINE_SETUP_BB_1_BODY",	0XFF7E965B,	-1);
	add_enum_member(id,"VINYL_CATEGORY_STRIPESET",	0XFF8DE430,	-1);
	add_enum_member(id,"FLAG_THAILAND",	0XFF9056DD,	-1);
	add_enum_member(id,"OL_QUIT_STRING",	0XFF956AF2,	-1);
	add_enum_member(id,"OL_MSG_PASSWORDS_DONT_MATCH",	0XFF99D845,	-1);
	add_enum_member(id,"DECAL_ZONE_RIGHTPANEL",	0XFFA7D360,	-1);
	add_enum_member(id,"UI_CRIB_MAGAZINE_THREE",	0XFFB6955E,	-1);
	add_enum_member(id,"CC_CAR_SPECIALTY_BODY",	0XFFC7C2B4,	-1);
	add_enum_member(id,"TEST_PAUSE_CHOOSE_SETTING",	0XFFE08459,	-1);
	id = add_enum(-1,"UIMESSAGES",0x1100000);
	add_enum_member(id,"UIMSG_MOUSE_CLICK_PRIMARY",	0XC407210,	-1);
	add_enum_member(id,"UIMSG_CONTINUE_INSTALL_ETC",	0X406415E3,	-1);
	add_enum_member(id,"UIMSG_GO_LEFT",	0X9120409E,	-1);
	add_enum_member(id,"UIMSG_PCCONTROLLER_UPDATELABELS",	0X92B703B5,	-1);
	add_enum_member(id,"UIMSG_CURSOR_ACTIVITY",	0X9803F6E2,	-1);
	add_enum_member(id,"UIMSG_OL_PATCH_DIALOG_BUTTON_OK",	0XA8DE4CD2,	-1);
	add_enum_member(id,"UIMSG_GO_RIGHT",	0XB5971BF1,	-1);
	add_enum_member(id,"UIMSG_ICE_TEST_FROM_ICEMAIN",	0XC519BFC0,	-1);
	add_enum_member(id,"UIMSG_ICE_TEST_PCHELPBARBUTTON_PRESSED",	0XC539A4B0,	-1);
	add_enum_member(id,"UIMSG_FRAME_UPDATE",	0XC98356BA,	-1);
	add_enum_member(id,"UIMSG_TEXTBOX_ESCAPE_PRESSED",	0XC9D30688,	-1);
	add_enum_member(id,"UIMSG_TEXTBOX_CR_PRESSED",	0XDA5B8712,	-1);
	id = add_enum(-1,"TEXTBOXTYPE",0x1100000);
	add_enum_member(id,"TEXTBOX_CHAT0?",	0,	-1);
	set_enum_member_cmt(get_enum_member(id,0,0,-1),"unsure if this type actually exists",1);
	add_enum_member(id,"TEXTBOX_CHAT?",	0X3,	-1);
	add_enum_member(id,"TEXTBOX_EMAIL?",	0X4,	-1);
	add_enum_member(id,"TEXTBOX_PASSWORD",	0X5,	-1);
	add_enum_member(id,"TEXTBOX_PROFILENAME",	0X6,	-1);
	set_enum_member_cmt(get_enum_member(id,0X6,0,-1),"restricted to alphanum",1);
	id = add_enum(-1,"UI_ELEMENTS",0x1100000);
	add_enum_member(id,"UIELEM_DIM",	0X14245E2,	-1);
	set_enum_member_cmt(get_enum_member(id,0X14245E2,0,-1),"ui element in genericdialog that dims background",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_OL_ICON_GROUP",	0X2BAC0CEE,	-1);
	set_enum_member_cmt(get_enum_member(id,0X2BAC0CEE,0,-1),"for messenger stuff probs",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_CONTAINER_BG_AND_PLAYERNAME",	0X3B949CD0,	-1);
	add_enum_member(id,"UIELEM_EVENTHANDLER",	0X47FF4E7C,	-1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON1_BG",	0X62376D18,	-1);
	set_enum_member_cmt(get_enum_member(id,0X62376D18,0,-1),"bottom right",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON2_BG",	0X62376D19,	-1);
	set_enum_member_cmt(get_enum_member(id,0X62376D19,0,-1),"top right",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON3_BG",	0X62376D1A,	-1);
	set_enum_member_cmt(get_enum_member(id,0X62376D1A,0,-1),"top middle",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON4_BG",	0X62376D1B,	-1);
	set_enum_member_cmt(get_enum_member(id,0X62376D1B,0,-1),"top left",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON5_BG",	0X62376D1C,	-1);
	set_enum_member_cmt(get_enum_member(id,0X62376D1C,0,-1),"bottom middle",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON6_BG",	0X62376D1D,	-1);
	set_enum_member_cmt(get_enum_member(id,0X62376D1D,0,-1),"bottom left",1);
	add_enum_member(id,"UIELEM_DIALOG_BUTTON1_CONTAINER",	0XB8A7C6CC,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CC,0,-1),"left/top",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON1_LABEL",	0XB8A7C6CC,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CC,1,-1),"bottom right",1);
	add_enum_member(id,"UIELEM_DIALOG_BUTTON2_CONTAINER",	0XB8A7C6CD,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CD,0,-1),"right/bottom",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON2_LABEL",	0XB8A7C6CD,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CD,1,-1),"top right (top left when career world map?)",1);
	add_enum_member(id,"UIELEM_DIALOG_BUTTON3_CONTAINER",	0XB8A7C6CE,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CE,0,-1),"middle",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON3_LABEL",	0XB8A7C6CE,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CE,1,-1),"top middle",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON4_LABEL",	0XB8A7C6CF,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6CF,0,-1),"top left",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON5_LABEL",	0XB8A7C6D0,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6D0,0,-1),"bottom middle",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_BUTTON6_LABEL",	0XB8A7C6D1,	-1);
	set_enum_member_cmt(get_enum_member(id,0XB8A7C6D1,0,-1),"bottom left",1);
	add_enum_member(id,"UIELEM_DIALOG_BUTTON1_LABEL",	0XDA473D2F,	-1);
	set_enum_member_cmt(get_enum_member(id,0XDA473D2F,0,-1),"left/top",1);
	add_enum_member(id,"UIELEM_DIALOG_BUTTON2_LABEL",	0XDA473D30,	-1);
	set_enum_member_cmt(get_enum_member(id,0XDA473D30,0,-1),"right/bottom",1);
	add_enum_member(id,"UIELEM_DIALOG_BUTTON3_LABEL",	0XDA473D31,	-1);
	set_enum_member_cmt(get_enum_member(id,0XDA473D31,0,-1),"middle",1);
	add_enum_member(id,"UIELEM_PCHELPBAR_MONEY",	0XEB3A688A,	-1);
	add_enum_member(id,"UIELEM_Player_Name",	0XEB406FEC,	-1);
	id = add_enum(-1,"POOLFLAGS",0x1100000);
	add_enum_member(id,"POOL_FLAG_EXTENDABLE",	0X1,	-1);
	add_enum_member(id,"POOL_FLAG_DONT_ZERO_INIT",	0X2,	-1);
	set_enum_member_cmt(get_enum_member(id,0X2,0,-1),"used in {440D40} etc ||| ref",1);
	id = add_enum(-1,"PCHELPBARFLAGS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"BUTTON_PC_NAV_QUIT",	0X1,	0x1);
	set_enum_member_cmt(get_enum_member(id,0X1,0,0x1),"Quit Game",0);
	add_enum_member(id,"BUTTON_PC_NAV_LOGOFF",	0X2,	0x2);
	set_enum_member_cmt(get_enum_member(id,0X2,0,0x2),"Logoff",0);
	add_enum_member(id,"BUTTON_PC_NAV_CONTINUE",	0X4,	0x4);
	set_enum_member_cmt(get_enum_member(id,0X4,0,0x4),"Continue",0);
	add_enum_member(id,"BUTTON_PC_NAV_INSTALL_PART",	0X8,	0x8);
	set_enum_member_cmt(get_enum_member(id,0X8,0,0x8),"Install Part",0);
	add_enum_member(id,"BUTTON_PC_NAV_INSTALL_VINYL",	0X10,	0x10);
	set_enum_member_cmt(get_enum_member(id,0X10,0,0x10),"Install Vinyl",0);
	add_enum_member(id,"BUTTON_PC_NAV_INSTALL_DECAL",	0X20,	0x20);
	set_enum_member_cmt(get_enum_member(id,0X20,0,0x20),"Install Decal",0);
	add_enum_member(id,"BUTTON_PC_NAV_INSTALL_PACKAGE",	0X40,	0x40);
	set_enum_member_cmt(get_enum_member(id,0X40,0,0x40),"Install Package",0);
	add_enum_member(id,"BUTTON_PC_NAV_INSTALL_PAINT",	0X80,	0x80);
	set_enum_member_cmt(get_enum_member(id,0X80,0,0x80),"Install Paint",0);
	add_enum_member(id,"BUTTON_PC_NAV_READ_MESSAGE",	0X100,	0x100);
	set_enum_member_cmt(get_enum_member(id,0X100,0,0x100),"Read Message",0);
	add_enum_member(id,"BUTTON_CANCEL_CHANGES",	0X200,	0x200);
	set_enum_member_cmt(get_enum_member(id,0X200,0,0x200),"Cancel Changes",0);
	add_enum_member(id,"BUTTON_PC_NAV_BACK",	0X400,	0x400);
	set_enum_member_cmt(get_enum_member(id,0X400,0,0x400),"Back",0);
	add_enum_member(id,"BUTTON_DYNO_RESET_OR_PC_NAV_RESET_KEYS",	0X800,	0x800);
	set_enum_member_cmt(get_enum_member(id,0X800,0,0x800),"if {89E7E6} ||| ref\n{BUTTON_DYNO_RESET}: Reset to default ||| code\nelse\n{BUTTON_PC_NAV_RESET_KEYS}: Reset Keys To Default ||| code",0);
	add_enum_member(id,"BUTTON_PC_NAV_CUSTOMIZE",	0X1000,	0x1000);
	set_enum_member_cmt(get_enum_member(id,0X1000,0,0x1000),"Customize",0);
	add_enum_member(id,"BUTTON_PC_NAV_DELETE",	0X2000,	0x2000);
	set_enum_member_cmt(get_enum_member(id,0X2000,0,0x2000),"Delete",0);
	add_enum_member(id,"BUTTON_PC_NAV_EA_MESSENGER",	0X4000,	0x4000);
	set_enum_member_cmt(get_enum_member(id,0X4000,0,0x4000),"EA Messenger",0);
	add_enum_member(id,"LAYOUT_WORLDMAP_POSITION",	0X8000,	0x8000);
	set_enum_member_cmt(get_enum_member(id,0X8000,0,0x8000),"moves the button bar up slightly, three buttons, only has an effect when {10000} is set ||| code",0);
	add_enum_member(id,"LAYOUT_ONE_LINE_NO_BG",	0X10000,	0x10000);
	set_enum_member_cmt(get_enum_member(id,0X10000,0,0x10000),"used for pause options (display settings etc)/world map/pause menu",0);
	add_enum_member(id,"LAYOUT_PAUSEMENU_POSITION",	0X20000,	0x20000);
	set_enum_member_cmt(get_enum_member(id,0X20000,0,0x20000),"moves the button bar up, three buttons, only has an effect when {10000} is set ||| code",0);
	add_enum_member(id,"BUTTON_DELETE_TUNED_CAR",	0X40000,	0x40000);
	set_enum_member_cmt(get_enum_member(id,0X40000,0,0x40000),"Delete Tuned Car",0);
	add_enum_member(id,"BUTTON_ICE_TEST_NOS_PURGE",	0X80000,	0x80000);
	set_enum_member_cmt(get_enum_member(id,0X80000,0,0x80000),"Test N2O Purge",0);
	add_enum_member(id,"BUTTON_ICE_OPEN_CLOSE_HOOD",	0X100000,	0x100000);
	set_enum_member_cmt(get_enum_member(id,0X100000,0,0x100000),"Open/Close Hood",0);
	add_enum_member(id,"BUTTON_ICE_OPEN_CLOSE_DOORS",	0X200000,	0x200000);
	set_enum_member_cmt(get_enum_member(id,0X200000,0,0x200000),"Open/Close Doors",0);
	add_enum_member(id,"BUTTON_DYNO_TIP",	0X400000,	0x400000);
	set_enum_member_cmt(get_enum_member(id,0X400000,0,0x400000),"Tip",0);
	add_enum_member(id,"BUTTON_DECAL_COLOR_OR_FE_REPAINT",	0X800000,	0x800000);
	set_enum_member_cmt(get_enum_member(id,0X800000,0,0x800000),"if (in {UI_ChooseVinylLayer.fng}) ||| code\n{BUTTON_DECAL_COLOR}: Decal Color ||| code\nelse\n{BUTTON_FE_REPAINT}: Repaint ||| code",0);
	add_enum_member(id,"BUTTON_MU_PAUSE_RESTART",	0X1000000,	0x1000000);
	set_enum_member_cmt(get_enum_member(id,0X1000000,0,0x1000000),"Restart",0);
	add_enum_member(id,"BUTTON_STRING_WORLD_MAP",	0X2000000,	0x2000000);
	set_enum_member_cmt(get_enum_member(id,0X2000000,0,0x2000000),"Select Event",0);
	add_enum_member(id,"BUTTON_FILTER_EVENT_OFF",	0X4000000,	0x4000000);
	set_enum_member_cmt(get_enum_member(id,0X4000000,0,0x4000000),"Hide on World Map",0);
	add_enum_member(id,"BUTTON_FILTER_EVENT_ON",	0X8000000,	0x8000000);
	set_enum_member_cmt(get_enum_member(id,0X8000000,0,0x8000000),"Show on World Map",0);
	add_enum_member(id,"BUTTON_ACTIVATE_GPS",	0X10000000,	0x10000000);
	set_enum_member_cmt(get_enum_member(id,0X10000000,0,0x10000000),"Activate GPS",0);
	add_enum_member(id,"BUTTON_DEACTIVATE_GPS",	0X20000000,	0x20000000);
	set_enum_member_cmt(get_enum_member(id,0X20000000,0,0x20000000),"Deactivate GPS",0);
	add_enum_member(id,"BUTTON_OL_HOST_LAN_SERVER",	0X40000000,	0x40000000);
	set_enum_member_cmt(get_enum_member(id,0X40000000,0,0x40000000),"Host LAN Server",0);
	add_enum_member(id,"LAYOUT_RIGHT_POSITION",	0X80000000,	0x80000000);
	set_enum_member_cmt(get_enum_member(id,0X80000000,0,0x80000000),"puts buttons at the right, two buttons, only has an effect when {10000} is set ||| code",0);
	id = add_enum(-1,"SMS_TYPE",0x2200000);
	add_enum_member(id,"SMS_TYPE_END_OF_GAME",	0X1,	-1);
	set_enum_member_cmt(get_enum_member(id,0X1,0,-1),"1 msg:\n- SMS_END_OF_GAME_MESSAGE",1);
	add_enum_member(id,"SMS_TYPE_CAREER_START",	0X2,	-1);
	set_enum_member_cmt(get_enum_member(id,0X2,0,-1),"3 msgs:\n- SMS_LOC_GO_TO_GARAGE\n- SMS_LOC_EVENTS_OUT_THERE\n- SMS_GPS_INTRO",1);
	add_enum_member(id,"SMS_TYPE_INSTRUCTIONS",	0X3,	-1);
	set_enum_member_cmt(get_enum_member(id,0X3,0,-1),"4 msgs:\n- SMS_INSTRUCTION\n- SMS_MINIMAP_INTRUCTION\n- SMS_MINIMAP_LEGEND_BLURB\n- SMS_STEERING_CONTROLS",1);
	add_enum_member(id,"SMS_TYPE_OUTRUN_INFO",	0X4,	-1);
	set_enum_member_cmt(get_enum_member(id,0X4,0,-1),"1 msg:\n- SMS_OUTRUN_INFO",1);
	add_enum_member(id,"SMS_TYPE_OUTRUN_VICTORY",	0X5,	-1);
	set_enum_member_cmt(get_enum_member(id,0X5,0,-1),"1 msg:\n- SMS_OUTRUN_VICTORY",1);
	add_enum_member(id,"SMS_TYPE_OUTRUN_DEFEAT",	0X6,	-1);
	set_enum_member_cmt(get_enum_member(id,0X6,0,-1),"1 msg:\n- SMS_OUTRUN_DEFEAT",1);
	add_enum_member(id,"SMS_TYPE_7",	0X7,	-1);
	set_enum_member_cmt(get_enum_member(id,0X7,0,-1),"unknown, not present?",1);
	add_enum_member(id,"SMS_TYPE_UNLOCK_9",	0X9,	-1);
	set_enum_member_cmt(get_enum_member(id,0X9,0,-1),"5 part unlock msgs",1);
	add_enum_member(id,"SMS_TYPE_UNLOCK_10",	0XA,	-1);
	set_enum_member_cmt(get_enum_member(id,0XA,0,-1),"part unlock/car unlock msgs + 3 region unlock msgs:\n- SMS_LOC_TEXT_JACKSON_HEIGHTS\n- SMS_LOC_TEXT_COAL_HARBOR\n- SMS_LOC_TEXT_COAL_HARBOR_WEST",1);
	add_enum_member(id,"SMS_TYPE_UNLOCK_12",	0XC,	-1);
	set_enum_member_cmt(get_enum_member(id,0XC,0,-1),"part unlock + 1 region unlock + 1 angry Rachel + 1 sponsor msgs:\n- SMS_LOC_TEXT_BEACON_HILL\n- SMS_LOC_GO_TO_CAR_LOT_NOW\n- SMS_LOC_X_SPONSOR",1);
	add_enum_member(id,"SMS_TYPE_MAGS_AND_UNIQUES",	0XD,	-1);
	set_enum_member_cmt(get_enum_member(id,0XD,0,-1),"magazine/unqiue parts msgs\nTODO: where/how is this actually used? no refs yet, and all of these's subjects/bodies are non-existing language keys (may be formatted stuff, I believe I've seen these before...)",1);
	add_enum_member(id,"SMS_TYPE_DVD_COVER",	0XE,	-1);
	set_enum_member_cmt(get_enum_member(id,0XE,0,-1),"10 dvd cover msgs",1);
	add_enum_member(id,"SMS_TYPE_ENGAGE_TIP",	0XF,	-1);
	set_enum_member_cmt(get_enum_member(id,0XF,0,-1),"42 tip msgs, from the ingame markers you have to drive through",1);
	id = add_enum(-1,"MAILBOX",0x1100000);
	add_enum_member(id,"MAILBOX_INBOX",	0X1,	-1);
	add_enum_member(id,"MAILBOX_GAMETIPS",	0X2,	-1);
	add_enum_member(id,"MAILBOX_SPECIALEVENTS",	0X3,	-1);
	add_enum_member(id,"MAILBOX_RACHEL",	0X4,	-1);
	add_enum_member(id,"MAILBOX_UNLOCKS",	0X5,	-1);
	id = add_enum(-1,"MARKER_TYPE",0x1100000);
	add_enum_member(id,"MARKER_TYPE_BODYSHOP_AREA",	0X4,	-1);
	set_enum_member_cmt(get_enum_member(id,0X4,0,-1),"marks the entrance, ie where the road goes into private property, not the entrance aura itself.\nMaybe this is used as the \"discover\" hitmarker (ie the map icon will show from the first time you hit this marker)?",1);
	add_enum_member(id,"MARKER_TYPE_D",	0XD,	-1);
	add_enum_member(id,"MARKER_TYPE_E",	0XE,	-1);
	add_enum_member(id,"MARKER_TYPE_F",	0XF,	-1);
	add_enum_member(id,"MARKER_TYPE_NEIGHBOURHOOD",	0X11,	-1);
	add_enum_member(id,"MARKER_TYPE_ENGAGE_TIP",	0X12,	-1);
	add_enum_member(id,"MARKER_TYPE_MONEY_PICKUP",	0X13,	-1);
	id = add_enum(-1,"UIELEMENTFLAGS",0x1100000);
	set_enum_cmt(id,"for {struct UIElement}.{struct UIElement+1C} ||| ref,ref",0);
	set_enum_bf(id,1);
	add_enum_member(id,"HIDDEN",	0X1,	0x1);
	add_enum_member(id,"USE_CUSTOM_TEXT",	0X2,	0x2);
	set_enum_member_cmt(get_enum_member(id,0X2,0,0x2),"if present on a {struct UILabel}'s {struct UIElement+1C}, its {struct UILabel+64} will be used to display text instead of its {struct UILabel+60} ||| ref,ref,ref,ref",0);
	add_enum_member(id,"CLICKABLE?",	0X10,	0x10);
	add_enum_member(id,"UIELEMENTFLAGS_40",	0X40,	0x40);
	add_enum_member(id,"NEED_UPDATE_0",	0X400000,	0x400000);
	add_enum_member(id,"NEED_UPDATE_1",	0X1000000,	0x1000000);
	add_enum_member(id,"NEED_UPDATE_2",	0X2000000,	0x2000000);
	add_enum_member(id,"UIELEMENTFLAGS_10000000",	0X10000000,	0x10000000);
	id = add_enum(-1,"INVENTORY_CAR_FLAGS",0x1100000);
	set_enum_cmt(id,"used in many places ({struct InventoryCar}), but see also {7F444C} ||| ref,ref",0);
	set_enum_bf(id,1);
	add_enum_member(id,"IS_STOCK_CAR",	0X1,	0x1);
	add_enum_member(id,"IS_TUNED_CAR",	0X2,	0x2);
	add_enum_member(id,"IS_CAREER_CAR",	0X4,	0x4);
	add_enum_member(id,"IS_SPONSOR_CAR",	0X8,	0x8);
	add_enum_member(id,"IS_ONLINE_CAR",	0X10,	0x10);
	id = add_enum(-1,"CAR_CUSTOMIZE_MODE",0x2200000);
	add_enum_member(id,"CAR_CUSTOMIZE_MODE_FREEROAM",	0,	-1);
	set_enum_member_cmt(get_enum_member(id,0,0,-1),"{838990} defines which kind of shop you're entering ||| ref",0);
	add_enum_member(id,"CAR_CUSTOMIZE_MODE_CAREER_SWAP_PARTS",	0X1,	-1);
	add_enum_member(id,"CAR_CUSTOMIZE_MODE_RACE_CUSTOMIZE",	0X2,	-1);
	add_enum_member(id,"CAR_CUSTOMIZE_MODE_MAIN_MENU_CUSTOMIZE",	0X3,	-1);
	id = add_enum(-1,"CAREER_CUSTOMIZE_SHOP_TYPE",0x2200000);
	add_enum_member(id,"CAREER_CUSTOMIZE_SHOP_TYPE_GENERIC",	0,	-1);
	add_enum_member(id,"CAREER_CUSTOMIZE_SHOP_TYPE_PERFORMANCE",	0X1,	-1);
	add_enum_member(id,"CAREER_CUSTOMIZE_SHOP_TYPE_PAINT",	0X2,	-1);
	add_enum_member(id,"CAREER_CUSTOMIZE_SHOP_TYPE_ICE",	0X3,	-1);
	add_enum_member(id,"CAREER_CUSTOMIZE_SHOP_TYPE_UNIQUES",	0X6,	-1);
	id = add_enum(-1,"MACRO_IPPROTO",0x2220000);
	add_enum_member(id,"IPPROTO_IP",	0,	-1);
	id = add_enum(-1,"MACRO_IP",0x2220000);
	add_enum_member(id,"IP_OPTIONS",	0X1,	-1);
	add_enum_member(id,"IP_HDRINCL",	0X2,	-1);
	add_enum_member(id,"IP_TOS",	0X3,	-1);
	add_enum_member(id,"IP_TTL",	0X4,	-1);
	add_enum_member(id,"IP_MULTICAST_IF",	0X9,	-1);
	add_enum_member(id,"IP_MULTICAST_TTL",	0XA,	-1);
	add_enum_member(id,"IP_MULTICAST_LOOP",	0XB,	-1);
	add_enum_member(id,"IP_ADD_MEMBERSHIP",	0XC,	-1);
	add_enum_member(id,"IP_DROP_MEMBERSHIP",	0XD,	-1);
	add_enum_member(id,"IP_DONTFRAGMENT",	0XE,	-1);
	add_enum_member(id,"IP_ADD_SOURCE_MEMBERSHIP",	0XF,	-1);
	add_enum_member(id,"IP_DROP_SOURCE_MEMBERSHIP",	0X10,	-1);
	add_enum_member(id,"IP_BLOCK_SOURCE",	0X11,	-1);
	add_enum_member(id,"IP_UNBLOCK_SOURCE",	0X12,	-1);
	add_enum_member(id,"IP_PKTINFO",	0X13,	-1);
	add_enum_member(id,"IP_HOPLIMIT",	0X15,	-1);
	add_enum_member(id,"IP_RECEIVE_BROADCAST",	0X16,	-1);
	add_enum_member(id,"IP_RECVIF",	0X18,	-1);
	add_enum_member(id,"IP_RECVDSTADDR",	0X19,	-1);
	add_enum_member(id,"IP_IFLIST",	0X1C,	-1);
	add_enum_member(id,"IP_ADD_IFLIST",	0X1D,	-1);
	add_enum_member(id,"IP_DEL_IFLIST",	0X1E,	-1);
	add_enum_member(id,"IP_UNICAST_IF",	0X1F,	-1);
	add_enum_member(id,"IP_RTHDR",	0X20,	-1);
	add_enum_member(id,"IP_RECVRTHDR",	0X26,	-1);
	add_enum_member(id,"IP_TCLASS",	0X27,	-1);
	add_enum_member(id,"IP_RECVTCLASS",	0X28,	-1);
	add_enum_member(id,"IP_ORIGINAL_ARRIVAL_IF",	0X2F,	-1);
	add_enum_member(id,"IP_UNSPECIFIED_TYPE_OF_SERVICE",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_AF",0x2220000);
	add_enum_member(id,"AF_UNSPEC",	0,	-1);
	add_enum_member(id,"AF_UNIX",	0X1,	-1);
	add_enum_member(id,"AF_INET",	0X2,	-1);
	add_enum_member(id,"AF_IMPLINK",	0X3,	-1);
	add_enum_member(id,"AF_PUP",	0X4,	-1);
	add_enum_member(id,"AF_CHAOS",	0X5,	-1);
	add_enum_member(id,"AF_NS",	0X6,	-1);
	add_enum_member(id,"AF_IPX",	0X6,	-1);
	add_enum_member(id,"AF_ISO",	0X7,	-1);
	add_enum_member(id,"AF_OSI",	0X7,	-1);
	add_enum_member(id,"AF_ECMA",	0X8,	-1);
	add_enum_member(id,"AF_DATAKIT",	0X9,	-1);
	add_enum_member(id,"AF_CCITT",	0XA,	-1);
	add_enum_member(id,"AF_SNA",	0XB,	-1);
	add_enum_member(id,"AF_DECnet",	0XC,	-1);
	add_enum_member(id,"AF_DLI",	0XD,	-1);
	add_enum_member(id,"AF_LAT",	0XE,	-1);
	add_enum_member(id,"AF_HYLINK",	0XF,	-1);
	add_enum_member(id,"AF_APPLETALK",	0X10,	-1);
	add_enum_member(id,"AF_NETBIOS",	0X11,	-1);
	add_enum_member(id,"AF_VOICEVIEW",	0X12,	-1);
	add_enum_member(id,"AF_FIREFOX",	0X13,	-1);
	add_enum_member(id,"AF_UNKNOWN1",	0X14,	-1);
	add_enum_member(id,"AF_BAN",	0X15,	-1);
	add_enum_member(id,"AF_ATM",	0X16,	-1);
	add_enum_member(id,"AF_INET6",	0X17,	-1);
	add_enum_member(id,"AF_CLUSTER",	0X18,	-1);
	add_enum_member(id,"AF_12844",	0X19,	-1);
	add_enum_member(id,"AF_IRDA",	0X1A,	-1);
	add_enum_member(id,"AF_NETDES",	0X1C,	-1);
	add_enum_member(id,"AF_TCNPROCESS",	0X1D,	-1);
	add_enum_member(id,"AF_TCNMESSAGE",	0X1E,	-1);
	add_enum_member(id,"AF_ICLFXBM",	0X1F,	-1);
	add_enum_member(id,"AF_MAX",	0X20,	-1);
	id = add_enum(-1,"MACRO_SOCK",0x2220000);
	add_enum_member(id,"SOCK_STREAM",	0X1,	-1);
	add_enum_member(id,"SOCK_DGRAM",	0X2,	-1);
	add_enum_member(id,"SOCK_RAW",	0X3,	-1);
	add_enum_member(id,"SOCK_RDM",	0X4,	-1);
	add_enum_member(id,"SOCK_SEQPACKET",	0X5,	-1);
	id = add_enum(-1,"MACRO_SIO",0x2220000);
	add_enum_member(id,"SIO_ENABLE_CIRCULAR_QUEUEING",	0X28000002,	-1);
	add_enum_member(id,"SIO_FLUSH",	0X28000004,	-1);
	add_enum_member(id,"SIO_ADDRESS_LIST_CHANGE",	0X28000017,	-1);
	add_enum_member(id,"SIO_FIND_ROUTE",	0X48000003,	-1);
	add_enum_member(id,"SIO_GET_BROADCAST_ADDRESS",	0X48000005,	-1);
	add_enum_member(id,"SIO_ADDRESS_LIST_QUERY",	0X48000016,	-1);
	add_enum_member(id,"SIO_ASSOCIATE_HANDLE",	0X88000001,	-1);
	add_enum_member(id,"SIO_MULTIPOINT_LOOPBACK",	0X88000009,	-1);
	add_enum_member(id,"SIO_MULTICAST_SCOPE",	0X8800000A,	-1);
	add_enum_member(id,"SIO_SET_QOS",	0X8800000B,	-1);
	add_enum_member(id,"SIO_SET_GROUP_QOS",	0X8800000C,	-1);
	add_enum_member(id,"SIO_ROUTING_INTERFACE_CHANGE",	0X88000015,	-1);
	add_enum_member(id,"SIO_GET_EXTENSION_FUNCTION_POINTER",	0XC8000006,	-1);
	add_enum_member(id,"SIO_GET_QOS",	0XC8000007,	-1);
	add_enum_member(id,"SIO_GET_GROUP_QOS",	0XC8000008,	-1);
	add_enum_member(id,"SIO_TRANSLATE_HANDLE",	0XC800000D,	-1);
	add_enum_member(id,"SIO_ROUTING_INTERFACE_QUERY",	0XC8000014,	-1);
	id = add_enum(-1,"__MIDL___MIDL_itf_searchapi_0000_0025_0001",0x1100000);
	add_enum_member(id,"PRIORITY_LEVEL_FOREGROUND",	0,	-1);
	add_enum_member(id,"PRIORITY_LEVEL_HIGH",	0X1,	-1);
	add_enum_member(id,"PRIORITY_LEVEL_LOW",	0X2,	-1);
	add_enum_member(id,"PRIORITY_LEVEL_DEFAULT",	0X3,	-1);
	id = add_enum(-1,"JOYID",0x1100000);
	add_enum_member(id,"JOY_EVENT_NULL",	0,	-1);
	add_enum_member(id,"JOY_EVENT_TYPE_CHANGED",	0X1,	-1);
	add_enum_member(id,"JOY_EVENT_LIVE_TYPE_CHANGED",	0X2,	-1);
	add_enum_member(id,"JOY_EVENT_EXIT_DEMO_DISC",	0X3,	-1);
	add_enum_member(id,"JOY_EVENT_SCROLL_UP",	0X4,	-1);
	add_enum_member(id,"JOY_EVENT_SCROLL_DOWN",	0X5,	-1);
	add_enum_member(id,"JOY_EVENT_SCROLL_LEFT",	0X6,	-1);
	add_enum_member(id,"JOY_EVENT_SCROLL_RIGHT",	0X7,	-1);
	add_enum_member(id,"JOY_EVENT_START",	0X8,	-1);
	add_enum_member(id,"JOY_EVENT_SELECT",	0X9,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_SELECT",	0XA,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_CANCEL",	0XB,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_BACK",	0XC,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_HELP",	0XD,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_L1",	0XE,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_L2",	0XF,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_R1",	0X10,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_R2",	0X11,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_SQUARE",	0X12,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_ANALOG_LEFT",	0X13,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_ANALOG_RIGHT",	0X14,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_ANALOG_UP",	0X15,	-1);
	add_enum_member(id,"JOY_EVENT_MENU_ANALOG_DOWN",	0X16,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_MENU_ACTIVATE",	0X17,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_START",	0X1E,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_BUTTON0",	0X1F,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_BUTTON1",	0X20,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_BUTTON2",	0X21,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_BUTTON3",	0X22,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_LTRIGGER",	0X23,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_RTRIGGER",	0X24,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_SELECT",	0X25,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_SELECT_ALTERNATE",	0X26,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_CANCEL",	0X27,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_CANCEL_ALTERNATE",	0X28,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_HELP",	0X29,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_UP",	0X2A,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_DOWN",	0X2B,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_LEFT",	0X2C,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_RIGHT",	0X2D,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_UP_ALTERNATE",	0X2E,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_DOWN_ALTERNATE",	0X2F,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_LEFT_ALTERNATE",	0X30,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_PAD_RIGHT_ALTERNATE",	0X31,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_QUIT",	0X32,	-1);
	add_enum_member(id,"JOY_EVENT_FENG_RACEOPTIONS",	0X33,	-1);
	add_enum_member(id,"JOY_EVENT_SKIP_DEMO_MODE",	0X35,	-1);
	add_enum_member(id,"JOY_EVENT_MAIN_MENU_SELECT_TRANSMISSION",	0X36,	-1);
	add_enum_member(id,"JOY_EVENT_ANY",	0X37,	-1);
	add_enum_member(id,"JOY_EVENT_EXIT_EDIT_TEXT",	0X38,	-1);
	add_enum_member(id,"JOY_EVENT_CLEAR_TEXT",	0X39,	-1);
	add_enum_member(id,"JOY_EVENT_CANCEL_EDIT_TEXT",	0X3A,	-1);
	add_enum_member(id,"JOY_EVENT_DELETE_CHAR",	0X3B,	-1);
	add_enum_member(id,"JOY_EVENT_ROTATE_LETTER_UP",	0X3C,	-1);
	add_enum_member(id,"JOY_EVENT_ROTATE_LETTER_DOWN",	0X3D,	-1);
	add_enum_member(id,"JOY_EVENT_PREV_CHAR",	0X3E,	-1);
	add_enum_member(id,"JOY_EVENT_NEXT_CHAR",	0X3F,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_CHANGE_MODE",	0X40,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_UNLOCK",	0X41,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_LEFT",	0X42,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_RIGHT",	0X43,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_UP",	0X44,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_DOWN",	0X45,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_IN",	0X46,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_OUT",	0X47,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_LEFTRIGHT",	0X48,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_UPDOWN",	0X49,	-1);
	add_enum_member(id,"JOY_EVENT_CARSEL_ORBIT_INOUT",	0X4A,	-1);
	add_enum_member(id,"JOY_EVENT_CHANGE_DEBUG_CAMERA",	0X4C,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_ROTATE_RIGHT",	0X4D,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_ROTATE_LEFT",	0X4E,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_ROTATE_UP",	0X4F,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_ROTATE_DOWN",	0X50,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_CLOSER",	0X51,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_FARTHER",	0X52,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_NEXT_CAR",	0X53,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_PREV_CAR",	0X54,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_FOLLOW_CHOPPER",	0X55,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_TURN_LEFT",	0X56,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_TURN_RIGHT",	0X57,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_TURN_DOWN",	0X58,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_TURN_UP",	0X59,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_DOWN",	0X5A,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_UP",	0X5B,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_FWD",	0X5C,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_BACK",	0X5D,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_LEFT",	0X5E,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_MOVE_RIGHT",	0X5F,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_TURBO",	0X60,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_SUPER_TURBO",	0X61,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_SLOW",	0X62,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_FORWARD_BLINK",	0X63,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_BACKWARD_BLINK",	0X64,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_DROP_CAR",	0X65,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_ROTATE_LEFTRIGHT",	0X66,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_ROTATE_UPDOWN",	0X67,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_STRAFE_LEFTRIGHT",	0X68,	-1);
	add_enum_member(id,"JOY_EVENT_DEBUG_CAMERA_INOUT",	0X69,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_TURN_LEFTRIGHT",	0X6A,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_TURN_UPDOWN",	0X6B,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DRIVE_FORWARDBACKWARD",	0X6C,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DRIVE_LEFTRIGHT",	0X6D,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DRIVE_TURBO",	0X6E,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_MOVE_UP",	0X6F,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_MOVE_DOWN",	0X70,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DPAD_UP",	0X71,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DPAD_DOWN",	0X72,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DPAD_LEFT",	0X73,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_DPAD_RIGHT",	0X74,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_NEXT_ROUTE",	0X75,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_NEXT_POINT",	0X76,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_PREV_POINT",	0X77,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_RESET_POS",	0X78,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_EDIT_RIGHT_WIDTH",	0X79,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_EDIT_LEFT_WIDTH",	0X7A,	-1);
	add_enum_member(id,"JOY_EVENT_TRACKROUTE_EDITOR_EDIT_POSITION",	0X7B,	-1);
	add_enum_member(id,"JOY_EVENT_TOGGLE_TRACK_MARKER",	0X7C,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_POV_CHANGE",	0X7D,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_LOOKBACK",	0X7E,	-1);
	add_enum_member(id,"JOY_EVENT_ZONE_FREEZE",	0X7F,	-1);
	add_enum_member(id,"JOY_EVENT_ZONE_PREVIEW",	0X80,	-1);
	add_enum_member(id,"JOY_EVENT_ZONE_SLOMO",	0X81,	-1);
	add_enum_member(id,"JOY_EVENT_ZONE_WARP",	0X82,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_SKIP",	0X83,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_PAUSE",	0X84,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_PREVIOUS_MARKER",	0X85,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_NEXT_MARKER",	0X86,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_PLAYBACK_SPEED",	0X87,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_CAMERA_ANGLE",	0X88,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_CAMERA_TARGET",	0X89,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_HELP",	0X8A,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_HIDE_TIMELINE",	0X8B,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_MARK_DEMO",	0X8C,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_TEST_DEMO",	0X8D,	-1);
	add_enum_member(id,"JOY_EVENT_REPLAY_ERASE_DEMO",	0X8E,	-1);
	add_enum_member(id,"JOY_EVENT_STEER",	0X8F,	-1);
	add_enum_member(id,"JOY_EVENT_STEER_ANALOG",	0X90,	-1);
	add_enum_member(id,"JOY_EVENT_THROTTLE",	0X91,	-1);
	add_enum_member(id,"JOY_EVENT_THROTTLE_ANALOG",	0X92,	-1);
	add_enum_member(id,"JOY_EVENT_THROTTLE_ANALOG_ALTERNATE",	0X93,	-1);
	add_enum_member(id,"JOY_EVENT_BRAKE",	0X94,	-1);
	add_enum_member(id,"JOY_EVENT_BRAKE_ANALOG",	0X95,	-1);
	add_enum_member(id,"JOY_EVENT_BRAKE_ANALOG_ALTERNATE",	0X96,	-1);
	add_enum_member(id,"JOY_EVENT_REVERSE",	0X97,	-1);
	add_enum_member(id,"JOY_EVENT_REVERSE_ANALOG",	0X98,	-1);
	add_enum_member(id,"JOY_EVENT_EBRAKE",	0X99,	-1);
	add_enum_member(id,"JOY_EVENT_EBRAKE_ANALOG",	0X9A,	-1);
	add_enum_member(id,"JOY_EVENT_SHIFTUP",	0X9B,	-1);
	add_enum_member(id,"JOY_EVENT_SHIFTDOWN",	0X9C,	-1);
	add_enum_member(id,"JOY_EVENT_SHIFTUP_ALTERNATE",	0X9D,	-1);
	add_enum_member(id,"JOY_EVENT_SHIFTDOWN_ALTERNATE",	0X9E,	-1);
	add_enum_member(id,"JOY_EVENT_DISENGAGE_CLUTCH",	0X9F,	-1);
	add_enum_member(id,"JOY_EVENT_DISENGAGE_CLUTCH_ANALOG",	0XA0,	-1);
	add_enum_member(id,"JOY_EVENT_RESET_CAR",	0XA1,	-1);
	add_enum_member(id,"JOY_EVENT_HONK_HORN",	0XA2,	-1);
	add_enum_member(id,"JOY_EVENT_NITRO_BOOST",	0XA3,	-1);
	set_enum_member_cmt(get_enum_member(id,0XA3,0,-1),"normal NITRO key",0);
	add_enum_member(id,"JOY_EVENT_NITRO_BOOST_ALTERNATE",	0XA4,	-1);
	set_enum_member_cmt(get_enum_member(id,0XA4,0,-1),"pressing this key will use up all NITRO until it's depleted",0);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_BOUNCE",	0XA5,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_BOUNCE_SELX",	0XA6,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_BOUNCE_SELY",	0XA7,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_BOUNCE_ANALOG_UD",	0XA8,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_BOUNCE_ANALOG_LR",	0XA9,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_PRESSURIZE",	0XAA,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_PRESSURIZE_SELX",	0XAB,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_PRESSURIZE_SELY",	0XAC,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_PRESSURIZE_ANALOG_UD",	0XAD,	-1);
	add_enum_member(id,"JOY_EVENT_HYDRAULIC_PRESSURIZE_ANALOG_LR",	0XAE,	-1);
	add_enum_member(id,"JOY_EVENT_REQUEST_ROADBLOCK",	0XAF,	-1);
	add_enum_member(id,"JOY_EVENT_REQUEST_HELICOPTER",	0XB0,	-1);
	add_enum_member(id,"JOY_EVENT_FIRE_ROCKET",	0XB1,	-1);
	add_enum_member(id,"JOY_EVENT_AIM_ROCKET_LR",	0XB2,	-1);
	add_enum_member(id,"JOY_EVENT_AIM_ROCKET_UD",	0XB3,	-1);
	add_enum_member(id,"JOY_EVENT_AIM_ZOOM",	0XB4,	-1);
	add_enum_member(id,"JOY_EVENT_AUTO_PILOT",	0XB5,	-1);
	add_enum_member(id,"JOY_EVENT_DRAG_RACE_CHANGE_LANE_LEFT",	0XB8,	-1);
	add_enum_member(id,"JOY_EVENT_DRAG_RACE_CHANGE_LANE_RIGHT",	0XB9,	-1);
	add_enum_member(id,"JOY_EVENT_DRAG_RACE_CHANGE_LANE_LEFT_ANALOG",	0XBA,	-1);
	add_enum_member(id,"JOY_EVENT_DRAG_RACE_CHANGE_LANE_RIGHT_ANALOG",	0XBB,	-1);
	add_enum_member(id,"JOY_EVENT_CYCLE_HUD",	0XBC,	-1);
	add_enum_member(id,"JOY_EVENT_PAUSE",	0XBD,	-1);
	add_enum_member(id,"JOY_EVENT_SKIP",	0XBE,	-1);
	add_enum_member(id,"JOY_EVENT_REQUEST_ENGAGE_INFO",	0XBF,	-1);
	add_enum_member(id,"JOY_EVENT_REQUEST_WORLD_MAP",	0XC0,	-1);
	add_enum_member(id,"JOY_EVENT_REQUEST_LEGEND",	0XC1,	-1);
	set_enum_member_cmt(get_enum_member(id,0XC1,0,-1),"opens career status screen in career",1);
	add_enum_member(id,"JOY_EVENT_REQUEST_MESSAGE_SYSTEM",	0XC2,	-1);
	set_enum_member_cmt(get_enum_member(id,0XC2,0,-1),"sms stuff",1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_HOLD_LEFT",	0XD3,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_HOLD_RIGHT",	0XD4,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_UP",	0XD5,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_DOWN",	0XD6,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_LEFT",	0XD7,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_RIGHT",	0XD8,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_HELP",	0XD9,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_HIDE",	0XDA,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_SCREENSHOT",	0XDB,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_COPY",	0XDD,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_UNDO",	0XDE,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_PLAY_ANIMATION",	0XDF,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_PASTE",	0XE0,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_INSERT",	0XE1,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_SELECT",	0XE2,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_CANCEL",	0XE3,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_ALT_1",	0XE4,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_CLIP_IN",	0XE5,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_CLIP_OUT",	0XE6,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_ZOOM_IN",	0XE7,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_ZOOM_OUT",	0XE8,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_APERTURE_INC",	0XE9,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_APERTURE_DEC",	0XEA,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_LETTERBOX_IN",	0XEB,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_LETTERBOX_OUT",	0XEC,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_IN",	0XED,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_OUT",	0XEE,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_UP",	0XEF,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_DOWN",	0XF0,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_TILT",	0XF1,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_SPIN",	0XF2,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_LEFT_RIGHT",	0XF3,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_BUBBLE_BACK_FORTH",	0XF4,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_SHAKE_MAG",	0XF5,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_SHAKE_FRQ",	0XF6,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_SHUTTLE_LEFT_RIGHT",	0XF7,	-1);
	add_enum_member(id,"JOY_EVENT_CAMERA_EDITOR_SHUTTLE_SPEED",	0XF8,	-1);
	id = add_enum(-1,"CHEATTYPE",0x1100000);
	add_enum_member(id,"CHEAT_TYPE_VISUALS",	0X1,	-1);
	add_enum_member(id,"CHEAT_TYPE_PERFORMANCE",	0X2,	-1);
	add_enum_member(id,"CHEAT_TYPE_CAREER",	0X5,	-1);
	add_enum_member(id,"CHEAT_TYPE_SPONSOR_CAR",	0X6,	-1);
	set_enum_member_cmt(get_enum_member(id,0X6,0,-1),"sponsor cars show up when doing quick race",1);
	add_enum_member(id,"CHEAT_TYPE_SPONSOR_VINYL",	0X7,	-1);
	id = add_enum(-1,"RACE_TYPE",0x2200000);
	add_enum_member(id,"RACE_TYPE_CIRCUIT",	0,	-1);
	add_enum_member(id,"RACE_TYPE_SPRINT",	0X1,	-1);
	add_enum_member(id,"RACE_TYPE_STREETX",	0X2,	-1);
	add_enum_member(id,"RACE_TYPE_URL",	0X3,	-1);
	add_enum_member(id,"RACE_TYPE_DRAG",	0X4,	-1);
	add_enum_member(id,"RACE_TYPE_DRIFT",	0X5,	-1);
	id = add_enum(-1,"COMMON_HASHES",0x1100000);
	add_enum_member(id,"DDAY_EVENT_A",	0XDD60E402,	-1);
	id = add_enum(-1,"MENU_STATE",0x1100000);
	set_enum_cmt(id,"seems to be used mostly to determine what actions are available and what menu to return to when exiting specific screens",0);
	add_enum_member(id,"MENU_STATE_CAREER_MENU",	0X1,	-1);
	add_enum_member(id,"MENU_STATE_MAIN_MENU",	0X2,	-1);
	add_enum_member(id,"MENU_STATE_2P_SPLITSCREEN",	0X4,	-1);
	set_enum_member_cmt(get_enum_member(id,0X4,0,-1),"used at 4EED32",0);
	set_enum_member_cmt(get_enum_member(id,0X4,0,-1),"probably only applicable when in quick race, but difficult to test",1);
	add_enum_member(id,"MENU_STATE_ONLINE_MAIN_MENU",	0X8,	-1);
	add_enum_member(id,"MENU_STATE_OPTIONS",	0X10,	-1);
	add_enum_member(id,"MENU_STATE_CAR_CUSTOMIZE",	0X20,	-1);
	add_enum_member(id,"MENU_STATE_CUSTOMIZE_FROM_ONLINE_MAIN_MENU",	0X100,	-1);
	add_enum_member(id,"MENU_STATE_LAN_MAIN_MENU",	0X200,	-1);
	id = add_enum(-1,"D3DFORMAT",0x2200000);
	set_enum_bf(id,1);
	id = add_enum(-1,"D3DLIGHTTYPE",0x1100000);
	add_enum_member(id,"D3DLIGHT_POINT",	0X1,	-1);
	add_enum_member(id,"D3DLIGHT_SPOT",	0X2,	-1);
	add_enum_member(id,"D3DLIGHT_DIRECTIONAL",	0X3,	-1);
	add_enum_member(id,"D3DLIGHT_PARALLELPOINT",	0X4,	-1);
	add_enum_member(id,"D3DLIGHT_FORCE_DWORD",	0X7FFFFFFF,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
	id = Enums_1(id);
	id = Enums_2(id);
	id = Enums_3(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("_SCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	id = get_struc_id("CPPEH_RECORD");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "EXCEPTION_POINTERS *");
	SetType(get_member_id(id, 0x8), "struct _EH3_EXCEPTION_REGISTRATION");
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	SetType(get_member_id(id, 0x0), "struct _EH3_EXCEPTION_REGISTRATION *");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "PSCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x1), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x2), "LONGLONG");
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("_WIN32_FIND_DATAA");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "FILETIME");
	SetType(get_member_id(id, 0xC), "FILETIME");
	SetType(get_member_id(id, 0x14), "FILETIME");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "CHAR[260]");
	SetType(get_member_id(id, 0x130), "CHAR[14]");
	id = get_struc_id("FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("PROCESSENTRY32");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "ULONG_PTR");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "LONG");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "CHAR[260]");
	id = get_struc_id("tagRECT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "LONG");
	id = get_struc_id("tagMSG");
	SetType(get_member_id(id, 0x0), "HWND");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "WPARAM");
	SetType(get_member_id(id, 0xC), "LPARAM");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "POINT");
	id = get_struc_id("POINT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("_OSVERSIONINFOA");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "CHAR[128]");
	id = get_struc_id("tagPOINT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("tagPAINTSTRUCT");
	SetType(get_member_id(id, 0x0), "HDC");
	SetType(get_member_id(id, 0x4), "BOOL");
	SetType(get_member_id(id, 0x8), "RECT");
	SetType(get_member_id(id, 0x18), "BOOL");
	SetType(get_member_id(id, 0x1C), "BOOL");
	SetType(get_member_id(id, 0x20), "BYTE[32]");
	id = get_struc_id("RECT");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "LONG");
	id = get_struc_id("PAINTSTRUCT");
	SetType(get_member_id(id, 0x0), "HDC");
	SetType(get_member_id(id, 0x4), "BOOL");
	SetType(get_member_id(id, 0x8), "RECT");
	SetType(get_member_id(id, 0x18), "BOOL");
	SetType(get_member_id(id, 0x1C), "BOOL");
	SetType(get_member_id(id, 0x20), "BYTE[32]");
	id = get_struc_id("IID");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int8[8]");
	id = get_struc_id("WNDCLASSEXA");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "WNDPROC");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "HINSTANCE");
	SetType(get_member_id(id, 0x18), "HICON");
	SetType(get_member_id(id, 0x1C), "HCURSOR");
	SetType(get_member_id(id, 0x20), "HBRUSH");
	SetType(get_member_id(id, 0x24), "LPCSTR");
	SetType(get_member_id(id, 0x28), "LPCSTR");
	SetType(get_member_id(id, 0x2C), "HICON");
	id = get_struc_id("_SYSTEM_INFO");
	SetType(get_member_id(id, 0x0), "union _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "LPVOID");
	SetType(get_member_id(id, 0xC), "LPVOID");
	SetType(get_member_id(id, 0x10), "DWORD_PTR");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "WORD");
	SetType(get_member_id(id, 0x22), "WORD");
	id = get_struc_id("_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "struct _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9");
	id = get_struc_id("_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	SetType(get_member_id(id, 0x0), "PRTL_CRITICAL_SECTION_DEBUG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "HANDLE");
	SetType(get_member_id(id, 0x10), "HANDLE");
	SetType(get_member_id(id, 0x14), "ULONG_PTR");
	id = get_struc_id("MSG");
	SetType(get_member_id(id, 0x0), "HWND");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "WPARAM");
	SetType(get_member_id(id, 0xC), "LPARAM");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "POINT");
	id = get_struc_id("timecaps_tag");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "UINT");
	id = get_struc_id("_NCB");
	SetType(get_member_id(id, 0x0), "UCHAR");
	SetType(get_member_id(id, 0x1), "UCHAR");
	SetType(get_member_id(id, 0x2), "UCHAR");
	SetType(get_member_id(id, 0x3), "UCHAR");
	SetType(get_member_id(id, 0x4), "PUCHAR");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "UCHAR[16]");
	SetType(get_member_id(id, 0x1A), "UCHAR[16]");
	SetType(get_member_id(id, 0x2A), "UCHAR");
	SetType(get_member_id(id, 0x2B), "UCHAR");
	SetType(get_member_id(id, 0x2C), "void (__stdcall *)(_NCB *)");
	SetType(get_member_id(id, 0x30), "UCHAR");
	SetType(get_member_id(id, 0x31), "UCHAR");
	SetType(get_member_id(id, 0x32), "UCHAR[10]");
	SetType(get_member_id(id, 0x3C), "HANDLE");
	id = get_struc_id("WSAData");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "char[257]");
	SetType(get_member_id(id, 0x105), "char[129]");
	SetType(get_member_id(id, 0x186), "unsigned __int16");
	SetType(get_member_id(id, 0x188), "unsigned __int16");
	SetType(get_member_id(id, 0x18C), "char *");
	id = get_struc_id("fd_set");
	SetType(get_member_id(id, 0x0), "u_int");
	SetType(get_member_id(id, 0x4), "SOCKET[64]");
	id = get_struc_id("timeval");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("sockaddr");
	SetType(get_member_id(id, 0x0), "u_short");
	SetType(get_member_id(id, 0x2), "CHAR[14]");
	id = get_struc_id("lineextensionid_tag");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("varstring_tag");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	id = get_struc_id("linecallparams_tag");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "LINEDIALPARAMS");
	SetType(get_member_id(id, 0x30), "DWORD");
	SetType(get_member_id(id, 0x34), "DWORD");
	SetType(get_member_id(id, 0x38), "DWORD");
	SetType(get_member_id(id, 0x3C), "DWORD");
	SetType(get_member_id(id, 0x40), "DWORD");
	SetType(get_member_id(id, 0x44), "DWORD");
	SetType(get_member_id(id, 0x48), "DWORD");
	SetType(get_member_id(id, 0x4C), "DWORD");
	SetType(get_member_id(id, 0x50), "DWORD");
	SetType(get_member_id(id, 0x54), "DWORD");
	SetType(get_member_id(id, 0x58), "DWORD");
	SetType(get_member_id(id, 0x5C), "DWORD");
	SetType(get_member_id(id, 0x60), "DWORD");
	SetType(get_member_id(id, 0x64), "DWORD");
	SetType(get_member_id(id, 0x68), "DWORD");
	SetType(get_member_id(id, 0x6C), "DWORD");
	SetType(get_member_id(id, 0x70), "DWORD");
	SetType(get_member_id(id, 0x74), "DWORD");
	SetType(get_member_id(id, 0x78), "DWORD");
	SetType(get_member_id(id, 0x7C), "DWORD");
	SetType(get_member_id(id, 0x80), "DWORD");
	SetType(get_member_id(id, 0x84), "DWORD");
	SetType(get_member_id(id, 0x88), "DWORD");
	SetType(get_member_id(id, 0x8C), "DWORD");
	SetType(get_member_id(id, 0x90), "DWORD");
	SetType(get_member_id(id, 0x94), "DWORD");
	SetType(get_member_id(id, 0x98), "DWORD");
	SetType(get_member_id(id, 0x9C), "DWORD");
	SetType(get_member_id(id, 0xA0), "DWORD");
	SetType(get_member_id(id, 0xA4), "DWORD");
	SetType(get_member_id(id, 0xA8), "DWORD");
	SetType(get_member_id(id, 0xAC), "DWORD");
	SetType(get_member_id(id, 0xB0), "DWORD");
	id = get_struc_id("LINEDIALPARAMS");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("linedevcaps_tag");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "DWORD");
	SetType(get_member_id(id, 0x34), "DWORD");
	SetType(get_member_id(id, 0x38), "DWORD");
	SetType(get_member_id(id, 0x3C), "DWORD");
	SetType(get_member_id(id, 0x40), "DWORD");
	SetType(get_member_id(id, 0x44), "DWORD");
	SetType(get_member_id(id, 0x48), "DWORD");
	SetType(get_member_id(id, 0x4C), "DWORD");
	SetType(get_member_id(id, 0x50), "DWORD");
	SetType(get_member_id(id, 0x54), "DWORD");
	SetType(get_member_id(id, 0x58), "DWORD");
	SetType(get_member_id(id, 0x5C), "DWORD");
	SetType(get_member_id(id, 0x60), "DWORD");
	SetType(get_member_id(id, 0x64), "DWORD");
	SetType(get_member_id(id, 0x68), "DWORD");
	SetType(get_member_id(id, 0x6C), "DWORD");
	SetType(get_member_id(id, 0x70), "DWORD");
	SetType(get_member_id(id, 0x74), "DWORD");
	SetType(get_member_id(id, 0x78), "DWORD");
	SetType(get_member_id(id, 0x7C), "DWORD");
	SetType(get_member_id(id, 0x80), "DWORD");
	SetType(get_member_id(id, 0x84), "DWORD");
	SetType(get_member_id(id, 0x88), "DWORD");
	SetType(get_member_id(id, 0x8C), "DWORD");
	SetType(get_member_id(id, 0x90), "DWORD");
	SetType(get_member_id(id, 0x94), "DWORD");
	SetType(get_member_id(id, 0x98), "DWORD");
	SetType(get_member_id(id, 0x9C), "LINEDIALPARAMS");
	SetType(get_member_id(id, 0xAC), "LINEDIALPARAMS");
	SetType(get_member_id(id, 0xBC), "LINEDIALPARAMS");
	SetType(get_member_id(id, 0xCC), "DWORD");
	SetType(get_member_id(id, 0xD0), "DWORD");
	SetType(get_member_id(id, 0xD4), "DWORD");
	SetType(get_member_id(id, 0xD8), "DWORD");
	SetType(get_member_id(id, 0xDC), "DWORD");
	SetType(get_member_id(id, 0xE0), "DWORD");
	SetType(get_member_id(id, 0xE4), "DWORD");
	SetType(get_member_id(id, 0xE8), "DWORD");
	SetType(get_member_id(id, 0xEC), "DWORD");
	SetType(get_member_id(id, 0xF0), "DWORD");
	SetType(get_member_id(id, 0xF4), "DWORD");
	SetType(get_member_id(id, 0xF8), "DWORD");
	SetType(get_member_id(id, 0xFC), "GUID");
	SetType(get_member_id(id, 0x10C), "DWORD");
	SetType(get_member_id(id, 0x110), "GUID");
	SetType(get_member_id(id, 0x120), "DWORD");
	id = get_struc_id("GUID");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int8[8]");
	id = get_struc_id("_COMMTIMEOUTS");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	id = get_struc_id("_COMMCONFIG");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "DCB");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "WCHAR[1]");
	id = get_struc_id("DCB");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "__int32");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	SetType(get_member_id(id, 0x10), "WORD");
	SetType(get_member_id(id, 0x12), "BYTE");
	SetType(get_member_id(id, 0x13), "BYTE");
	SetType(get_member_id(id, 0x14), "BYTE");
	SetType(get_member_id(id, 0x15), "char");
	SetType(get_member_id(id, 0x16), "char");
	SetType(get_member_id(id, 0x17), "char");
	SetType(get_member_id(id, 0x18), "char");
	SetType(get_member_id(id, 0x19), "char");
	SetType(get_member_id(id, 0x1A), "WORD");
	id = get_struc_id("_FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("_TIME_ZONE_INFORMATION");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "WCHAR[32]");
	SetType(get_member_id(id, 0x44), "SYSTEMTIME");
	SetType(get_member_id(id, 0x54), "LONG");
	SetType(get_member_id(id, 0x58), "WCHAR[32]");
	SetType(get_member_id(id, 0x98), "SYSTEMTIME");
	SetType(get_member_id(id, 0xA8), "LONG");
	id = get_struc_id("SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	id = get_struc_id("_SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	id = get_struc_id("_SECURITY_ATTRIBUTES");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPVOID");
	SetType(get_member_id(id, 0x8), "BOOL");
	id = get_struc_id("_STARTUPINFOA");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPSTR");
	SetType(get_member_id(id, 0x8), "LPSTR");
	SetType(get_member_id(id, 0xC), "LPSTR");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "WORD");
	SetType(get_member_id(id, 0x32), "WORD");
	SetType(get_member_id(id, 0x34), "LPBYTE");
	SetType(get_member_id(id, 0x38), "HANDLE");
	SetType(get_member_id(id, 0x3C), "HANDLE");
	SetType(get_member_id(id, 0x40), "HANDLE");
	id = get_struc_id("_cpinfo");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "BYTE[2]");
	SetType(get_member_id(id, 0x6), "BYTE[12]");
	id = get_struc_id("_MEMORY_BASIC_INFORMATION");
	SetType(get_member_id(id, 0x0), "PVOID");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "SIZE_T");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	id = get_struc_id("_ThrowInfo");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "PMFN");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)()");
	SetType(get_member_id(id, 0xC), "CatchableTypeArray *");
	id = get_struc_id("FILE");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "char *");
	id = get_struc_id("_diskfree_t");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	id = get_struc_id("tm");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	id = get_struc_id("FuncInfoV1");
	id = get_struc_id("UnwindMapEntry");
	id = get_struc_id("TryBlockMapEntry");
	id = get_struc_id("HandlerType");
	id = get_struc_id("ULARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	SetType(get_member_id(id, 0x1), "_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	SetType(get_member_id(id, 0x2), "ULONGLONG");
	id = get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("FuncInfo_V1");
	id = get_struc_id("DIDATAFORMAT");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "LPDIOBJECTDATAFORMAT");
	id = get_struc_id("_SYSTEM_INFO::$058745E319A46827965CDE7F37238831");
	SetType(get_member_id(id, 0x0), "DWORD");
	id = get_struc_id("_SYSTEM_INFO::$058745E319A46827965CDE7F37238831::$AA04DEB0C6383F89F13D312A174572A9");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	id = get_struc_id("_DCB");
	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9");
	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2");
	id = get_struc_id("CCarHeadlightsPosition");
	id = get_struc_id("LanguageData");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("LanguageFileData");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "struct LanguageFontData *");
	id = get_struc_id("LanguageStruct7F6DE8");
	SetType(get_member_id(id, 0x0), "unsigned int");
	id = get_struc_id("LanguageFontData");
	id = get_struc_id("LoadedLanguage");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char **");
	SetType(get_member_id(id, 0x8), "struct LanguageTableEntry *");
	SetType(get_member_id(id, 0xC), "struct LanguageConversionTable *");
	id = get_struc_id("LanguageTableEntry");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("LanguageConversionTable");
	id = get_struc_id("BinSectionHeader");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("BinSection");
	SetType(get_member_id(id, 0x8), "char[1]");
	id = get_struc_id("BinDataLanguage39000");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "struct LanguageTable *");
	SetType(get_member_id(id, 0xC), "char **");
	id = get_struc_id("PoolLink");
	SetType(get_member_id(id, 0x0), "struct PoolLink *");
	SetType(get_member_id(id, 0x4), "struct PoolLink *");
	id = get_struc_id("PoolControl");
	SetType(get_member_id(id, 0x0), "int");
	id = get_struc_id("Pool");
	SetType(get_member_id(id, 0x8), "struct Pool *");
	SetType(get_member_id(id, 0xC), "char *");
	SetType(get_member_id(id, 0x10), "struct PoolEntry *");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	id = get_struc_id("bPNodeSlotPoolEntry");
	SetType(get_member_id(id, 0x8), "char *");
	id = get_struc_id("PoolEntry");
	SetType(get_member_id(id, 0x0), "struct PoolEntry *");
	SetType(get_member_id(id, 0x4), "struct PoolEntry *");
	id = get_struc_id("LevelSorterPoolEntry");
	id = get_struc_id("bFileSystemPoolEntry");
	SetType(get_member_id(id, 0x1C), "char[100]");
	id = get_struc_id("ResourceFileSlotPoolEntry");
	SetType(get_member_id(id, 0xD0), "void (__cdecl *)(int)");
	id = get_struc_id("QueuedFileSlotPoolEntry");
	SetType(get_member_id(id, 0x5C), "void (__cdecl *)(void *)");
	SetType(get_member_id(id, 0x60), "struct ResourceFileSlotPoolEntry *");
	id = get_struc_id("structFor440AD0");
	id = get_struc_id("substructFor440AD0");
	id = get_struc_id("substructFor440AD0common");
	SetType(get_member_id(id, 0x8), "struct substructFor440AD0 *");
	id = get_struc_id("substructFor440AD0type1");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "struct substructFor440AD0type4 *");
	id = get_struc_id("substructFor440AD0type2");
	SetType(get_member_id(id, 0x8), "struct substructFor440AD0 *");
	id = get_struc_id("substructFor440AD0type3");
	SetType(get_member_id(id, 0x8), "struct substructFor440AD0 *");
	id = get_struc_id("substructFor440AD0type4");
	id = get_struc_id("substructFor440AD0type5");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "struct substructFor440AD0type1 *");
	id = get_struc_id("substructFor440AD0type6");
	SetType(get_member_id(id, 0x8), "struct substructFor440AD0type5 *");
	id = get_struc_id("D3DVSHADERCAPS2_0");
	id = get_struc_id("DialogInfo");
	SetType(get_member_id(id, 0x0), "char[768]");
	SetType(get_member_id(id, 0x300), "unsigned int");
	SetType(get_member_id(id, 0x304), "unsigned int");
	SetType(get_member_id(id, 0x308), "unsigned int");
	SetType(get_member_id(id, 0x30C), "unsigned int");
	SetType(get_member_id(id, 0x310), "unsigned int");
	SetType(get_member_id(id, 0x314), "unsigned int");
	SetType(get_member_id(id, 0x318), "unsigned int");
	SetType(get_member_id(id, 0x320), "char *");
	SetType(get_member_id(id, 0x324), "char *");
	SetType(get_member_id(id, 0x328), "int");
	SetType(get_member_id(id, 0x32D), "char");
	SetType(get_member_id(id, 0x32F), "char");
	SetType(get_member_id(id, 0x330), "unsigned int");
	SetType(get_member_id(id, 0x334), "int");
	id = get_struc_id("FNGData");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "struct FNGObject *(__cdecl *)(struct FNGShowData *)");
	SetType(get_member_id(id, 0x8), "enum LANGUAGE_LABELS");
	SetType(get_member_id(id, 0xC), "enum PCHELPBARFLAGS");
	id = get_struc_id("FNGShowData");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "struct FNGInfo *");
	SetType(get_member_id(id, 0x8), "enum LANGUAGE_LABELS");
	SetType(get_member_id(id, 0xC), "unsigned int");
	id = get_struc_id("FNGShowData_Arg2");
	SetType(get_member_id(id, 0x1), "struct SmsMessage *");
	SetType(get_member_id(id, 0x2), "struct DialogInfo *");
	id = get_struc_id("FNGInfo");
	SetType(get_member_id(id, 0xC), "char *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x30), "struct UIData_field8 *");
	SetType(get_member_id(id, 0x3C), "struct FNGInfo *");
	SetType(get_member_id(id, 0x40), "struct SomethingUIImpl *");
	SetType(get_member_id(id, 0x4C), "struct UIElement *");
	id = get_struc_id("CheatScreenData");
	SetType(get_member_id(id, 0x0), "void **");
	SetType(get_member_id(id, 0x4), "char");
	SetType(get_member_id(id, 0x5), "char");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "struct CheatData *");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "char[32]");
	SetType(get_member_id(id, 0x34), "int");
	id = get_struc_id("CheatData");
	SetType(get_member_id(id, 0x20), "enum CHEATTYPE");
	SetType(get_member_id(id, 0x24), "unsigned int");
	SetType(get_member_id(id, 0x30), "char");
	SetType(get_member_id(id, 0x32), "char");
	id = get_struc_id("CriticalSectionWrapper_2");
	id = get_struc_id("CRealCoreDrive");
	SetType(get_member_id(id, 0x0), "struct CRealCoreDrive_vtable *");
	id = get_struc_id("MouseData");
	SetType(get_member_id(id, 0x0), "struct IDirectInputDevice8 *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "char");
	SetType(get_member_id(id, 0x21), "char");
	SetType(get_member_id(id, 0x22), "char");
	SetType(get_member_id(id, 0x23), "char");
	SetType(get_member_id(id, 0x24), "char");
	SetType(get_member_id(id, 0x25), "char");
	SetType(get_member_id(id, 0x26), "char");
	SetType(get_member_id(id, 0x27), "char");
	SetType(get_member_id(id, 0x28), "char");
	SetType(get_member_id(id, 0x29), "char");
	id = get_struc_id("QWORDSTRUCT");
	id = get_struc_id("IDirectInputDevice8");
	SetType(get_member_id(id, 0x0), "struct IDirectInputDevice8vtable *");
	id = get_struc_id("IDirectInputDevice8vtable");
	SetType(get_member_id(id, 0x8), "HRESULT (__stdcall *)(struct IDirectInputDevice8 *this)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(struct IDirectInputDevice8 *this)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(struct IDirectInputDevice8 *this)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(struct IDirectInputDevice8 *this, DWORD cbData, LPVOID lpvData)");
	SetType(get_member_id(id, 0x2C), "HRESULT (__stdcall *)(struct IDirectInputDevice8 *this, int *dataformat)");
	SetType(get_member_id(id, 0x34), "HRESULT (__stdcall *)(struct IDirectInputDevice8 *this, HWND hwnd, DWORD dwFlags)");
	id = get_struc_id("D3DPSHADERCAPS2_0");
	id = get_struc_id("D3DCAPS9");
	id = get_struc_id("D3DADAPTER_IDENTIFIER9");
	SetType(get_member_id(id, 0x0), "char[512]");
	SetType(get_member_id(id, 0x200), "char[512]");
	SetType(get_member_id(id, 0x400), "char[32]");
	id = get_struc_id("IDirectInput8");
	SetType(get_member_id(id, 0x0), "struct IDirectInput8vtable *");
	id = get_struc_id("IDirectInput8vtable");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(struct IDirectInput8vtable *this, int rguid, int *lplpDirectInputDevice, void *pUnkOuter)");
	id = get_struc_id("D3DPRESENT_PARAMETERS");
	id = get_struc_id("WIN32_FIND_DATAA");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "FILETIME");
	SetType(get_member_id(id, 0xC), "FILETIME");
	SetType(get_member_id(id, 0x14), "FILETIME");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "CHAR[260]");
	SetType(get_member_id(id, 0x130), "CHAR[14]");
	SetType(get_member_id(id, 0x13E), "char[2]");
	id = get_struc_id("DIMOUSESTATE2");
	id = get_struc_id("tagSIZE");
	SetType(get_member_id(id, 0x0), "LONG");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("_SIZE");
	id = get_struc_id("_POS");
	id = get_struc_id("CRealCoreDrive_vtable");
	SetType(get_member_id(id, 0xC), "int (__thiscall *)(struct CRealCoreDrive *this, LPCSTR lpFileName, int unk1, int ptrUnk2)");
	SetType(get_member_id(id, 0x10), "int (__thiscall *)(struct CRealCoreDrive *this, HANDLE handle)");
	SetType(get_member_id(id, 0x14), "int (__thiscall *)(struct CRealCoreDrive *this, HANDLE hFile, char *lpBuffer, int nNumberOfBytesToRead, int unkunused1, int unkunused2)");
	SetType(get_member_id(id, 0x18), "int (__thiscall *)(struct CRealCoreDrive *this, HANDLE hFile, char *lpBuffer, int nNumberOfBytesToWrite)");
	SetType(get_member_id(id, 0x1C), "int (__thiscall *)(struct CRealCoreDrive *this, HANDLE hFile, int lDistanceToMove, int distanceHighDwordUnused, int moveMethod, int unkunused1, int unkunused2)");
	SetType(get_member_id(id, 0x20), "int (__thiscall *)(struct CRealCoreDrive *this, HANDLE hFile, char *lpBuffer, int nNumberOfBytesToWrite)");
	SetType(get_member_id(id, 0x24), "int (__thiscall *)(struct CRealCoreDrive *this, int unkunused)");
	SetType(get_member_id(id, 0x28), "int (__thiscall *)(struct CRealCoreDrive *this, char *lpFileName)");
	SetType(get_member_id(id, 0x2C), "int (__thiscall *)(struct CRealCoreDrive *this)");
	SetType(get_member_id(id, 0x30), "int (__thiscall *)(struct CRealCoreDrive *this)");
	SetType(get_member_id(id, 0x34), "void (__thiscall *)(struct CRealCoreDrive *this)");
	id = get_struc_id("struct6F79AFesi");
	SetType(get_member_id(id, 0x0), "struct struct6F79AFesi *");
	SetType(get_member_id(id, 0x80), "struct CRealCoreDrive *");
	id = get_struc_id("struct6F7195");
	id = get_struc_id("struct6F7195_8AD610_ptr0");
	SetType(get_member_id(id, 0xC), "struct struct6F7195_8AD610_ptr0_ptrC *");
	SetType(get_member_id(id, 0x14), "struct struct8AD610LinkedListNode *");
	id = get_struc_id("struct6F7195_8AD610_ptr0_vtable");
	SetType(get_member_id(id, 0x0), "int (__thiscall *)(struct struct6F7195_8AD610_ptr0 *this, int)");
	SetType(get_member_id(id, 0x4), "int (__thiscall *)(struct struct6F7195_8AD610_ptr0 *this, struct struct6F7195 *struct6F7195)");
	SetType(get_member_id(id, 0x8), "int (__thiscall *)(struct struct6F7195_8AD610_ptr0 *this)");
	SetType(get_member_id(id, 0xC), "int (__thiscall *)(struct struct6F7195_8AD610_ptr0 *this, int)");
	id = get_struc_id("struct6F7195_8AD610_ptr0_ptrC");
	id = get_struc_id("struct8AD610_base");
	id = get_struc_id("struct8AD610");
	SetType(get_member_id(id, 0x7C), "struct struct6F79AFesi *");
	SetType(get_member_id(id, 0x88), "char *");
	SetType(get_member_id(id, 0x98), "struct struct6F79AFesi *");
	id = get_struc_id("struct8AD610LinkedListNode");
	SetType(get_member_id(id, 0x0), "struct struct8AD610LinkedListNode *");
	SetType(get_member_id(id, 0x8), "HANDLE");
	SetType(get_member_id(id, 0xC), "struct struct6F79AFesi *");
	id = get_struc_id("struct8AD610LinkedList");
	SetType(get_member_id(id, 0x0), "struct struct8AD610LinkedListNode *");
	SetType(get_member_id(id, 0x4), "struct struct8AD610LinkedListNode *");
	id = get_struc_id("LinkedListNode");
	SetType(get_member_id(id, 0x0), "struct LinkedListNode *");
	id = get_struc_id("LinkedList");
	id = get_struc_id("CriticalSectionWrapper");
	SetType(get_member_id(id, 0x4), "CRITICAL_SECTION *");
	id = get_struc_id("EventWrapper");
	SetType(get_member_id(id, 0x4), "HANDLE");
	id = get_struc_id("struct8AD2B8");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)()");
	id = get_struc_id("BinSectionLoadFunc");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(struct BinSection *binsection)");
	id = get_struc_id("BinSectionUnloadFunc");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(struct BinSection *binsection)");
	id = get_struc_id("BinSectionHandler");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(struct BinSection *)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(struct BinSection *)");
	id = get_struc_id("BinSectionMagicMapEntry");
	SetType(get_member_id(id, 0x0), "struct BinSectionHandler *");
	id = get_struc_id("OL850080");
	id = get_struc_id("OL86A858");
	id = get_struc_id("OLMainStruct");
	id = get_struc_id("OL836370");
	SetType(get_member_id(id, 0x140), "struct OL138 *");
	SetType(get_member_id(id, 0x148), "char *");
	id = get_struc_id("OL138");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "char *(__cdecl *)()");
	SetType(get_member_id(id, 0x10), "char *(__cdecl *)()");
	id = get_struc_id("TextboxData");
	SetType(get_member_id(id, 0x204), "enum TEXTBOXTYPE");
	id = get_struc_id("FocusedTextbox");
	SetType(get_member_id(id, 0x0), "struct UILabel *");
	SetType(get_member_id(id, 0x4), "struct FNGObject *");
	id = get_struc_id("UIMessage");
	SetType(get_member_id(id, 0x14), "struct FNGInfo *");
	SetType(get_member_id(id, 0x18), "unsigned int");
	id = get_struc_id("PCHelpBarButton");
	SetType(get_member_id(id, 0x10), "struct UILabel *");
	SetType(get_member_id(id, 0x14), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x1C), "PCHELPBARFLAGS");
	SetType(get_member_id(id, 0x60), "unsigned int");
	id = get_struc_id("FNGObject$vtable");
	SetType(get_member_id(id, 0x8), "int (__thiscall *)(struct FNGObject *this, unsigned int message, int, int, struct FNGInfo *fngInfo)");
	id = get_struc_id("FNGObject");
	SetType(get_member_id(id, 0x0), "struct FNGObject$vtable *");
	SetType(get_member_id(id, 0xC), "struct FocusedTextbox *");
	SetType(get_member_id(id, 0x34), "struct UIElement *");
	SetType(get_member_id(id, 0x38), "struct UIElement *");
	SetType(get_member_id(id, 0x3C), "struct UIElement *");
	id = get_struc_id("OptionsPCControllerFNGObject");
	SetType(get_member_id(id, 0x64), "struct ControllerOptionsRelated *");
	SetType(get_member_id(id, 0x68), "struct ControllerOptionsRelated *");
	SetType(get_member_id(id, 0x6C), "struct UIElement *");
	SetType(get_member_id(id, 0x70), "struct UIElement *");
	SetType(get_member_id(id, 0x74), "struct UIElement *");
	SetType(get_member_id(id, 0xD8), "struct UILabel *");
	SetType(get_member_id(id, 0xDC), "struct UIElementType1 *");
	SetType(get_member_id(id, 0xE0), "struct UIElementType1 *");
	SetType(get_member_id(id, 0xE4), "struct UILabel *");
	SetType(get_member_id(id, 0xE8), "char *");
	SetType(get_member_id(id, 0xEC), "char *");
	SetType(get_member_id(id, 0xF0), "char *");
	SetType(get_member_id(id, 0x12C), "float");
	SetType(get_member_id(id, 0x140), "unsigned int");
	id = get_struc_id("BuyPerformancePartsFNGObject");
	id = get_struc_id("CareerCarLotFNGObject");
	SetType(get_member_id(id, 0x58), "struct CarSelectCarEntry *");
	SetType(get_member_id(id, 0x60), "unsigned int");
	SetType(get_member_id(id, 0x74), "int");
	SetType(get_member_id(id, 0x78), "int");
	SetType(get_member_id(id, 0x80), "int");
	SetType(get_member_id(id, 0xE4), "struct UIElementType1 *");
	SetType(get_member_id(id, 0xE8), "struct UIElementType1 *");
	id = get_struc_id("CarSelectCarEntry");
	SetType(get_member_id(id, 0x910), "unsigned int");
	SetType(get_member_id(id, 0x914), "char");
	SetType(get_member_id(id, 0x918), "struct Car *");
	SetType(get_member_id(id, 0x920), "unsigned int");
	id = get_struc_id("s734");
	SetType(get_member_id(id, 0x8), "struct MenuCarInstance_10_2E0 *");
	SetType(get_member_id(id, 0xC), "void *");
	id = get_struc_id("s735_100");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "struct s735 *");
	id = get_struc_id("s735");
	SetType(get_member_id(id, 0x0), "float[63]");
	SetType(get_member_id(id, 0xFC), "float");
	id = get_struc_id("MenuCarInstance");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x584), "unsigned int");
	SetType(get_member_id(id, 0x588), "unsigned int");
	SetType(get_member_id(id, 0x58C), "unsigned int");
	SetType(get_member_id(id, 0x7B4), "mat4x4 *");
	id = get_struc_id("s483");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("MenuCarInstance_10");
	id = get_struc_id("MenuCarInstance_10_2E0");
	id = get_struc_id("Tmp4DF9C0ListEntry");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("UIProgressBar$vtable");
	SetType(get_member_id(id, 0x8), "void (__thiscall *)(struct UIProgressBar *this, struct UIProgressBarInitializeElementsConfig *config, char toBePutInField4)");
	SetType(get_member_id(id, 0xC), "void (__thiscall *)(struct UIProgressBar *this, char doShow)");
	id = get_struc_id("UIProgressBarInitializeElementsConfig");
	SetType(get_member_id(id, 0x0), "char *");
	id = get_struc_id("UIProgressBar");
	SetType(get_member_id(id, 0x0), "struct UIProgressBar$vtable *");
	SetType(get_member_id(id, 0x4), "char");
	SetType(get_member_id(id, 0xC), "struct UIElement *");
	SetType(get_member_id(id, 0x10), "struct UIElement *");
	SetType(get_member_id(id, 0x14), "struct UIElement *");
	SetType(get_member_id(id, 0x18), "struct UIElement *");
	SetType(get_member_id(id, 0x1C), "struct UIElement *");
	SetType(get_member_id(id, 0x20), "struct UIElement *");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x3C), "float");
	SetType(get_member_id(id, 0x40), "float");
	id = get_struc_id("CareerCarSelectFNGObject");
	id = get_struc_id("CareerCribFNGObject");
	id = get_struc_id("CareerWorldMapFNGObject");
	id = get_struc_id("ChooseCustomHUDFNGObject");
	id = get_struc_id("ChooseCustomizeCategoryFNGObject");
	id = get_struc_id("ChoosePaintCategoryFNGObject");
	id = get_struc_id("ChoosePerformanceCategoryFNGObject");
	id = get_struc_id("ChooseRimBrandFNGObject");
	id = get_struc_id("ChooseSpinnerFNGObject");
	id = get_struc_id("ChooseUniquePartFNGObject");
	id = get_struc_id("ChooseVinylLayerFNGObject");
	id = get_struc_id("CreditsFNGObject");
	id = get_struc_id("CribRewardOptionsMainFNGObject");
	id = get_struc_id("CustomHUDOverlayFNGObject");
	id = get_struc_id("CustomNeonMainFNGObject");
	id = get_struc_id("DateEntryFNGObject");
	id = get_struc_id("DebugCarCustomizeFNGObject");
	id = get_struc_id("DecalMainFNGObject");
	id = get_struc_id("DecalsOverlayFNGObject");
	id = get_struc_id("DeleteprofileFNGObject");
	id = get_struc_id("DemoLegalFNGObject");
	id = get_struc_id("DemoPSAFNGObject");
	id = get_struc_id("DiscErrorPCFngObject");
	id = get_struc_id("EATraxJukeboxFNGObject");
	id = get_struc_id("EngageEventDialogFNGObject");
	id = get_struc_id("EngageRaceDialogFNGObject");
	id = get_struc_id("GenericPartsBrowserFNGObject");
	id = get_struc_id("ICEMAINFNGObject");
	id = get_struc_id("IGPlayMovieFNGObject");
	id = get_struc_id("InGameWorldMapFNGObject");
	id = get_struc_id("EngageShopDialogFNGObject");
	id = get_struc_id("GarageMainFNGObject");
	SetType(get_member_id(id, 0x178), "float");
	SetType(get_member_id(id, 0x234), "struct GarageMainFNGObject_234 *");
	id = get_struc_id("GarageMainFNGObject_234");
	id = get_struc_id("GarageMainFNGObject_1D8");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "struct UIElement *");
	SetType(get_member_id(id, 0xC), "struct UIElement *");
	SetType(get_member_id(id, 0x10), "float");
	id = get_struc_id("LoadingTipsFNGObject");
	id = get_struc_id("LSDemoWarningFNGObject");
	id = get_struc_id("LSEALogoFNGObject");
	id = get_struc_id("LSIntroFMVFNGObject");
	id = get_struc_id("LSPSAMovieFNGObject");
	id = get_struc_id("LSSplashFNGObject");
	id = get_struc_id("LSTHXMovieFNGObject");
	id = get_struc_id("MagazineBackFNGObject");
	id = get_struc_id("MagazineRewardFNGObject");
	id = get_struc_id("MagazineSelectFNGObject");
	id = get_struc_id("MagazineViewFNGObject");
	id = get_struc_id("MCListFNGObject");
	id = get_struc_id("NeonPartsOverlayFNGObject");
	id = get_struc_id("OLCarLotFNGObject");
	id = get_struc_id("OLChallengeFNGObject");
	id = get_struc_id("OLCreateUserFNGObject");
	id = get_struc_id("OLDisconnectBGFNGObject");
	id = get_struc_id("OLDisconnectFNGObject");
	id = get_struc_id("OLEALoginFNGObject");
	id = get_struc_id("WheelOptionsFNGObject");
	id = get_struc_id("VirtualKeyboardFNGObject");
	id = get_struc_id("TwoPPressStartFNGObject");
	id = get_struc_id("TrailersFNGObject");
	id = get_struc_id("ShowcaseDPADFNGObject");
	id = get_struc_id("ChoosePerformancePackageFNGObject");
	id = get_struc_id("DebugTestFNGObject");
	id = get_struc_id("DemoESRBFNGObject");
	id = get_struc_id("MCBootupFNGObject");
	id = get_struc_id("MCBackgroundFNGObject");
	id = get_struc_id("MCMainFNGObject");
	id = get_struc_id("OLAgeVerifFNGObject");
	id = get_struc_id("OLCreateUser2FNGObject");
	id = get_struc_id("OLEAMessengerFNGObject");
	id = get_struc_id("OLFeedbackFNGObject");
	id = get_struc_id("OLFiltersFNGObject");
	id = get_struc_id("OLForgotAccountNameFNGObject");
	id = get_struc_id("OLFriendDialogueFNGObject");
	id = get_struc_id("OLGameRoomclientFNGObject");
	id = get_struc_id("OLGameRoomhostFNGObject");
	id = get_struc_id("OLISPConnectFNGObject");
	id = get_struc_id("OLMAINFNGObject");
	id = get_struc_id("OLNewsFNGObject");
	id = get_struc_id("OLPassworFNGObject");
	id = get_struc_id("OLPreRaceStartFNGObject");
	id = get_struc_id("OLRankingsFNGObject");
	id = get_struc_id("OLRankingsMonthlyFNGObject");
	id = get_struc_id("OLRankingsOverallFNGObject");
	id = get_struc_id("OLRankingsPersonalFNGObject");
	id = get_struc_id("OLSelectPersonaFNGObject");
	id = get_struc_id("OLUseExistingFNGObject");
	id = get_struc_id("OLViewCareerFNGObject");
	id = get_struc_id("OLViewCarFNGObject");
	id = get_struc_id("OLViewTrackFNGObject");
	id = get_struc_id("OLWebOfferFNGObject");
	id = get_struc_id("OLWebOffer2FNGObject");
	id = get_struc_id("OLXFindResultsFNGObject");
	id = get_struc_id("OLXMessageFNGObject");
	id = get_struc_id("OptionsFNGObject");
	id = get_struc_id("OptionsMainFNGObject");
	id = get_struc_id("PaintFNGObject");
	id = get_struc_id("PauseFNGObject");
	id = get_struc_id("PauseOptionsFNGObject");
	id = get_struc_id("PauseOptionsMainFNGObject");
	id = get_struc_id("PCCustomizeOptionFNGObject");
	id = get_struc_id("PCLANFNGObject");
	id = get_struc_id("PCLANServerSelectFNGObject");
	id = get_struc_id("PCOLGameRoomFNGObject");
	id = get_struc_id("PCOLLobbyFNGObject");
	id = get_struc_id("PCOLSEARCHFNGObject");
	id = get_struc_id("PerformanceBrandSelectFNGObject");
	id = get_struc_id("PerformanceDynoChartFNGObject");
	id = get_struc_id("PerformanceDynoMAINFNGObject");
	id = get_struc_id("PerformanceDynoResultsFNGObject");
	id = get_struc_id("PerformanceTuningGraph");
	id = get_struc_id("PerformanceTuningMaster");
	id = get_struc_id("PerformanceTuningSetting");
	id = get_struc_id("PerformanceTuningSlidersFNGObject");
	id = get_struc_id("PostRaceFNGObject");
	id = get_struc_id("PostRaceResultsFNGObject");
	id = get_struc_id("PostRaceRewardFNGObject");
	id = get_struc_id("PostRaceStatsFNGObject");
	id = get_struc_id("PostRaceTournResultsFNGObject");
	id = get_struc_id("PostRaceTournStandingsFNGObject");
	id = get_struc_id("ProfileManagerFNGObject");
	id = get_struc_id("QRModeOptionsFNGObject");
	id = get_struc_id("QRModeSelectFNGObject");
	id = get_struc_id("CarSelectFNGObject");
	SetType(get_member_id(id, 0x58), "struct CarSelectCarEntry *");
	SetType(get_member_id(id, 0x5C), "int");
	SetType(get_member_id(id, 0x60), "int");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0xC8), "struct UIElementType1 *");
	SetType(get_member_id(id, 0xCC), "struct UIElementType1 *");
	SetType(get_member_id(id, 0xD0), "struct UIElement *");
	SetType(get_member_id(id, 0xD4), "struct UIElement *");
	SetType(get_member_id(id, 0x1A8), "unsigned int");
	id = get_struc_id("QRTrackSelectFNGObject");
	id = get_struc_id("QuickRaceCarSelectFNGObject");
	id = get_struc_id("ReplayControlFNGObject");
	id = get_struc_id("RewardsSponsorFNGObject");
	id = get_struc_id("RimsBrowserFNGObject");
	id = get_struc_id("ShowcasePreviewFNGObject");
	id = get_struc_id("SponsorPopupFNGObject");
	id = get_struc_id("IconScrollerIcon");
	SetType(get_member_id(id, 0x10), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "unsigned int");
	SetType(get_member_id(id, 0x30), "unsigned int");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "float");
	SetType(get_member_id(id, 0x40), "float");
	id = get_struc_id("SponsorIconScrollerIcon");
	SetType(get_member_id(id, 0x48), "struct CareerSponsor *");
	id = get_struc_id("SponsorshipnewFNGObject");
	SetType(get_member_id(id, 0x150), "struct UIElement *");
	SetType(get_member_id(id, 0x158), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x210), "struct UIElementType1 *");
	id = get_struc_id("StartCareerFNGObject");
	id = get_struc_id("StatusCareerFNGObject");
	id = get_struc_id("StatusDVDFNGObject");
	id = get_struc_id("StatusMasterFNGObject");
	id = get_struc_id("StatusRegionFNGObject");
	id = get_struc_id("LSChineseHealthFNGObject");
	id = get_struc_id("LSBlankMovieFNGObject");
	id = get_struc_id("LSLangSelectFNGObject");
	id = get_struc_id("IconScrollerFNGObject$vtable");
	id = get_struc_id("IconScrollerFNGObject");
	SetType(get_member_id(id, 0x134), "struct UILabel *");
	SetType(get_member_id(id, 0x138), "struct UILabel *");
	id = get_struc_id("IconScrollerBase$vtable");
	id = get_struc_id("IconScrollerBase");
	SetType(get_member_id(id, 0x0), "struct IconScrollerBase$vtable *");
	SetType(get_member_id(id, 0xC), "struct IconScrollerIcon *");
	SetType(get_member_id(id, 0x1C), "char *");
	SetType(get_member_id(id, 0x20), "char *");
	SetType(get_member_id(id, 0x24), "float");
	id = get_struc_id("IconScroller");
	SetType(get_member_id(id, 0x98), "float");
	SetType(get_member_id(id, 0x9C), "float");
	SetType(get_member_id(id, 0xE0), "float");
	id = get_struc_id("MainFNGObject");
	id = get_struc_id("PCHelpBarFNGObject");
	SetType(get_member_id(id, 0x58), "char *");
	SetType(get_member_id(id, 0x5C), "char *");
	SetType(get_member_id(id, 0x64), "enum PCHELPBARFLAGS");
	id = get_struc_id("DialogFNGObject");
	id = get_struc_id("ChyronIGFNGObject");
	id = get_struc_id("IcePartsOverlayFNGObject");
	id = get_struc_id("SMSMailboxFNGObject");
	SetType(get_member_id(id, 0x1B0), "struct UIElement *");
	SetType(get_member_id(id, 0x1B4), "struct UIElement *");
	id = get_struc_id("MailBoxRelated1");
	SetType(get_member_id(id, 0x14), "struct UIElement *");
	SetType(get_member_id(id, 0x2C), "char *");
	SetType(get_member_id(id, 0x30), "char *");
	id = get_struc_id("MailBoxRelated3");
	SetType(get_member_id(id, 0x2C), "char *");
	SetType(get_member_id(id, 0x30), "char *");
	id = get_struc_id("MailBoxRelated2");
	id = get_struc_id("MailBoxRelated4");
	id = get_struc_id("Mailbox");
	SetType(get_member_id(id, 0x18), "enum MAILBOX");
	id = get_struc_id("ObjectLink");
	SetType(get_member_id(id, 0x0), "struct ObjectLink *");
	SetType(get_member_id(id, 0x4), "struct ObjectLink *");
	id = get_struc_id("SmsData");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	id = get_struc_id("SmsDataData");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("SmsMessage");
	SetType(get_member_id(id, 0x0), "struct SmsData *");
	SetType(get_member_id(id, 0x4), "char");
	SetType(get_member_id(id, 0x6), "char");
	SetType(get_member_id(id, 0x7), "char");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	id = get_struc_id("SmsMessageList");
	SetType(get_member_id(id, 0x1400), "int");
	SetType(get_member_id(id, 0x1404), "int");
	id = get_struc_id("SmsListEntry");
	SetType(get_member_id(id, 0x18), "struct SmsMessage *");
	id = get_struc_id("EngageMessageDialogFNGObject");
	SetType(get_member_id(id, 0xFC), "struct SmsMessage *");
	id = get_struc_id("ScrollingThing");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x40), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x44), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x48), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x4C), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x50), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x54), "struct UIElementType1 *");
	id = get_struc_id("SubScrollingThing");
	SetType(get_member_id(id, 0x0), "struct SubScrollingThing$vtable *");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x8C), "float");
	SetType(get_member_id(id, 0x90), "float");
	SetType(get_member_id(id, 0x94), "float");
	SetType(get_member_id(id, 0x98), "float");
	id = get_struc_id("SubScrollingThing$vtable");
	SetType(get_member_id(id, 0x0), "int (__thiscall *)(struct SubScrollingThing *this, int)");
	SetType(get_member_id(id, 0x4), "int (__thiscall *)(struct SubScrollingThing *this)");
	id = get_struc_id("CommonFNGObjectStructA");
	SetType(get_member_id(id, 0x0), "struct FNGObject *");
	SetType(get_member_id(id, 0x8), "struct ScrollingThing *");
	id = get_struc_id("WideCharString");
	SetType(get_member_id(id, 0x0), "wchar_t *");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("ControllerOptionsRelated");
	SetType(get_member_id(id, 0x0), "struct ControllerOptionsRelated$vtable *");
	SetType(get_member_id(id, 0x24), "struct UIElementType1 *");
	SetType(get_member_id(id, 0x2C), "struct UILabel *");
	id = get_struc_id("ControllerOptionsRelated$vtable");
	SetType(get_member_id(id, 0x0), "int (__thiscall *)(struct ControllerOptionsRelated *this, int)");
	SetType(get_member_id(id, 0x4), "void (__thiscall *)(struct ControllerOptionsRelated *this, char *fng, unsigned int message)");
	SetType(get_member_id(id, 0x2C), "void (__thiscall *)(struct ControllerOptionsRelated *this, struct vec2 *pos)");
	SetType(get_member_id(id, 0x30), "void (__thiscall *)(struct ControllerOptionsRelated *this, float x)");
	SetType(get_member_id(id, 0x34), "void (__thiscall *)(struct ControllerOptionsRelated *this, float y)");
	id = get_struc_id("ControllerStruct874C40_58");
	id = get_struc_id("ControllerStruct874C40_158");
	id = get_struc_id("ControllerStruct874C40_1D8");
	id = get_struc_id("ControllerStruct874C40_D8");
	id = get_struc_id("ControllerStruct874C40");
	id = get_struc_id("ControllerStruct835930");
	id = get_struc_id("U2RECT");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("UIPos");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	id = get_struc_id("UIElement_Animation");
	SetType(get_member_id(id, 0x4), "struct UIElement_Animation *");
	SetType(get_member_id(id, 0x30), "unsigned int");
	id = get_struc_id("UIElement");
	SetType(get_member_id(id, 0x4), "struct UIElement *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "enum UIELEMENTFLAGS");
	SetType(get_member_id(id, 0x24), "unsigned int");
	SetType(get_member_id(id, 0x2C), "struct UIPos *");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "float");
	SetType(get_member_id(id, 0x4C), "struct UIElement_Animation *");
	SetType(get_member_id(id, 0x50), "struct UIElement_Animation *");
	SetType(get_member_id(id, 0x54), "struct UIElement_Animation *");
	SetType(get_member_id(id, 0x58), "struct FERenderObject *");
	id = get_struc_id("UIElementType1");
	id = get_struc_id("UILabel");
	SetType(get_member_id(id, 0x60), "enum LANGUAGE_LABELS");
	id = get_struc_id("UIContainer");
	SetType(get_member_id(id, 0x60), "int");
	SetType(get_member_id(id, 0x64), "struct UIElement *");
	id = get_struc_id("UIData");
	SetType(get_member_id(id, 0x0), "struct UIData$vtable *");
	SetType(get_member_id(id, 0x8), "struct UIData_field8 *");
	SetType(get_member_id(id, 0xC), "struct UIDataC *");
	id = get_struc_id("UIDataC");
	id = get_struc_id("UIData$vtable");
	SetType(get_member_id(id, 0x10), "int (__thiscall *)(struct UIData *this, struct FNGInfo *fnginfo)");
	id = get_struc_id("UIData_field8");
	SetType(get_member_id(id, 0x8), "struct UIData_field8_8 *");
	SetType(get_member_id(id, 0x10C), "struct UIData *");
	id = get_struc_id("UIData_field8_8");
	id = get_struc_id("UIData_field8_412C");
	SetType(get_member_id(id, 0x1C), "struct FNGInfo *");
	id = get_struc_id("NamedLinkNode");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "char *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	id = get_struc_id("UIData_field8_4134");
	SetType(get_member_id(id, 0x8), "struct UIDLA *");
	SetType(get_member_id(id, 0xC), "struct UIDLA *");
	id = get_struc_id("UIDLA");
	SetType(get_member_id(id, 0x1C), "struct UIDLA_ENTRY *");
	SetType(get_member_id(id, 0x20), "struct UIDLA_ENTRY *");
	id = get_struc_id("UIDLA_ENTRY");
	SetType(get_member_id(id, 0x20), "void *");
	id = get_struc_id("FNGInfoList");
	id = get_struc_id("ListEntry");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	id = get_struc_id("List");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	id = get_struc_id("SomethingUI");
	SetType(get_member_id(id, 0x0), "struct SomethingUI$vtable *");
	id = get_struc_id("SomethingUI$vtable");
	SetType(get_member_id(id, 0x0), "void (__thiscall *)(struct SomethingUI *this, int dontFree)");
	id = get_struc_id("SomethingUIImpl");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0xC), "struct BinSection30203Data *");
	SetType(get_member_id(id, 0x10), "struct BinSection *");
	SetType(get_member_id(id, 0x14), "struct FNGObject *");
	SetType(get_member_id(id, 0x18), "struct FNGInfo *");
	SetType(get_member_id(id, 0x20), "struct FNGData *");
	id = get_struc_id("BinSection30203Data");
	id = get_struc_id("BinSection30210");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("UIElementVisitor");
	id = get_struc_id("UIElementVisitor$vtable");
	SetType(get_member_id(id, 0x4), "int (__thiscall *)(struct UIElementVisitor *this, struct UIElement *element)");
	id = get_struc_id("UIElementVisitor_FindByHash");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "struct UIElement *");
	id = get_struc_id("UIElementVisitor_ClearFNGCache");
	id = get_struc_id("UIElementVisitor_FindByFieldC");
	id = get_struc_id("FERenderObject");
	id = get_struc_id("FERenderEPoly");
	id = get_struc_id("WorldAnimStuff");
	SetType(get_member_id(id, 0x0), "struct Pool *");
	SetType(get_member_id(id, 0x4), "struct Pool *");
	SetType(get_member_id(id, 0x8), "struct Pool *");
	SetType(get_member_id(id, 0xC), "struct Pool *");
	SetType(get_member_id(id, 0x10), "struct Pool *");
	SetType(get_member_id(id, 0x14), "char");
	id = get_struc_id("AudioStuff");
	id = get_struc_id("Struct836498");
	SetType(get_member_id(id, 0x1C), "struct Pool *");
	SetType(get_member_id(id, 0x20), "struct Pool *");
	SetType(get_member_id(id, 0x40), "struct ChyronIGFNGObject *");
	id = get_struc_id("Bootflow");
	SetType(get_member_id(id, 0xC), "struct BootflowEntry *");
	id = get_struc_id("BootflowEntry");
	SetType(get_member_id(id, 0xC), "char *");
	id = get_struc_id("FontData");
	id = get_struc_id("SoundEffectSystem");
	id = get_struc_id("SoundIdBanks");
	id = get_struc_id("SoundIdBank");
	id = get_struc_id("Car");
	SetType(get_member_id(id, 0x0), "char[32]");
	SetType(get_member_id(id, 0x20), "char[32]");
	SetType(get_member_id(id, 0x40), "char[32]");
	SetType(get_member_id(id, 0x60), "char[32]");
	SetType(get_member_id(id, 0xC0), "char[16]");
	SetType(get_member_id(id, 0xD0), "unsigned int");
	id = get_struc_id("CarCollection");
	SetType(get_member_id(id, 0x540), "int");
	SetType(get_member_id(id, 0x812C), "int");
	SetType(get_member_id(id, 0x9A80), "int");
	SetType(get_member_id(id, 0x9BD4), "int");
	id = get_struc_id("CarCollectionWithPointers");
	SetType(get_member_id(id, 0x9BD8), "struct StockCar *[48]");
	SetType(get_member_id(id, 0x9C98), "struct TunedCar *[20]");
	SetType(get_member_id(id, 0x9CE8), "struct CareerCar *[5]");
	SetType(get_member_id(id, 0x9CFC), "struct SponsorCar *[12]");
	SetType(get_member_id(id, 0x9D2C), "struct OnlineCar *[6]");
	id = get_struc_id("InventoryCar");
	SetType(get_member_id(id, 0x0), "struct InventoryCar$vtable *");
	SetType(get_member_id(id, 0x14), "enum INVENTORY_CAR_FLAGS");
	id = get_struc_id("CarPreset");
	SetType(get_member_id(id, 0x8), "char[32]");
	SetType(get_member_id(id, 0x28), "char[32]");
	id = get_struc_id("OLCarSlotData_Slot");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("OLCarSlotData");
	id = get_struc_id("OnlineCar");
	id = get_struc_id("StockCar");
	id = get_struc_id("s484");
	id = get_struc_id("s485");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "char *");
	id = get_struc_id("InventoryCar$vtable");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "int (__thiscall *)(struct InventoryCar *this)");
	SetType(get_member_id(id, 0x8), "unsigned int (__thiscall *)(struct InventoryCar *this)");
	SetType(get_member_id(id, 0xC), "void (__thiscall *)(struct InventoryCar *this, int playerIndex, struct MenuCarInstance *menuCarInstance, int)");
	id = get_struc_id("s54F980");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0xC), "struct bPNodeSlotPoolEntry *");
	id = get_struc_id("SponsorCar");
	SetType(get_member_id(id, 0x18), "unsigned int");
	id = get_struc_id("CarCollection9BD8");
	id = get_struc_id("TunedCar18");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("TunedCar360_17");
	id = get_struc_id("TunedCar360_20");
	id = get_struc_id("TunedCar360");
	id = get_struc_id("TunedCar");
	id = get_struc_id("OnlineCareerCar");
	id = get_struc_id("CareerCar");
	id = get_struc_id("CareerCar434_15C");
	id = get_struc_id("CareerCar434_26C");
	id = get_struc_id("CareerCar434_27C");
	id = get_struc_id("CareerCar434_28C");
	id = get_struc_id("CareerCar434_294");
	id = get_struc_id("CareerCar434_29C");
	id = get_struc_id("CareerCar434");
	id = get_struc_id("Player_24_60");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	id = get_struc_id("Player_24");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "float");
	SetType(get_member_id(id, 0x40), "float");
	id = get_struc_id("Player_D4_10");
	id = get_struc_id("Player_D4_100_1C");
	id = get_struc_id("Player_D4_100");
	id = get_struc_id("Player_D4");
	SetType(get_member_id(id, 0x4), "unsigned int[2]");
	SetType(get_member_id(id, 0xC), "enum INVENTORY_CAR_FLAGS");
	id = get_struc_id("Player");
	SetType(get_member_id(id, 0x0), "char[32]");
	id = get_struc_id("TraxConfig");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char");
	id = get_struc_id("TraxEntry");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "char *");
	id = get_struc_id("ProfileData_156B0_SubB");
	id = get_struc_id("ProfileData_156B0_SubA");
	id = get_struc_id("ProfileData_156B0");
	id = get_struc_id("ProfileData28DB0");
	id = get_struc_id("ProfileData28FD0");
	id = get_struc_id("ProfileData29C70");
	id = get_struc_id("ProfileData");
	SetType(get_member_id(id, 0x156A8), "enum MENU_STATE");
	SetType(get_member_id(id, 0x16778), "void *");
	SetType(get_member_id(id, 0x20358), "int");
	SetType(get_member_id(id, 0x28D8C), "float");
	SetType(get_member_id(id, 0x29C58), "struct Pool *");
	SetType(get_member_id(id, 0x29C68), "float");
	id = get_struc_id("Career7B00");
	SetType(get_member_id(id, 0x0), "unsigned int");
	id = get_struc_id("CareerD24_54_30");
	SetType(get_member_id(id, 0xCD8), "void *[6]");
	SetType(get_member_id(id, 0xCF0), "int");
	id = get_struc_id("CareerD24_54_30_0_10C");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x2C), "float");
	id = get_struc_id("CareerD24_54_30_0");
	id = get_struc_id("CareerD24_54");
	id = get_struc_id("CareerD24_8");
	SetType(get_member_id(id, 0x0), "void *");
	id = get_struc_id("CareerD24");
	SetType(get_member_id(id, 0x34E4), "struct CareerD24_54 *");
	id = get_struc_id("CareerStage");
	SetType(get_member_id(id, 0xC4), "unsigned int[6]");
	SetType(get_member_id(id, 0xDC), "int");
	SetType(get_member_id(id, 0xE0), "float");
	SetType(get_member_id(id, 0xE4), "int");
	SetType(get_member_id(id, 0xE8), "struct CareerSponsor *");
	SetType(get_member_id(id, 0xFC), "char");
	SetType(get_member_id(id, 0x100), "struct CareerStageSettings *");
	id = get_struc_id("Bin34A11_38");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("CareerRace");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x28), "unsigned int");
	id = get_struc_id("BinSection34A11");
	id = get_struc_id("CareerStatsHiddenShopsDiscovered");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	id = get_struc_id("CareerStatsDvdCover");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "char");
	id = get_struc_id("CareerStatsRegionDvdCovers");
	SetType(get_member_id(id, 0x20), "int");
	id = get_struc_id("CareerStats");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x54), "float");
	SetType(get_member_id(id, 0x68), "float");
	SetType(get_member_id(id, 0x70), "int");
	SetType(get_member_id(id, 0x74), "int");
	SetType(get_member_id(id, 0x78), "int");
	SetType(get_member_id(id, 0x7C), "int");
	SetType(get_member_id(id, 0x80), "int");
	SetType(get_member_id(id, 0x84), "int");
	SetType(get_member_id(id, 0x88), "int");
	SetType(get_member_id(id, 0x8C), "int");
	SetType(get_member_id(id, 0x90), "int");
	SetType(get_member_id(id, 0x94), "int");
	SetType(get_member_id(id, 0x98), "float");
	SetType(get_member_id(id, 0x1DC), "float[8]");
	SetType(get_member_id(id, 0x1FC), "float[8]");
	id = get_struc_id("CareerC00");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "void *");
	id = get_struc_id("Bin34A11_18");
	id = get_struc_id("Career887C_2A");
	id = get_struc_id("Career887C_D");
	id = get_struc_id("Career887C");
	SetType(get_member_id(id, 0xA5), "char");
	id = get_struc_id("Career887C_A8");
	id = get_struc_id("Career7148_180");
	id = get_struc_id("Career7148");
	SetType(get_member_id(id, 0x80), "unsigned int[64]");
	id = get_struc_id("Career_0");
	SetType(get_member_id(id, 0x8), "struct CareerShop *");
	SetType(get_member_id(id, 0xC), "void *");
	id = get_struc_id("Career713C");
	id = get_struc_id("Career4230");
	SetType(get_member_id(id, 0x1AE4), "float");
	id = get_struc_id("Career4210");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	id = get_struc_id("CareerBank");
	SetType(get_member_id(id, 0x0), "int");
	id = get_struc_id("Career");
	SetType(get_member_id(id, 0x600), "struct Marker *[128]");
	SetType(get_member_id(id, 0x800), "struct Marker *[256]");
	SetType(get_member_id(id, 0x7AF8), "int");
	SetType(get_member_id(id, 0x7AFC), "int");
	SetType(get_member_id(id, 0x8704), "void *");
	SetType(get_member_id(id, 0x870C), "struct CareerShop *");
	SetType(get_member_id(id, 0x8724), "struct CareerShop *");
	SetType(get_member_id(id, 0x8730), "struct CareerRace *");
	SetType(get_member_id(id, 0x8734), "void *");
	SetType(get_member_id(id, 0x8738), "struct CareerRace *");
	SetType(get_member_id(id, 0x8740), "unsigned int");
	SetType(get_member_id(id, 0x8764), "float");
	SetType(get_member_id(id, 0x8869), "char[8][2]");
	id = get_struc_id("MarkerQueryResult");
	SetType(get_member_id(id, 0x0), "struct Marker *");
	SetType(get_member_id(id, 0x4), "struct CareerRace *");
	SetType(get_member_id(id, 0x8), "struct CareerShop *");
	SetType(get_member_id(id, 0xC), "struct Bin34A16 *");
	SetType(get_member_id(id, 0x10), "struct Bin34A1B *");
	id = get_struc_id("CareerSponsor");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	SetType(get_member_id(id, 0xC), "__int16");
	SetType(get_member_id(id, 0xE), "__int16");
	id = get_struc_id("CarUnlockEntry");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("Bin34A1E");
	id = get_struc_id("Bin34A1C");
	id = get_struc_id("Bin34A1A");
	id = get_struc_id("Bin34A1B");
	id = get_struc_id("Bin34A16");
	SetType(get_member_id(id, 0x2C), "unsigned int");
	id = get_struc_id("Bin34A14");
	id = get_struc_id("CareerShop");
	SetType(get_member_id(id, 0x38), "unsigned int");
	SetType(get_member_id(id, 0x3C), "unsigned int");
	SetType(get_member_id(id, 0x51), "char");
	SetType(get_member_id(id, 0x74), "unsigned int");
	SetType(get_member_id(id, 0x9D), "char");
	id = get_struc_id("Bin34A15_C");
	id = get_struc_id("Bin34A15");
	id = get_struc_id("CareerSponsorPtrOrHash");
	SetType(get_member_id(id, 0x0), "struct CareerSponsor *");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("CareerStageSettings");
	SetType(get_member_id(id, 0x0), "char");
	SetType(get_member_id(id, 0x1), "char");
	SetType(get_member_id(id, 0x2), "__int16");
	SetType(get_member_id(id, 0x4), "__int16");
	id = get_struc_id("Marker");
	SetType(get_member_id(id, 0x0), "enum MARKER_TYPE");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0x30), "unsigned int");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "__int16");
	SetType(get_member_id(id, 0x42), "__int16");
	SetType(get_member_id(id, 0x44), "float");
	SetType(get_member_id(id, 0x48), "float");
	id = get_struc_id("C2D4");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x8), "void (__cdecl **[40])(int)");
	SetType(get_member_id(id, 0xA8), "void *");
	id = get_struc_id("C64C");
	id = get_struc_id("C20");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x10), "char[16]");
	id = get_struc_id("C4");
	id = get_struc_id("vec3");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	id = get_struc_id("C");
	SetType(get_member_id(id, 0x4), "struct C4 *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0x14), "struct C *");
	SetType(get_member_id(id, 0x98), "float");
	SetType(get_member_id(id, 0xA0), "void *");
	SetType(get_member_id(id, 0xA8), "float");
	SetType(get_member_id(id, 0xB4), "float");
	SetType(get_member_id(id, 0x14C), "void *");
	SetType(get_member_id(id, 0x150), "float");
	SetType(get_member_id(id, 0x16C), "float");
	SetType(get_member_id(id, 0x170), "float");
	SetType(get_member_id(id, 0x178), "float");
	SetType(get_member_id(id, 0x180), "void *");
	SetType(get_member_id(id, 0x184), "void *");
	SetType(get_member_id(id, 0x1D8), "float");
	SetType(get_member_id(id, 0x268), "void *");
	SetType(get_member_id(id, 0x298), "float");
	SetType(get_member_id(id, 0x2D0), "void *");
	SetType(get_member_id(id, 0x9A4), "void *");
	id = get_struc_id("D");
	SetType(get_member_id(id, 0x0), "struct E *");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x64), "void *");
	id = get_struc_id("E");
	id = get_struc_id("struct890020");
	SetType(get_member_id(id, 0x0), "struct Marker *");
	SetType(get_member_id(id, 0x4), "float");
	id = get_struc_id("PathsData");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x434), "int");
	SetType(get_member_id(id, 0x438), "int");
	SetType(get_member_id(id, 0x43C), "struct Marker *");
	SetType(get_member_id(id, 0x440), "struct Marker *[22]");
	id = get_struc_id("NeighbourhoodName");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("JoyKeyData");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("SomeKeyData");
	SetType(get_member_id(id, 0x8), "enum JOYID");
	id = get_struc_id("JoyHandlerData");
	SetType(get_member_id(id, 0x8), "char *");
	id = get_struc_id("JoystickEventNode");
	SetType(get_member_id(id, 0x8), "enum JOYID");
	id = get_struc_id("Entry8655A0");
	id = get_struc_id("Struct8383A4");
	id = get_struc_id("Network86A388");
	SetType(get_member_id(id, 0x44), "struct Network44 *");
	SetType(get_member_id(id, 0x50), "char[64]");
	SetType(get_member_id(id, 0x94), "void (__cdecl *)(int, int)");
	id = get_struc_id("Network44");
	SetType(get_member_id(id, 0x0), "struct Network0 *");
	SetType(get_member_id(id, 0x4), "struct Network8B7CAC *");
	SetType(get_member_id(id, 0x1618), "struct Network1618 *");
	id = get_struc_id("Network1498");
	id = get_struc_id("Network1618");
	id = get_struc_id("Network1160");
	id = get_struc_id("Network0");
	id = get_struc_id("Network00");
	SetType(get_member_id(id, 0x0), "struct SocketWrapper *");
	SetType(get_member_id(id, 0x4), "struct Network00_4 *");
	SetType(get_member_id(id, 0x120), "struct Network120 *");
	id = get_struc_id("Network00_4");
	id = get_struc_id("Network120");
	id = get_struc_id("Network8B7CAC");
	SetType(get_member_id(id, 0x1C), "struct SocketWrapperWrapper *");
	id = get_struc_id("Network89CF48");
	id = get_struc_id("Quantizer141");
	SetType(get_member_id(id, 0x0), "char[300]");
	id = get_struc_id("Quantizer149");
	id = get_struc_id("SocketWrapper");
	SetType(get_member_id(id, 0x0), "struct SocketWrapper *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x18), "SOCKET");
	SetType(get_member_id(id, 0x48), "struct SocketWrapperWrapper *");
	SetType(get_member_id(id, 0x4C), "int (__cdecl *)(struct SocketWrapper *, int, struct SocketWrapperWrapper *)");
	id = get_struc_id("SocketWrapperWrapper");
	SetType(get_member_id(id, 0x0), "struct SocketWrapper *");
	id = get_struc_id("CriticalSectionWrapper_3");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "CRITICAL_SECTION");
	id = get_struc_id("NetworkRegionStuff");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0xC), "char *");
	SetType(get_member_id(id, 0x10), "char *");
	id = get_struc_id("sockaddr_in");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "u_short");
	SetType(get_member_id(id, 0x4), "in_addr");
	SetType(get_member_id(id, 0x8), "char[8]");
	id = get_struc_id("in_addr");
	SetType(get_member_id(id, 0x0), "in_addr::$C13EC994467D6E67044F092615EC7EA9");
	id = get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9");
	SetType(get_member_id(id, 0x0), "in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0");
	SetType(get_member_id(id, 0x1), "in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5");
	SetType(get_member_id(id, 0x2), "u_long");
	id = get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0");
	SetType(get_member_id(id, 0x0), "u_char");
	SetType(get_member_id(id, 0x1), "u_char");
	SetType(get_member_id(id, 0x2), "u_char");
	SetType(get_member_id(id, 0x3), "u_char");
	id = get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5");
	SetType(get_member_id(id, 0x0), "u_short");
	SetType(get_member_id(id, 0x2), "u_short");
	id = get_struc_id("CRITICAL_SECTION");
	SetType(get_member_id(id, 0x0), "PRTL_CRITICAL_SECTION_DEBUG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "HANDLE");
	SetType(get_member_id(id, 0x10), "HANDLE");
	SetType(get_member_id(id, 0x14), "ULONG_PTR");
	id = get_struc_id("vec2");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	id = get_struc_id("mat4x4");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "float");
	id = get_struc_id("IDirect3D9");
	SetType(get_member_id(id, 0x0), "struct IDirect3D9Vtbl *");
	id = get_struc_id("IDirect3D9Vtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirect3D9 *This, const IID *const riid, void **ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirect3D9 *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__stdcall *)(IDirect3D9 *This)");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(IDirect3D9 *This, void *pInitializeFunction)");
	SetType(get_member_id(id, 0x10), "UINT (__stdcall *)(IDirect3D9 *This)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, DWORD Flags, D3DADAPTER_IDENTIFIER9 *pIdentifier)");
	SetType(get_member_id(id, 0x18), "UINT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DFORMAT Format)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DFORMAT Format, UINT Mode, D3DDISPLAYMODE *pMode)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDISPLAYMODE *pMode)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT iAdapter, D3DDEVTYPE DevType, D3DFORMAT DisplayFormat, D3DFORMAT BackBufferFormat, BOOL bWindowed)");
	SetType(get_member_id(id, 0x28), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT AdapterFormat, DWORD Usage, D3DRESOURCETYPE RType, D3DFORMAT CheckFormat)");
	SetType(get_member_id(id, 0x2C), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT SurfaceFormat, BOOL Windowed, D3DMULTISAMPLE_TYPE MultiSampleType, DWORD *pQualityLevels)");
	SetType(get_member_id(id, 0x30), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT AdapterFormat, D3DFORMAT RenderTargetFormat, D3DFORMAT DepthStencilFormat)");
	SetType(get_member_id(id, 0x34), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT SourceFormat, D3DFORMAT TargetFormat)");
	SetType(get_member_id(id, 0x38), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DCAPS9 *pCaps)");
	SetType(get_member_id(id, 0x3C), "HMONITOR (__stdcall *)(IDirect3D9 *This, UINT Adapter)");
	SetType(get_member_id(id, 0x40), "HRESULT (__stdcall *)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, HWND hFocusWindow, DWORD BehaviorFlags, D3DPRESENT_PARAMETERS *pPresentationParameters, IDirect3DDevice9 **ppReturnedDeviceInterface)");
	SetType(get_member_id(id, 0x44), "LPCWSTR");
	id = get_struc_id("IDirect3DDevice9Vtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const IID *const riid, void **ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x10), "UINT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x18), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3D9 **ppD3D9)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DCAPS9 *pCaps)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, D3DDISPLAYMODE *pMode)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DDEVICE_CREATION_PARAMETERS *pParameters)");
	SetType(get_member_id(id, 0x28), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT XHotSpot, UINT YHotSpot, IDirect3DSurface9 *pCursorBitmap)");
	SetType(get_member_id(id, 0x2C), "void (__stdcall *)(IDirect3DDevice9 *This, int X, int Y, DWORD Flags)");
	SetType(get_member_id(id, 0x30), "BOOL (__stdcall *)(IDirect3DDevice9 *This, BOOL bShow)");
	SetType(get_member_id(id, 0x34), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DPRESENT_PARAMETERS *pPresentationParameters, IDirect3DSwapChain9 **pSwapChain)");
	SetType(get_member_id(id, 0x38), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, IDirect3DSwapChain9 **pSwapChain)");
	SetType(get_member_id(id, 0x3C), "UINT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x40), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DPRESENT_PARAMETERS *pPresentationParameters)");
	SetType(get_member_id(id, 0x44), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const RECT *pSourceRect, const RECT *pDestRect, HWND hDestWindowOverride, const RGNDATA *pDirtyRegion)");
	SetType(get_member_id(id, 0x48), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, IDirect3DSurface9 **ppBackBuffer)");
	SetType(get_member_id(id, 0x4C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, D3DRASTER_STATUS *pRasterStatus)");
	SetType(get_member_id(id, 0x50), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, BOOL bEnableDialogs)");
	SetType(get_member_id(id, 0x54), "void (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, DWORD Flags, const D3DGAMMARAMP *pRamp)");
	SetType(get_member_id(id, 0x58), "void (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, D3DGAMMARAMP *pRamp)");
	SetType(get_member_id(id, 0x5C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Width, UINT Height, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DTexture9 **ppTexture, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x60), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Width, UINT Height, UINT Depth, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DVolumeTexture9 **ppVolumeTexture, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x64), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT EdgeLength, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DCubeTexture9 **ppCubeTexture, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x68), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Length, DWORD Usage, DWORD FVF, D3DPOOL Pool, IDirect3DVertexBuffer9 **ppVertexBuffer, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x6C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Length, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DIndexBuffer9 **ppIndexBuffer, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x70), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, BOOL Lockable, IDirect3DSurface9 **ppSurface, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x74), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, BOOL Discard, IDirect3DSurface9 **ppSurface, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x78), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DSurface9 *pSourceSurface, const RECT *pSourceRect, IDirect3DSurface9 *pDestinationSurface, const POINT *pDestPoint)");
	SetType(get_member_id(id, 0x7C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DBaseTexture9 *pSourceTexture, IDirect3DBaseTexture9 *pDestinationTexture)");
	SetType(get_member_id(id, 0x80), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DSurface9 *pRenderTarget, IDirect3DSurface9 *pDestSurface)");
	SetType(get_member_id(id, 0x84), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT iSwapChain, IDirect3DSurface9 *pDestSurface)");
	SetType(get_member_id(id, 0x88), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DSurface9 *pSourceSurface, const RECT *pSourceRect, IDirect3DSurface9 *pDestSurface, const RECT *pDestRect, D3DTEXTUREFILTERTYPE Filter)");
	SetType(get_member_id(id, 0x8C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DSurface9 *pSurface, const RECT *pRect, D3DCOLOR color)");
	SetType(get_member_id(id, 0x90), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Width, UINT Height, D3DFORMAT Format, D3DPOOL Pool, IDirect3DSurface9 **ppSurface, HANDLE *pSharedHandle)");
	SetType(get_member_id(id, 0x94), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD RenderTargetIndex, IDirect3DSurface9 *pRenderTarget)");
	SetType(get_member_id(id, 0x98), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD RenderTargetIndex, IDirect3DSurface9 **ppRenderTarget)");
	SetType(get_member_id(id, 0x9C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DSurface9 *pNewZStencil)");
	SetType(get_member_id(id, 0xA0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DSurface9 **ppZStencilSurface)");
	SetType(get_member_id(id, 0xA4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0xA8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0xAC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Count, const D3DRECT *pRects, DWORD Flags, D3DCOLOR Color, float Z, DWORD Stencil)");
	SetType(get_member_id(id, 0xB0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DTRANSFORMSTATETYPE State, const D3DMATRIX *pMatrix)");
	SetType(get_member_id(id, 0xB4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DTRANSFORMSTATETYPE State, D3DMATRIX *pMatrix)");
	SetType(get_member_id(id, 0xB8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DTRANSFORMSTATETYPE, const D3DMATRIX *)");
	SetType(get_member_id(id, 0xBC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const D3DVIEWPORT9 *pViewport)");
	SetType(get_member_id(id, 0xC0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DVIEWPORT9 *pViewport)");
	SetType(get_member_id(id, 0xC4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const D3DMATERIAL9 *pMaterial)");
	SetType(get_member_id(id, 0xC8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DMATERIAL9 *pMaterial)");
	SetType(get_member_id(id, 0xCC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Index, const D3DLIGHT9 *)");
	SetType(get_member_id(id, 0xD0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Index, D3DLIGHT9 *)");
	SetType(get_member_id(id, 0xD4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Index, BOOL Enable)");
	SetType(get_member_id(id, 0xD8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Index, BOOL *pEnable)");
	SetType(get_member_id(id, 0xDC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Index, const float *pPlane)");
	SetType(get_member_id(id, 0xE0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Index, float *pPlane)");
	SetType(get_member_id(id, 0xE4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DRENDERSTATETYPE State, DWORD Value)");
	SetType(get_member_id(id, 0xE8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DRENDERSTATETYPE State, DWORD *pValue)");
	SetType(get_member_id(id, 0xEC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DSTATEBLOCKTYPE Type, IDirect3DStateBlock9 **ppSB)");
	SetType(get_member_id(id, 0xF0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0xF4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DStateBlock9 **ppSB)");
	SetType(get_member_id(id, 0xF8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const D3DCLIPSTATUS9 *pClipStatus)");
	SetType(get_member_id(id, 0xFC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DCLIPSTATUS9 *pClipStatus)");
	SetType(get_member_id(id, 0x100), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Stage, IDirect3DBaseTexture9 **ppTexture)");
	SetType(get_member_id(id, 0x104), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Stage, IDirect3DBaseTexture9 *pTexture)");
	SetType(get_member_id(id, 0x108), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Stage, D3DTEXTURESTAGESTATETYPE Type, DWORD *pValue)");
	SetType(get_member_id(id, 0x10C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Stage, D3DTEXTURESTAGESTATETYPE Type, DWORD Value)");
	SetType(get_member_id(id, 0x110), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD *pValue)");
	SetType(get_member_id(id, 0x114), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD Value)");
	SetType(get_member_id(id, 0x118), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD *pNumPasses)");
	SetType(get_member_id(id, 0x11C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT PaletteNumber, const PALETTEENTRY *pEntries)");
	SetType(get_member_id(id, 0x120), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT PaletteNumber, PALETTEENTRY *pEntries)");
	SetType(get_member_id(id, 0x124), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT PaletteNumber)");
	SetType(get_member_id(id, 0x128), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT *PaletteNumber)");
	SetType(get_member_id(id, 0x12C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const RECT *pRect)");
	SetType(get_member_id(id, 0x130), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, RECT *pRect)");
	SetType(get_member_id(id, 0x134), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, BOOL bSoftware)");
	SetType(get_member_id(id, 0x138), "BOOL (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x13C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, float nSegments)");
	SetType(get_member_id(id, 0x140), "float (__stdcall *)(IDirect3DDevice9 *This)");
	SetType(get_member_id(id, 0x144), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE PrimitiveType, UINT StartVertex, UINT PrimitiveCount)");
	SetType(get_member_id(id, 0x148), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE, INT BaseVertexIndex, UINT MinVertexIndex, UINT NumVertices, UINT startIndex, UINT primCount)");
	SetType(get_member_id(id, 0x14C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE PrimitiveType, UINT PrimitiveCount, const void *pVertexStreamZeroData, UINT VertexStreamZeroStride)");
	SetType(get_member_id(id, 0x150), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE PrimitiveType, UINT MinVertexIndex, UINT NumVertices, UINT PrimitiveCount, const void *pIndexData, D3DFORMAT IndexDataFormat, const void *pVertexStreamZeroData, UINT VertexStreamZeroStride)");
	SetType(get_member_id(id, 0x154), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT SrcStartIndex, UINT DestIndex, UINT VertexCount, IDirect3DVertexBuffer9 *pDestBuffer, IDirect3DVertexDeclaration9 *pVertexDecl, DWORD Flags)");
	SetType(get_member_id(id, 0x158), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const D3DVERTEXELEMENT9 *pVertexElements, IDirect3DVertexDeclaration9 **ppDecl)");
	SetType(get_member_id(id, 0x15C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DVertexDeclaration9 *pDecl)");
	SetType(get_member_id(id, 0x160), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DVertexDeclaration9 **ppDecl)");
	SetType(get_member_id(id, 0x164), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD FVF)");
	SetType(get_member_id(id, 0x168), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, DWORD *pFVF)");
	SetType(get_member_id(id, 0x16C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const DWORD *pFunction, IDirect3DVertexShader9 **ppShader)");
	SetType(get_member_id(id, 0x170), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DVertexShader9 *pShader)");
	SetType(get_member_id(id, 0x174), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DVertexShader9 **ppShader)");
	SetType(get_member_id(id, 0x178), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, const float *pConstantData, UINT Vector4fCount)");
	SetType(get_member_id(id, 0x17C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, float *pConstantData, UINT Vector4fCount)");
	SetType(get_member_id(id, 0x180), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, const int *pConstantData, UINT Vector4iCount)");
	SetType(get_member_id(id, 0x184), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, int *pConstantData, UINT Vector4iCount)");
	SetType(get_member_id(id, 0x188), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, const BOOL *pConstantData, UINT BoolCount)");
	SetType(get_member_id(id, 0x18C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, BOOL *pConstantData, UINT BoolCount)");
	SetType(get_member_id(id, 0x190), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StreamNumber, IDirect3DVertexBuffer9 *pStreamData, UINT OffsetInBytes, UINT Stride)");
	SetType(get_member_id(id, 0x194), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StreamNumber, IDirect3DVertexBuffer9 **ppStreamData, UINT *OffsetInBytes, UINT *pStride)");
	SetType(get_member_id(id, 0x198), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StreamNumber, UINT Divider)");
	SetType(get_member_id(id, 0x19C), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StreamNumber, UINT *Divider)");
	SetType(get_member_id(id, 0x1A0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DIndexBuffer9 *pIndexData)");
	SetType(get_member_id(id, 0x1A4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DIndexBuffer9 **ppIndexData)");
	SetType(get_member_id(id, 0x1A8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, const DWORD *pFunction, IDirect3DPixelShader9 **ppShader)");
	SetType(get_member_id(id, 0x1AC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DPixelShader9 *pShader)");
	SetType(get_member_id(id, 0x1B0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, IDirect3DPixelShader9 **ppShader)");
	SetType(get_member_id(id, 0x1B4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, const float *pConstantData, UINT Vector4fCount)");
	SetType(get_member_id(id, 0x1B8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, float *pConstantData, UINT Vector4fCount)");
	SetType(get_member_id(id, 0x1BC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, const int *pConstantData, UINT Vector4iCount)");
	SetType(get_member_id(id, 0x1C0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, int *pConstantData, UINT Vector4iCount)");
	SetType(get_member_id(id, 0x1C4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, const BOOL *pConstantData, UINT BoolCount)");
	SetType(get_member_id(id, 0x1C8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT StartRegister, BOOL *pConstantData, UINT BoolCount)");
	SetType(get_member_id(id, 0x1CC), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Handle, const float *pNumSegs, const D3DRECTPATCH_INFO *pRectPatchInfo)");
	SetType(get_member_id(id, 0x1D0), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Handle, const float *pNumSegs, const D3DTRIPATCH_INFO *pTriPatchInfo)");
	SetType(get_member_id(id, 0x1D4), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, UINT Handle)");
	SetType(get_member_id(id, 0x1D8), "HRESULT (__stdcall *)(IDirect3DDevice9 *This, D3DQUERYTYPE Type, IDirect3DQuery9 **ppQuery)");
	SetType(get_member_id(id, 0x1DC), "D3DDEVICE_CREATION_PARAMETERS");
	SetType(get_member_id(id, 0x1EC), "D3DPRESENT_PARAMETERS");
	SetType(get_member_id(id, 0x224), "D3DDISPLAYMODE");
	SetType(get_member_id(id, 0x234), "D3DCAPS9");
	SetType(get_member_id(id, 0x364), "UINT");
	SetType(get_member_id(id, 0x368), "UINT");
	SetType(get_member_id(id, 0x36C), "UINT");
	SetType(get_member_id(id, 0x370), "UINT");
	SetType(get_member_id(id, 0x374), "UINT");
	SetType(get_member_id(id, 0x378), "UINT");
	SetType(get_member_id(id, 0x37C), "UINT");
	SetType(get_member_id(id, 0x380), "D3DVIEWPORT9");
	SetType(get_member_id(id, 0x398), "D3DMATRIX");
	SetType(get_member_id(id, 0x3D8), "D3DMATRIX");
	SetType(get_member_id(id, 0x418), "D3DMATRIX");
	SetType(get_member_id(id, 0x458), "D3DMATRIX[8]");
	SetType(get_member_id(id, 0x658), "DWORD");
	SetType(get_member_id(id, 0x65C), "UINT");
	SetType(get_member_id(id, 0x660), "DWORD");
	SetType(get_member_id(id, 0x664), "DWORD");
	SetType(get_member_id(id, 0x668), "BOOL");
	SetType(get_member_id(id, 0x66C), "D3DMATERIAL9");
	SetType(get_member_id(id, 0x6B0), "D3DLIGHT9[16]");
	SetType(get_member_id(id, 0xD30), "BOOL[16]");
	SetType(get_member_id(id, 0xD70), "D3DGAMMARAMP");
	SetType(get_member_id(id, 0x1370), "RECT");
	SetType(get_member_id(id, 0x1380), "BOOL");
	id = get_struc_id("D3DDEVICE_CREATION_PARAMETERS");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "D3DDEVTYPE");
	SetType(get_member_id(id, 0x8), "HWND");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("D3DDISPLAYMODE");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "UINT");
	SetType(get_member_id(id, 0x8), "UINT");
	SetType(get_member_id(id, 0xC), "D3DFORMAT");
	id = get_struc_id("D3DVIEWPORT9");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	id = get_struc_id("D3DMATRIX");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x4), "D3DVALUE");
	SetType(get_member_id(id, 0x8), "D3DVALUE");
	SetType(get_member_id(id, 0xC), "D3DVALUE");
	SetType(get_member_id(id, 0x10), "D3DVALUE");
	SetType(get_member_id(id, 0x14), "D3DVALUE");
	SetType(get_member_id(id, 0x18), "D3DVALUE");
	SetType(get_member_id(id, 0x1C), "D3DVALUE");
	SetType(get_member_id(id, 0x20), "D3DVALUE");
	SetType(get_member_id(id, 0x24), "D3DVALUE");
	SetType(get_member_id(id, 0x28), "D3DVALUE");
	SetType(get_member_id(id, 0x2C), "D3DVALUE");
	SetType(get_member_id(id, 0x30), "D3DVALUE");
	SetType(get_member_id(id, 0x34), "D3DVALUE");
	SetType(get_member_id(id, 0x38), "D3DVALUE");
	SetType(get_member_id(id, 0x3C), "D3DVALUE");
	id = get_struc_id("D3DMATERIAL9");
	SetType(get_member_id(id, 0x0), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x10), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x20), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x30), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x40), "float");
	id = get_struc_id("D3DCOLORVALUE");
	SetType(get_member_id(id, 0x0), "union _D3DCOLORVALUE::$79F58B462609A8478E0156545A48EE38");
	SetType(get_member_id(id, 0x4), "union _D3DCOLORVALUE::$1870E08CD1297AF1183F2104CF0E68BB");
	SetType(get_member_id(id, 0x8), "union _D3DCOLORVALUE::$89D0C02BD3EDF7E42F4E64602AB90C16");
	SetType(get_member_id(id, 0xC), "union _D3DCOLORVALUE::$5FBE30F4B5EDEA02F5A8FF631684CD5C");
	id = get_struc_id("_D3DCOLORVALUE::$79F58B462609A8478E0156545A48EE38");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("_D3DCOLORVALUE::$1870E08CD1297AF1183F2104CF0E68BB");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("_D3DCOLORVALUE::$89D0C02BD3EDF7E42F4E64602AB90C16");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("_D3DCOLORVALUE::$5FBE30F4B5EDEA02F5A8FF631684CD5C");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("D3DLIGHT9");
	SetType(get_member_id(id, 0x0), "D3DLIGHTTYPE");
	SetType(get_member_id(id, 0x4), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x14), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x24), "D3DCOLORVALUE");
	SetType(get_member_id(id, 0x34), "D3DVECTOR");
	SetType(get_member_id(id, 0x40), "D3DVECTOR");
	SetType(get_member_id(id, 0x4C), "float");
	SetType(get_member_id(id, 0x50), "float");
	SetType(get_member_id(id, 0x54), "float");
	SetType(get_member_id(id, 0x58), "float");
	SetType(get_member_id(id, 0x5C), "float");
	SetType(get_member_id(id, 0x60), "float");
	SetType(get_member_id(id, 0x64), "float");
	id = get_struc_id("D3DVECTOR");
	SetType(get_member_id(id, 0x0), "union _D3DVECTOR::$681612F8DC6DDCA79CBEF9228C3A67A0");
	SetType(get_member_id(id, 0x4), "union _D3DVECTOR::$2970DA2ECFB38188FCB670891BDDBDFA");
	SetType(get_member_id(id, 0x8), "union _D3DVECTOR::$3781A3F6A2280FF9BE972B852E87FD21");
	id = get_struc_id("_D3DVECTOR::$681612F8DC6DDCA79CBEF9228C3A67A0");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("_D3DVECTOR::$2970DA2ECFB38188FCB670891BDDBDFA");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("_D3DVECTOR::$3781A3F6A2280FF9BE972B852E87FD21");
	SetType(get_member_id(id, 0x0), "D3DVALUE");
	SetType(get_member_id(id, 0x1), "D3DVALUE");
	id = get_struc_id("D3DGAMMARAMP");
	SetType(get_member_id(id, 0x0), "WORD[256]");
	SetType(get_member_id(id, 0x200), "WORD[256]");
	SetType(get_member_id(id, 0x400), "WORD[256]");
	id = get_struc_id("IDirectInput8AVtbl");
	SetType(get_member_id(id, 0x0), "HRESULT (__stdcall *)(IDirectInput8A *This, const IID *const riid, LPVOID *ppvObj)");
	SetType(get_member_id(id, 0x4), "ULONG (__stdcall *)(IDirectInput8A *This)");
	SetType(get_member_id(id, 0x8), "ULONG (__stdcall *)(IDirectInput8A *This)");
	SetType(get_member_id(id, 0xC), "HRESULT (__stdcall *)(IDirectInput8A *This, const GUID *const, LPDIRECTINPUTDEVICE8A *, LPUNKNOWN)");
	SetType(get_member_id(id, 0x10), "HRESULT (__stdcall *)(IDirectInput8A *This, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD)");
	SetType(get_member_id(id, 0x14), "HRESULT (__stdcall *)(IDirectInput8A *This, const GUID *const)");
	SetType(get_member_id(id, 0x18), "HRESULT (__stdcall *)(IDirectInput8A *This, HWND, DWORD)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__stdcall *)(IDirectInput8A *This, HINSTANCE, DWORD)");
	SetType(get_member_id(id, 0x20), "HRESULT (__stdcall *)(IDirectInput8A *This, const GUID *const, LPCSTR, LPGUID)");
	SetType(get_member_id(id, 0x24), "HRESULT (__stdcall *)(IDirectInput8A *This, LPCSTR, LPDIACTIONFORMATA, LPDIENUMDEVICESBYSEMANTICSCBA, LPVOID, DWORD)");
	SetType(get_member_id(id, 0x28), "HRESULT (__stdcall *)(IDirectInput8A *This, LPDICONFIGUREDEVICESCALLBACK, LPDICONFIGUREDEVICESPARAMSA, DWORD, LPVOID)");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"_SCOPETABLE_ENTRY",0);
	id = add_struc(-1,"CPPEH_RECORD",0);
	id = add_struc(-1,"_EH3_EXCEPTION_REGISTRATION",0);
	id = add_struc(-1,"LARGE_INTEGER",1);
	id = add_struc(-1,"_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E",0);
	id = add_struc(-1,"_WIN32_FIND_DATAA",0);
	id = add_struc(-1,"FILETIME",0);
	id = add_struc(-1,"PROCESSENTRY32",0);
	id = add_struc(-1,"tagRECT",0);
	id = add_struc(-1,"tagMSG",0);
	id = add_struc(-1,"POINT",0);
	id = add_struc(-1,"_OSVERSIONINFOA",0);
	id = add_struc(-1,"tagPOINT",0);
	id = add_struc(-1,"tagPAINTSTRUCT",0);
	id = add_struc(-1,"RECT",0);
	id = add_struc(-1,"PAINTSTRUCT",0);
	id = add_struc(-1,"IID",0);
	id = add_struc(-1,"WNDCLASSEXA",0);
	id = add_struc(-1,"_SYSTEM_INFO",0);
	id = add_struc(-1,"_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F",1);
	id = add_struc(-1,"_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9",0);
	id = add_struc(-1,"_RTL_CRITICAL_SECTION",0);
	id = add_struc(-1,"MSG",0);
	id = add_struc(-1,"timecaps_tag",0);
	id = add_struc(-1,"_NCB",0);
	id = add_struc(-1,"WSAData",0);
	id = add_struc(-1,"fd_set",0);
	id = add_struc(-1,"timeval",0);
	id = add_struc(-1,"sockaddr",0);
	id = add_struc(-1,"lineextensionid_tag",0);
	id = add_struc(-1,"varstring_tag",0);
	id = add_struc(-1,"linecallparams_tag",0);
	id = add_struc(-1,"LINEDIALPARAMS",0);
	id = add_struc(-1,"linedevcaps_tag",0);
	id = add_struc(-1,"GUID",0);
	id = add_struc(-1,"_COMMTIMEOUTS",0);
	id = add_struc(-1,"_COMMCONFIG",0);
	id = add_struc(-1,"DCB",0);
	id = add_struc(-1,"_FILETIME",0);
	id = add_struc(-1,"_TIME_ZONE_INFORMATION",0);
	id = add_struc(-1,"SYSTEMTIME",0);
	id = add_struc(-1,"_SYSTEMTIME",0);
	id = add_struc(-1,"_SECURITY_ATTRIBUTES",0);
	id = add_struc(-1,"_STARTUPINFOA",0);
	id = add_struc(-1,"_cpinfo",0);
	id = add_struc(-1,"_MEMORY_BASIC_INFORMATION",0);
	id = add_struc(-1,"_ThrowInfo",0);
	id = add_struc(-1,"FILE",0);
	id = add_struc(-1,"_diskfree_t",0);
	id = add_struc(-1,"tm",0);
	id = add_struc(-1,"FuncInfoV1",0);
	id = add_struc(-1,"UnwindMapEntry",0);
	id = add_struc(-1,"TryBlockMapEntry",0);
	id = add_struc(-1,"HandlerType",0);
	id = add_struc(-1,"ULARGE_INTEGER",1);
	id = add_struc(-1,"_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC",0);
	id = add_struc(-1,"FuncInfo_V1",0);
	id = add_struc(-1,"DIDATAFORMAT",0);
	id = add_struc(-1,"_SYSTEM_INFO::$058745E319A46827965CDE7F37238831",1);
	id = add_struc(-1,"_SYSTEM_INFO::$058745E319A46827965CDE7F37238831::$AA04DEB0C6383F89F13D312A174572A9",0);
	id = add_struc(-1,"_DCB",0);
	id = add_struc(-1,"_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9",0);
	id = add_struc(-1,"_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2",1);
	id = add_struc(-1,"CCarHeadlightsPosition",0);
	id = add_struc(-1,"LanguageData",0);
	id = add_struc(-1,"LanguageFileData",0);
	id = add_struc(-1,"LanguageStruct7F6DE8",0);
	id = add_struc(-1,"LanguageFontData",0);
	id = add_struc(-1,"LoadedLanguage",0);
	id = add_struc(-1,"LanguageTableEntry",0);
	id = add_struc(-1,"LanguageConversionTable",0);
	id = add_struc(-1,"BinSectionHeader",0);
	id = add_struc(-1,"BinSection",0);
	id = add_struc(-1,"BinDataLanguage39000",0);
	id = add_struc(-1,"PoolLink",0);
	set_struc_cmt(id,"link is a circle (last entry's next is the first entry; first entry's prev is the last entry)",1);
	id = add_struc(-1,"PoolControl",0);
	id = add_struc(-1,"Pool",0);
	set_struc_cmt(id,"The pool entries are located at the end of this struct; so variables of this struct type are of {sizeof({struct Pool})+{struct Pool+24}*{struct Pool+28}}? ||| code,ref,ref,ref",0);
	id = add_struc(-1,"bPNodeSlotPoolEntry",0);
	id = add_struc(-1,"PoolEntry",0);
	id = add_struc(-1,"LevelSorterPoolEntry",0);
	id = add_struc(-1,"bFileSystemPoolEntry",0);
	set_struc_cmt(id,"This struct's size should be 0xF0? (to be confirmed again)",1);
	id = add_struc(-1,"ResourceFileSlotPoolEntry",0);
	id = add_struc(-1,"QueuedFileSlotPoolEntry",0);
	id = add_struc(-1,"structFor440AD0",0);
	id = add_struc(-1,"substructFor440AD0",0);
	id = add_struc(-1,"substructFor440AD0common",0);
	id = add_struc(-1,"substructFor440AD0type1",0);
	id = add_struc(-1,"substructFor440AD0type2",0);
	id = add_struc(-1,"substructFor440AD0type3",0);
	id = add_struc(-1,"substructFor440AD0type4",0);
	id = add_struc(-1,"substructFor440AD0type5",0);
	id = add_struc(-1,"substructFor440AD0type6",0);
	id = add_struc(-1,"D3DVSHADERCAPS2_0",0);
	id = add_struc(-1,"DialogInfo",0);
	id = add_struc(-1,"FNGData",0);
	id = add_struc(-1,"FNGShowData",0);
	id = add_struc(-1,"FNGShowData_Arg2",1);
	id = add_struc(-1,"FNGInfo",0);
	set_struc_cmt(id,"size unknown",0);
	id = add_struc(-1,"CheatScreenData",0);
	id = add_struc(-1,"CheatData",0);
	set_struc_cmt(id,"size 0x34",1);
	id = add_struc(-1,"CriticalSectionWrapper_2",0);
	id = add_struc(-1,"CRealCoreDrive",0);
	id = add_struc(-1,"MouseData",0);
	id = add_struc(-1,"QWORDSTRUCT",0);
	id = add_struc(-1,"IDirectInputDevice8",0);
	id = add_struc(-1,"IDirectInputDevice8vtable",0);
	id = add_struc(-1,"D3DPSHADERCAPS2_0",0);
	id = add_struc(-1,"D3DCAPS9",0);
	id = add_struc(-1,"D3DADAPTER_IDENTIFIER9",0);
	id = add_struc(-1,"IDirectInput8",0);
	id = add_struc(-1,"IDirectInput8vtable",0);
	id = add_struc(-1,"D3DPRESENT_PARAMETERS",0);
	id = add_struc(-1,"WIN32_FIND_DATAA",0);
	id = add_struc(-1,"DIMOUSESTATE2",0);
	id = add_struc(-1,"tagSIZE",0);
	id = add_struc(-1,"_SIZE",0);
	id = add_struc(-1,"_POS",0);
	id = add_struc(-1,"CRealCoreDrive_vtable",0);
	id = add_struc(-1,"struct6F79AFesi",0);
	id = add_struc(-1,"struct6F7195",0);
	id = add_struc(-1,"struct6F7195_8AD610_ptr0",0);
	id = add_struc(-1,"struct6F7195_8AD610_ptr0_vtable",0);
	id = add_struc(-1,"struct6F7195_8AD610_ptr0_ptrC",0);
	id = add_struc(-1,"struct8AD610_base",0);
	id = add_struc(-1,"struct8AD610",0);
	id = add_struc(-1,"struct8AD610LinkedListNode",0);
	id = add_struc(-1,"struct8AD610LinkedList",0);
	id = add_struc(-1,"LinkedListNode",0);
	id = add_struc(-1,"LinkedList",0);
	id = add_struc(-1,"CriticalSectionWrapper",0);
	id = add_struc(-1,"EventWrapper",0);
	id = add_struc(-1,"struct8AD2B8",0);
	id = add_struc(-1,"BinSectionLoadFunc",0);
	id = add_struc(-1,"BinSectionUnloadFunc",0);
	id = add_struc(-1,"BinSectionHandler",0);
	id = add_struc(-1,"BinSectionMagicMapEntry",0);
	id = add_struc(-1,"OL850080",0);
	set_struc_cmt(id,"unsure about complete size? make sure to undefine fields in ProfileData before expanding!!",1);
	id = add_struc(-1,"OL86A858",0);
	id = add_struc(-1,"OLMainStruct",0);
	id = add_struc(-1,"OL836370",0);
	id = add_struc(-1,"OL138",0);
	id = add_struc(-1,"TextboxData",0);
	id = add_struc(-1,"FocusedTextbox",0);
	id = add_struc(-1,"UIMessage",0);
	id = add_struc(-1,"PCHelpBarButton",0);
	id = add_struc(-1,"FNGObject$vtable",0);
	id = add_struc(-1,"FNGObject",0);
	id = add_struc(-1,"OptionsPCControllerFNGObject",0);
	id = add_struc(-1,"BuyPerformancePartsFNGObject",0);
	id = add_struc(-1,"CareerCarLotFNGObject",0);
	id = add_struc(-1,"CarSelectCarEntry",0);
	id = add_struc(-1,"s734",0);
	id = add_struc(-1,"s735_100",0);
	id = add_struc(-1,"s735",0);
	id = add_struc(-1,"MenuCarInstance",0);
	id = add_struc(-1,"s483",0);
	set_struc_cmt(id,"{802DE8} and {803338} ||| ref,ref",0);
	id = add_struc(-1,"MenuCarInstance_10",0);
	id = add_struc(-1,"MenuCarInstance_10_2E0",0);
	id = add_struc(-1,"Tmp4DF9C0ListEntry",0);
	set_struc_cmt(id,"allocated at 513CF8 in {513C50}, used & free'd in {4DF9C0} ||| ref,ref",0);
	id = add_struc(-1,"UIProgressBar$vtable",0);
	id = add_struc(-1,"UIProgressBarInitializeElementsConfig",0);
	id = add_struc(-1,"UIProgressBar",0);
	id = add_struc(-1,"CareerCarSelectFNGObject",0);
	id = add_struc(-1,"CareerCribFNGObject",0);
	id = add_struc(-1,"CareerWorldMapFNGObject",0);
	id = add_struc(-1,"ChooseCustomHUDFNGObject",0);
	id = add_struc(-1,"ChooseCustomizeCategoryFNGObject",0);
	id = add_struc(-1,"ChoosePaintCategoryFNGObject",0);
	id = add_struc(-1,"ChoosePerformanceCategoryFNGObject",0);
	id = add_struc(-1,"ChooseRimBrandFNGObject",0);
	id = add_struc(-1,"ChooseSpinnerFNGObject",0);
	id = add_struc(-1,"ChooseUniquePartFNGObject",0);
	set_struc_cmt(id,"unknown size",0);
	id = add_struc(-1,"ChooseVinylLayerFNGObject",0);
	id = add_struc(-1,"CreditsFNGObject",0);
	id = add_struc(-1,"CribRewardOptionsMainFNGObject",0);
	id = add_struc(-1,"CustomHUDOverlayFNGObject",0);
	id = add_struc(-1,"CustomNeonMainFNGObject",0);
	id = add_struc(-1,"DateEntryFNGObject",0);
	id = add_struc(-1,"DebugCarCustomizeFNGObject",0);
	id = add_struc(-1,"DecalMainFNGObject",0);
	id = add_struc(-1,"DecalsOverlayFNGObject",0);
	id = add_struc(-1,"DeleteprofileFNGObject",0);
	id = add_struc(-1,"DemoLegalFNGObject",0);
	id = add_struc(-1,"DemoPSAFNGObject",0);
	id = add_struc(-1,"DiscErrorPCFngObject",0);
	id = add_struc(-1,"EATraxJukeboxFNGObject",0);
	id = add_struc(-1,"EngageEventDialogFNGObject",0);
	id = add_struc(-1,"EngageRaceDialogFNGObject",0);
	id = add_struc(-1,"GenericPartsBrowserFNGObject",0);
	id = add_struc(-1,"ICEMAINFNGObject",0);
	id = add_struc(-1,"IGPlayMovieFNGObject",0);
	id = add_struc(-1,"InGameWorldMapFNGObject",0);
	id = add_struc(-1,"EngageShopDialogFNGObject",0);
	id = add_struc(-1,"GarageMainFNGObject",0);
	id = add_struc(-1,"GarageMainFNGObject_234",0);
	id = add_struc(-1,"GarageMainFNGObject_1D8",0);
	id = add_struc(-1,"LoadingTipsFNGObject",0);
	id = add_struc(-1,"LSDemoWarningFNGObject",0);
	id = add_struc(-1,"LSEALogoFNGObject",0);
	id = add_struc(-1,"LSIntroFMVFNGObject",0);
	id = add_struc(-1,"LSPSAMovieFNGObject",0);
	id = add_struc(-1,"LSSplashFNGObject",0);
	id = add_struc(-1,"LSTHXMovieFNGObject",0);
	id = add_struc(-1,"MagazineBackFNGObject",0);
	id = add_struc(-1,"MagazineRewardFNGObject",0);
	id = add_struc(-1,"MagazineSelectFNGObject",0);
	id = add_struc(-1,"MagazineViewFNGObject",0);
	id = add_struc(-1,"MCListFNGObject",0);
	id = add_struc(-1,"NeonPartsOverlayFNGObject",0);
	id = add_struc(-1,"OLCarLotFNGObject",0);
	id = add_struc(-1,"OLChallengeFNGObject",0);
	id = add_struc(-1,"OLCreateUserFNGObject",0);
	id = add_struc(-1,"OLDisconnectBGFNGObject",0);
	id = add_struc(-1,"OLDisconnectFNGObject",0);
	id = add_struc(-1,"OLEALoginFNGObject",0);
	id = add_struc(-1,"WheelOptionsFNGObject",0);
	id = add_struc(-1,"VirtualKeyboardFNGObject",0);
	id = add_struc(-1,"TwoPPressStartFNGObject",0);
	id = add_struc(-1,"TrailersFNGObject",0);
	id = add_struc(-1,"ShowcaseDPADFNGObject",0);
	id = add_struc(-1,"ChoosePerformancePackageFNGObject",0);
	id = add_struc(-1,"DebugTestFNGObject",0);
	id = add_struc(-1,"DemoESRBFNGObject",0);
	id = add_struc(-1,"MCBootupFNGObject",0);
	id = add_struc(-1,"MCBackgroundFNGObject",0);
	id = add_struc(-1,"MCMainFNGObject",0);
	id = add_struc(-1,"OLAgeVerifFNGObject",0);
	id = add_struc(-1,"OLCreateUser2FNGObject",0);
	id = add_struc(-1,"OLEAMessengerFNGObject",0);
	id = add_struc(-1,"OLFeedbackFNGObject",0);
	id = add_struc(-1,"OLFiltersFNGObject",0);
	id = add_struc(-1,"OLForgotAccountNameFNGObject",0);
	id = add_struc(-1,"OLFriendDialogueFNGObject",0);
	id = add_struc(-1,"OLGameRoomclientFNGObject",0);
	id = add_struc(-1,"OLGameRoomhostFNGObject",0);
	id = add_struc(-1,"OLISPConnectFNGObject",0);
	id = add_struc(-1,"OLMAINFNGObject",0);
	id = add_struc(-1,"OLNewsFNGObject",0);
	id = add_struc(-1,"OLPassworFNGObject",0);
	id = add_struc(-1,"OLPreRaceStartFNGObject",0);
	id = add_struc(-1,"OLRankingsFNGObject",0);
	id = add_struc(-1,"OLRankingsMonthlyFNGObject",0);
	id = add_struc(-1,"OLRankingsOverallFNGObject",0);
	id = add_struc(-1,"OLRankingsPersonalFNGObject",0);
	id = add_struc(-1,"OLSelectPersonaFNGObject",0);
	id = add_struc(-1,"OLUseExistingFNGObject",0);
	id = add_struc(-1,"OLViewCareerFNGObject",0);
	id = add_struc(-1,"OLViewCarFNGObject",0);
	id = add_struc(-1,"OLViewTrackFNGObject",0);
	id = add_struc(-1,"OLWebOfferFNGObject",0);
	id = add_struc(-1,"OLWebOffer2FNGObject",0);
	id = add_struc(-1,"OLXFindResultsFNGObject",0);
	id = add_struc(-1,"OLXMessageFNGObject",0);
	id = add_struc(-1,"OptionsFNGObject",0);
	id = add_struc(-1,"OptionsMainFNGObject",0);
	id = add_struc(-1,"PaintFNGObject",0);
	id = add_struc(-1,"PauseFNGObject",0);
	id = add_struc(-1,"PauseOptionsFNGObject",0);
	id = add_struc(-1,"PauseOptionsMainFNGObject",0);
	id = add_struc(-1,"PCCustomizeOptionFNGObject",0);
	id = add_struc(-1,"PCLANFNGObject",0);
	id = add_struc(-1,"PCLANServerSelectFNGObject",0);
	id = add_struc(-1,"PCOLGameRoomFNGObject",0);
	id = add_struc(-1,"PCOLLobbyFNGObject",0);
	id = add_struc(-1,"PCOLSEARCHFNGObject",0);
	id = add_struc(-1,"PerformanceBrandSelectFNGObject",0);
	id = add_struc(-1,"PerformanceDynoChartFNGObject",0);
	id = add_struc(-1,"PerformanceDynoMAINFNGObject",0);
	id = add_struc(-1,"PerformanceDynoResultsFNGObject",0);
	id = add_struc(-1,"PerformanceTuningGraph",0);
	id = add_struc(-1,"PerformanceTuningMaster",0);
	id = add_struc(-1,"PerformanceTuningSetting",0);
	id = add_struc(-1,"PerformanceTuningSlidersFNGObject",0);
	id = add_struc(-1,"PostRaceFNGObject",0);
	id = add_struc(-1,"PostRaceResultsFNGObject",0);
	id = add_struc(-1,"PostRaceRewardFNGObject",0);
	id = add_struc(-1,"PostRaceStatsFNGObject",0);
	id = add_struc(-1,"PostRaceTournResultsFNGObject",0);
	id = add_struc(-1,"PostRaceTournStandingsFNGObject",0);
	id = add_struc(-1,"ProfileManagerFNGObject",0);
	id = add_struc(-1,"QRModeOptionsFNGObject",0);
	id = add_struc(-1,"QRModeSelectFNGObject",0);
	id = add_struc(-1,"CarSelectFNGObject",0);
	set_struc_cmt(id,"used for both QR and OL car select AND customize car select (career car select seems to have a separate screen)",0);
	id = add_struc(-1,"QRTrackSelectFNGObject",0);
	id = add_struc(-1,"QuickRaceCarSelectFNGObject",0);
	id = add_struc(-1,"ReplayControlFNGObject",0);
	id = add_struc(-1,"RewardsSponsorFNGObject",0);
	id = add_struc(-1,"RimsBrowserFNGObject",0);
	id = add_struc(-1,"ShowcasePreviewFNGObject",0);
	id = add_struc(-1,"SponsorPopupFNGObject",0);
	id = add_struc(-1,"IconScrollerIcon",0);
	set_struc_cmt(id,"size 48",0);
	id = add_struc(-1,"SponsorIconScrollerIcon",0);
	set_struc_cmt(id,"size 4C",0);
	id = add_struc(-1,"SponsorshipnewFNGObject",0);
	id = add_struc(-1,"StartCareerFNGObject",0);
	id = add_struc(-1,"StatusCareerFNGObject",0);
	id = add_struc(-1,"StatusDVDFNGObject",0);
	id = add_struc(-1,"StatusMasterFNGObject",0);
	id = add_struc(-1,"StatusRegionFNGObject",0);
	id = add_struc(-1,"LSChineseHealthFNGObject",0);
	id = add_struc(-1,"LSBlankMovieFNGObject",0);
	id = add_struc(-1,"LSLangSelectFNGObject",0);
	set_struc_cmt(id,"not sure if it has other fields or not",1);
	id = add_struc(-1,"IconScrollerFNGObject$vtable",0);
	id = add_struc(-1,"IconScrollerFNGObject",0);
	set_struc_cmt(id,"vtable {7974D4} ||| ref",0);
	id = add_struc(-1,"IconScrollerBase$vtable",0);
	set_struc_cmt(id,"most likely 79C0F4",1);
	id = add_struc(-1,"IconScrollerBase",0);
	id = add_struc(-1,"IconScroller",0);
	id = add_struc(-1,"MainFNGObject",0);
	id = add_struc(-1,"PCHelpBarFNGObject",0);
	id = add_struc(-1,"DialogFNGObject",0);
	id = add_struc(-1,"ChyronIGFNGObject",0);
	id = add_struc(-1,"IcePartsOverlayFNGObject",0);
	id = add_struc(-1,"SMSMailboxFNGObject",0);
	id = add_struc(-1,"MailBoxRelated1",0);
	id = add_struc(-1,"MailBoxRelated3",0);
	set_struc_cmt(id,"Could this be the same as {struct MailBoxRelated1}? |||ref",0);
	id = add_struc(-1,"MailBoxRelated2",0);
	id = add_struc(-1,"MailBoxRelated4",0);
	set_struc_cmt(id,"Could this be {struct MailBoxRelated2}? ||| ref",0);
	id = add_struc(-1,"Mailbox",0);
	id = add_struc(-1,"ObjectLink",0);
	set_struc_cmt(id,"for example in {struct BootflowEntry} this is at offset 4, so each element links to another {struct BootflowEntry} but you'd need to subtract 4 to get to the base struct from the link pointer ||| ref,ref\n\noften (if not always), the ObjectLink instance found in the struct that owns it, is a dummy entry that just serves as an entrypoint and the actual first entry is at this->link->next",0);
	id = add_struc(-1,"SmsData",0);
	id = add_struc(-1,"SmsDataData",1);
	id = add_struc(-1,"SmsMessage",0);
	id = add_struc(-1,"SmsMessageList",0);
	id = add_struc(-1,"SmsListEntry",0);
	id = add_struc(-1,"EngageMessageDialogFNGObject",0);
	id = add_struc(-1,"ScrollingThing",0);
	set_struc_cmt(id,"see {542AC0} for a list of basenames ({%s_Backing} = {basename_Backing}) ||| ref,code,code",0);
	id = add_struc(-1,"SubScrollingThing",0);
	set_struc_cmt(id,"something that uses {struct ScrollingThing} ||| ref\nsize may be bigger, unknown",0);
	id = add_struc(-1,"SubScrollingThing$vtable",0);
	id = add_struc(-1,"CommonFNGObjectStructA",0);
	set_struc_cmt(id,"size 54",0);
	id = add_struc(-1,"WideCharString",0);
	id = add_struc(-1,"ControllerOptionsRelated",0);
	set_struc_cmt(id,"deals with UI elements of pc controller options (and more?)",1);
	id = add_struc(-1,"ControllerOptionsRelated$vtable",0);
	id = add_struc(-1,"ControllerStruct874C40_58",0);
	set_struc_cmt(id,"size 10",0);
	id = add_struc(-1,"ControllerStruct874C40_158",0);
	set_struc_cmt(id,"size 10",0);
	id = add_struc(-1,"ControllerStruct874C40_1D8",0);
	set_struc_cmt(id,"size 10",0);
	id = add_struc(-1,"ControllerStruct874C40_D8",0);
	set_struc_cmt(id,"size 10",0);
	id = add_struc(-1,"ControllerStruct874C40",0);
	set_struc_cmt(id,"size 370",0);
	id = add_struc(-1,"ControllerStruct835930",0);
	set_struc_cmt(id,"size C",0);
	id = add_struc(-1,"U2RECT",0);
	id = add_struc(-1,"UIPos",0);
	id = add_struc(-1,"UIElement_Animation",0);
	id = add_struc(-1,"UIElement",0);
	set_struc_cmt(id,"How big is this base struct?? 0x5C or 0x60 (can't be more because see {struct UILabel} ||| ref",0);
	id = add_struc(-1,"UIElementType1",0);
	id = add_struc(-1,"UILabel",0);
	set_struc_cmt(id,"UI element type 2",1);
	id = add_struc(-1,"UIContainer",0);
	set_struc_cmt(id,"UI element type 5",1);
	id = add_struc(-1,"UIData",0);
	id = add_struc(-1,"UIDataC",0);
	id = add_struc(-1,"UIData$vtable",0);
	id = add_struc(-1,"UIData_field8",0);
	id = add_struc(-1,"UIData_field8_8",0);
	id = add_struc(-1,"UIData_field8_412C",0);
	set_struc_cmt(id,"inherits from {struct NamedLinkNode} where the name is an fngName ||| ref",0);
	id = add_struc(-1,"NamedLinkNode",0);
	id = add_struc(-1,"UIData_field8_4134",0);
	id = add_struc(-1,"UIDLA",0);
	set_struc_cmt(id,"I'm done with names that have lots of \"field\" and numbers, this is short for \"UIDataLinkNodeA\"\n\nit looks like this class has two parents, multiple inheritance fun!!\n\nan instance is made for this for each UI element type (1-11)",0);
	id = add_struc(-1,"UIDLA_ENTRY",0);
	id = add_struc(-1,"FNGInfoList",0);
	set_struc_cmt(id,"entries are {struct FNGInfo} ||| ref\nvtable is only a dtor",0);
	id = add_struc(-1,"ListEntry",0);
	id = add_struc(-1,"List",0);
	id = add_struc(-1,"SomethingUI",0);
	id = add_struc(-1,"SomethingUI$vtable",0);
	id = add_struc(-1,"SomethingUIImpl",0);
	set_struc_cmt(id,"an instance of this exists for every binsection {30203} or {30210} read, see {51BD30} ||| code,code,ref\n\nold comment: \"if size is <60 then it'll be padded to 60 in some link/pool thing\". But is this thing part of a pool? It's just linked in {struct SomethingUI} afaik ||| ref",0);
	id = add_struc(-1,"BinSection30203Data",0);
	set_struc_cmt(id,"size is probably variable",0);
	id = add_struc(-1,"BinSection30210",0);
	id = add_struc(-1,"UIElementVisitor",0);
	id = add_struc(-1,"UIElementVisitor$vtable",0);
	id = add_struc(-1,"UIElementVisitor_FindByHash",0);
	id = add_struc(-1,"UIElementVisitor_ClearFNGCache",0);
	id = add_struc(-1,"UIElementVisitor_FindByFieldC",0);
	id = add_struc(-1,"FERenderObject",0);
	set_struc_cmt(id,"size 0xA0",1);
	id = add_struc(-1,"FERenderEPoly",0);
	id = add_struc(-1,"WorldAnimStuff",0);
	id = add_struc(-1,"AudioStuff",0);
	id = add_struc(-1,"Struct836498",0);
	id = add_struc(-1,"Bootflow",0);
	id = add_struc(-1,"BootflowEntry",0);
	id = add_struc(-1,"FontData",0);
	id = add_struc(-1,"SoundEffectSystem",0);
	id = add_struc(-1,"SoundIdBanks",0);
	id = add_struc(-1,"SoundIdBank",0);
	id = add_struc(-1,"Car",0);
	id = add_struc(-1,"CarCollection",0);
	id = add_struc(-1,"CarCollectionWithPointers",0);
	id = add_struc(-1,"InventoryCar",0);
	id = add_struc(-1,"CarPreset",0);
	id = add_struc(-1,"OLCarSlotData_Slot",0);
	id = add_struc(-1,"OLCarSlotData",0);
	id = add_struc(-1,"OnlineCar",0);
	id = add_struc(-1,"StockCar",0);
	set_struc_cmt(id,"see {struct CarCollection}, all of these types will have some common parent ||| ref",0);
	id = add_struc(-1,"s484",0);
	id = add_struc(-1,"s485",0);
	id = add_struc(-1,"InventoryCar$vtable",0);
	id = add_struc(-1,"s54F980",0);
	id = add_struc(-1,"SponsorCar",0);
	id = add_struc(-1,"CarCollection9BD8",0);
	set_struc_cmt(id,"size unsure",1);
	id = add_struc(-1,"TunedCar18",0);
	id = add_struc(-1,"TunedCar360_17",0);
	set_struc_cmt(id,"same as {struct TunedCar360_20}? ||| ref\ncould just be char[9]",1);
	id = add_struc(-1,"TunedCar360_20",0);
	set_struc_cmt(id,"same as {struct TunedCar360_17}? could just be char[9] ||| ref",1);
	id = add_struc(-1,"TunedCar360",0);
	set_struc_cmt(id,"all bytes (incl subs) are initialized to 0x64",1);
	id = add_struc(-1,"TunedCar",0);
	id = add_struc(-1,"OnlineCareerCar",0);
	set_struc_cmt(id,"dunno what to call this, both {struct CareerCar} and {struct OnlineCar} have the same constructor and share some functions, so this felt required ||| ref,ref",0);
	id = add_struc(-1,"CareerCar",0);
	id = add_struc(-1,"CareerCar434_15C",0);
	set_struc_cmt(id,"is this the same as\n{struct CareerCar434_26C}? ||| ref\n{struct CareerCar434_27C}? ||| ref\n{struct CareerCar434_29C}? ||| ref",0);
	id = add_struc(-1,"CareerCar434_26C",0);
	set_struc_cmt(id,"is this the same as\n{struct CareerCar434_15C}? ||| ref\n{struct CareerCar434_27C}? ||| ref\n{struct CareerCar434_29C}? ||| ref",0);
	id = add_struc(-1,"CareerCar434_27C",0);
	set_struc_cmt(id,"is this the same as\n{struct CareerCar434_15C}? ||| ref\n{struct CareerCar434_26C}? ||| ref\n{struct CareerCar434_29C}? ||| ref",0);
	id = add_struc(-1,"CareerCar434_28C",0);
	set_struc_cmt(id,"is this the same as {struct CareerCar434_294}? ||| ref",0);
	id = add_struc(-1,"CareerCar434_294",0);
	set_struc_cmt(id,"is this the same as {struct CareerCar434_28C}? ||| ref",0);
	id = add_struc(-1,"CareerCar434_29C",0);
	set_struc_cmt(id,"is this the same as\n{struct CareerCar434_15C}? ||| ref\n{struct CareerCar434_26C}? ||| ref\n{struct CareerCar434_27C}? ||| ref",0);
	id = add_struc(-1,"CareerCar434",0);
	set_struc_cmt(id,"size 3C0 (unconfirmed, though {503E70} is a good argument) ||| ref",0);
	id = add_struc(-1,"Player_24_60",0);
	id = add_struc(-1,"Player_24",0);
	id = add_struc(-1,"Player_D4_10",0);
	id = add_struc(-1,"Player_D4_100_1C",0);
	id = add_struc(-1,"Player_D4_100",0);
	id = add_struc(-1,"Player_D4",0);
	id = add_struc(-1,"Player",0);
	id = add_struc(-1,"TraxConfig",0);
	id = add_struc(-1,"TraxEntry",0);
	id = add_struc(-1,"ProfileData_156B0_SubB",0);
	id = add_struc(-1,"ProfileData_156B0_SubA",0);
	id = add_struc(-1,"ProfileData_156B0",0);
	id = add_struc(-1,"ProfileData28DB0",0);
	id = add_struc(-1,"ProfileData28FD0",0);
	id = add_struc(-1,"ProfileData29C70",0);
	id = add_struc(-1,"ProfileData",0);
	set_struc_cmt(id,"instance at {83A9D0} ||| ref\n\nunsure size (0x29DD8), but might be complete",0);
	id = add_struc(-1,"Career7B00",0);
	set_struc_cmt(id,"size 8",0);
	id = add_struc(-1,"CareerD24_54_30",0);
	set_struc_cmt(id,"size CF4",0);
	id = add_struc(-1,"CareerD24_54_30_0_10C",0);
	id = add_struc(-1,"CareerD24_54_30_0",0);
	set_struc_cmt(id,"size 224",0);
	id = add_struc(-1,"CareerD24_54",0);
	set_struc_cmt(id,"size D24",0);
	id = add_struc(-1,"CareerD24_8",0);
	set_struc_cmt(id,"size 0xC",0);
	id = add_struc(-1,"CareerD24",0);
	set_struc_cmt(id,"size most likely 0x34EC",0);
	id = add_struc(-1,"CareerStage",0);
	id = add_struc(-1,"Bin34A11_38",0);
	id = add_struc(-1,"CareerRace",0);
	id = add_struc(-1,"BinSection34A11",0);
	set_struc_cmt(id,"in GLOBALB.BUN section 80034A10, size 7700",0);
	id = add_struc(-1,"CareerStatsHiddenShopsDiscovered",0);
	set_struc_cmt(id,"size 4",0);
	id = add_struc(-1,"CareerStatsDvdCover",0);
	id = add_struc(-1,"CareerStatsRegionDvdCovers",0);
	id = add_struc(-1,"CareerStats",0);
	set_struc_cmt(id,"see {835C00} ||| ref",0);
	id = add_struc(-1,"CareerC00",0);
	set_struc_cmt(id,"size unknown",0);
	id = add_struc(-1,"Bin34A11_18",0);
	id = add_struc(-1,"Career887C_2A",0);
	set_struc_cmt(id,"size C",0);
	id = add_struc(-1,"Career887C_D",0);
	set_struc_cmt(id,"size B",0);
	id = add_struc(-1,"Career887C",0);
	set_struc_cmt(id,"size at least 190",0);
	id = add_struc(-1,"Career887C_A8",0);
	set_struc_cmt(id,"size C",0);
	id = add_struc(-1,"Career7148_180",0);
	id = add_struc(-1,"Career7148",0);
	set_struc_cmt(id,"size 190",0);
	id = add_struc(-1,"Career_0",0);
	set_struc_cmt(id,"size 18",0);
	id = add_struc(-1,"Career713C",0);
	set_struc_cmt(id,"size A (maybe C)",0);
	id = add_struc(-1,"Career4230",0);
	id = add_struc(-1,"Career4210",0);
	set_struc_cmt(id,"size at least 1C",0);
	id = add_struc(-1,"CareerBank",0);
	id = add_struc(-1,"Career",0);
	set_struc_cmt(id,"this may be way more than just careerdata.. maybe profiledata?\n\nsize unknown",0);
	set_struc_cmt(id,"probably incomplete",1);
	id = add_struc(-1,"MarkerQueryResult",0);
	id = add_struc(-1,"CareerSponsor",0);
	id = add_struc(-1,"CarUnlockEntry",0);
	id = add_struc(-1,"Bin34A1E",0);
	id = add_struc(-1,"Bin34A1C",0);
	id = add_struc(-1,"Bin34A1A",0);
	id = add_struc(-1,"Bin34A1B",0);
	id = add_struc(-1,"Bin34A16",0);
	id = add_struc(-1,"Bin34A14",0);
	id = add_struc(-1,"CareerShop",0);
	id = add_struc(-1,"Bin34A15_C",0);
	id = add_struc(-1,"Bin34A15",0);
	id = add_struc(-1,"CareerSponsorPtrOrHash",1);
	id = add_struc(-1,"CareerStageSettings",0);
	set_struc_cmt(id,"this data comes from bin section 34A18 in GLOBALB.BUN\nonly used for reading\nsize 50 (see 512AC9)",0);
	id = add_struc(-1,"Marker",0);
	set_struc_cmt(id,"size dynamic, but minimum 64?",0);
	id = add_struc(-1,"C2D4",0);
	id = add_struc(-1,"C64C",0);
	id = add_struc(-1,"C20",0);
	id = add_struc(-1,"C4",0);
	id = add_struc(-1,"vec3",0);
	id = add_struc(-1,"C",0);
	set_struc_cmt(id,"I think it's career related and I'm sick of long temp struct names so C it is.",0);
	id = add_struc(-1,"D",0);
	id = add_struc(-1,"E",0);
	id = add_struc(-1,"struct890020",0);
	id = add_struc(-1,"PathsData",0);
	set_struc_cmt(id,"Part of this data is markers, see {5D9A90}  ||| ref\nMarkers is just section {3414A} but this func loads more than that ||| code",0);
	id = add_struc(-1,"NeighbourhoodName",0);
	id = add_struc(-1,"JoyKeyData",0);
	id = add_struc(-1,"SomeKeyData",0);
	id = add_struc(-1,"JoyHandlerData",0);
	id = add_struc(-1,"JoystickEventNode",0);
	id = add_struc(-1,"Entry8655A0",0);
	set_struc_cmt(id,"joy (joystickEventNode) related",1);
	id = add_struc(-1,"Struct8383A4",0);
	id = add_struc(-1,"Network86A388",0);
	id = add_struc(-1,"Network44",0);
	id = add_struc(-1,"Network1498",0);
	id = add_struc(-1,"Network1618",0);
	id = add_struc(-1,"Network1160",0);
	id = add_struc(-1,"Network0",0);
	id = add_struc(-1,"Network00",0);
	id = add_struc(-1,"Network00_4",0);
	id = add_struc(-1,"Network120",0);
	id = add_struc(-1,"Network8B7CAC",0);
	id = add_struc(-1,"Network89CF48",0);
	id = add_struc(-1,"Quantizer141",0);
	id = add_struc(-1,"Quantizer149",0);
	id = add_struc(-1,"SocketWrapper",0);
	id = add_struc(-1,"SocketWrapperWrapper",0);
	id = add_struc(-1,"CriticalSectionWrapper_3",0);
	id = add_struc(-1,"NetworkRegionStuff",0);
	id = add_struc(-1,"sockaddr_in",0);
	id = add_struc(-1,"in_addr",0);
	id = add_struc(-1,"in_addr::$C13EC994467D6E67044F092615EC7EA9",1);
	id = add_struc(-1,"in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0",0);
	id = add_struc(-1,"in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5",0);
	id = add_struc(-1,"CRITICAL_SECTION",0);
	id = add_struc(-1,"vec2",0);
	id = add_struc(-1,"mat4x4",0);
	id = add_struc(-1,"IDirect3D9",0);
	id = add_struc(-1,"IDirect3D9Vtbl",0);
	id = add_struc(-1,"IDirect3DDevice9Vtbl",0);
	id = add_struc(-1,"D3DDEVICE_CREATION_PARAMETERS",0);
	id = add_struc(-1,"D3DDISPLAYMODE",0);
	id = add_struc(-1,"D3DVIEWPORT9",0);
	id = add_struc(-1,"D3DMATRIX",0);
	id = add_struc(-1,"D3DMATERIAL9",0);
	id = add_struc(-1,"D3DCOLORVALUE",0);
	id = add_struc(-1,"_D3DCOLORVALUE::$79F58B462609A8478E0156545A48EE38",1);
	id = add_struc(-1,"_D3DCOLORVALUE::$1870E08CD1297AF1183F2104CF0E68BB",1);
	id = add_struc(-1,"_D3DCOLORVALUE::$89D0C02BD3EDF7E42F4E64602AB90C16",1);
	id = add_struc(-1,"_D3DCOLORVALUE::$5FBE30F4B5EDEA02F5A8FF631684CD5C",1);
	id = add_struc(-1,"D3DLIGHT9",0);
	id = add_struc(-1,"D3DVECTOR",0);
	id = add_struc(-1,"_D3DVECTOR::$681612F8DC6DDCA79CBEF9228C3A67A0",1);
	id = add_struc(-1,"_D3DVECTOR::$2970DA2ECFB38188FCB670891BDDBDFA",1);
	id = add_struc(-1,"_D3DVECTOR::$3781A3F6A2280FF9BE972B852E87FD21",1);
	id = add_struc(-1,"D3DGAMMARAMP",0);
	id = add_struc(-1,"IDirectInput8AVtbl",0);

	id = get_struc_id("_SCOPETABLE_ENTRY");
	mid = add_struc_member(id,"EnclosingLevel",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FilterFunc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"HandlerFunc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	mid = add_struc_member(id,"Next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionHandler",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ScopeTable",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TryLevel",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("CPPEH_RECORD");
	mid = add_struc_member(id,"old_esp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"exc_ptr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"registration",	0X8,	0x60000400,	get_struc_id("_EH3_EXCEPTION_REGISTRATION"),	16);
	set_struc_align(id,2);

	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("LARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"s",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	set_struc_align(id,3);

	id = get_struc_id("FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_WIN32_FIND_DATAA");
	mid = add_struc_member(id,"dwFileAttributes",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ftCreationTime",	0X4,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"ftLastAccessTime",	0XC,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"ftLastWriteTime",	0X14,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"nFileSizeHigh",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nFileSizeLow",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved0",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved1",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cFileName",	0X2C,	0x000400,	-1,	260);
	mid = add_struc_member(id,"cAlternateFileName",	0X130,	0x000400,	-1,	14);
	mid = add_struc_member(id,"_padding",	0X13E,	0x000400,	-1,	2);
	set_struc_align(id,2);

	id = get_struc_id("PROCESSENTRY32");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cntUsage",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32ProcessID",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32DefaultHeapID",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32ModuleID",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cntThreads",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32ParentProcessID",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pcPriClassBase",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"szExeFile",	0X24,	0x000400,	-1,	260);
	set_struc_align(id,2);

	id = get_struc_id("tagRECT");
	mid = add_struc_member(id,"left",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"right",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("POINT");
	mid = add_struc_member(id,"x",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("tagMSG");
	mid = add_struc_member(id,"hwnd",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"message",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wParam",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lParam",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"time",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pt",	0X14,	0x60000400,	get_struc_id("POINT"),	8);
	set_struc_align(id,2);

	id = get_struc_id("_OSVERSIONINFOA");
	mid = add_struc_member(id,"dwOSVersionInfoSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMajorVersion",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMinorVersion",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwBuildNumber",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwPlatformId",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"szCSDVersion",	0X14,	0x000400,	-1,	128);
	set_struc_align(id,2);

	id = get_struc_id("tagPOINT");
	mid = add_struc_member(id,"x",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("RECT");
	mid = add_struc_member(id,"left",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"right",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("tagPAINTSTRUCT");
	mid = add_struc_member(id,"hdc",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fErase",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rcPaint",	0X8,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"fRestore",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fIncUpdate",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rgbReserved",	0X20,	0x000400,	-1,	32);
	set_struc_align(id,2);

	id = get_struc_id("PAINTSTRUCT");
	mid = add_struc_member(id,"hdc",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fErase",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rcPaint",	0X8,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"fRestore",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fIncUpdate",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rgbReserved",	0X20,	0x000400,	-1,	32);
	set_struc_align(id,2);

	id = get_struc_id("IID");
	mid = add_struc_member(id,"Data1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Data2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data3",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data4",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);

	id = get_struc_id("WNDCLASSEXA");
	mid = add_struc_member(id,"cbSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"style",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpfnWndProc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cbClsExtra",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cbWndExtra",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hInstance",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hIcon",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hCursor",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hbrBackground",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpszMenuName",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpszClassName",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hIconSm",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9");
	mid = add_struc_member(id,"wProcessorArchitecture",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wReserved",	0X2,	0x10000400,	-1,	2);
	set_struc_align(id,1);

	id = get_struc_id("_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F");
	mid = add_struc_member(id,"dwOemId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9"),	4);
	set_struc_align(id,2);

	id = get_struc_id("_SYSTEM_INFO");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F"),	4);
	mid = add_struc_member(id,"dwPageSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpMinimumApplicationAddress",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpMaximumApplicationAddress",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwActiveProcessorMask",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNumberOfProcessors",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwProcessorType",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAllocationGranularity",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wProcessorLevel",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wProcessorRevision",	0X22,	0x10000400,	-1,	2);
	set_struc_align(id,2);

	id = get_struc_id("_RTL_CRITICAL_SECTION");
	mid = add_struc_member(id,"DebugInfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockCount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RecursionCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OwningThread",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockSemaphore",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SpinCount",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("MSG");
	mid = add_struc_member(id,"hwnd",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"message",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wParam",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lParam",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"time",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pt",	0X14,	0x60000400,	get_struc_id("POINT"),	8);
	set_struc_align(id,2);

	id = get_struc_id("timecaps_tag");
	mid = add_struc_member(id,"wPeriodMin",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wPeriodMax",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("_NCB");
	mid = add_struc_member(id,"ncb_command",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_retcode",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_lsn",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_num",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_buffer",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ncb_length",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ncb_callname",	0XA,	0x000400,	-1,	16);
	mid = add_struc_member(id,"ncb_name",	0X1A,	0x000400,	-1,	16);
	mid = add_struc_member(id,"ncb_rto",	0X2A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_sto",	0X2B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_post",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ncb_lana_num",	0X30,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_cmd_cplt",	0X31,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ncb_reserve",	0X32,	0x000400,	-1,	10);
	mid = add_struc_member(id,"ncb_event",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("WSAData");
	mid = add_struc_member(id,"wVersion",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHighVersion",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"szDescription",	0X4,	0x000400,	-1,	257);
	mid = add_struc_member(id,"szSystemStatus",	0X105,	0x000400,	-1,	129);
	mid = add_struc_member(id,"iMaxSockets",	0X186,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"iMaxUdpDg",	0X188,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"lpVendorInfo",	0X18C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("fd_set");
	mid = add_struc_member(id,"fd_count",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fd_array",	0X4,	0x20000400,	-1,	256);
	set_struc_align(id,2);

	id = get_struc_id("timeval");
	mid = add_struc_member(id,"tv_sec",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tv_usec",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("sockaddr");
	mid = add_struc_member(id,"sa_family",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sa_data",	0X2,	0x000400,	-1,	14);
	set_struc_align(id,1);

	id = get_struc_id("lineextensionid_tag");
	mid = add_struc_member(id,"dwExtensionID0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwExtensionID1",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwExtensionID2",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwExtensionID3",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("varstring_tag");
	mid = add_struc_member(id,"dwTotalSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNeededSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUsedSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwStringFormat",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwStringSize",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwStringOffset",	0X14,	0x20000400,	-1,	4);

	id = get_struc_id("LINEDIALPARAMS");
	mid = add_struc_member(id,"dwDialPause",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDialSpeed",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDigitDuration",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwWaitForDialtone",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("linecallparams_tag");
	mid = add_struc_member(id,"dwTotalSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwBearerMode",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMinRate",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxRate",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMediaMode",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCallParamFlags",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAddressMode",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAddressID",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DialParams",	0X20,	0x60000400,	get_struc_id("LINEDIALPARAMS"),	16);
	mid = add_struc_member(id,"dwOrigAddressSize",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwOrigAddressOffset",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDisplayableAddressSize",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDisplayableAddressOffset",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCalledPartySize",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCalledPartyOffset",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCommentSize",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCommentOffset",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUserUserInfoSize",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUserUserInfoOffset",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighLevelCompSize",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighLevelCompOffset",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLowLevelCompSize",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLowLevelCompOffset",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevSpecificSize",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevSpecificOffset",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwPredictiveAutoTransferStates",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTargetAddressSize",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTargetAddressOffset",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSendingFlowspecSize",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSendingFlowspecOffset",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReceivingFlowspecSize",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReceivingFlowspecOffset",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceClassSize",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceClassOffset",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceConfigSize",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceConfigOffset",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCallDataSize",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCallDataOffset",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNoAnswerTimeout",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCallingPartyIDSize",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCallingPartyIDOffset",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAddressType",	0XB0,	0x20000400,	-1,	4);

	id = get_struc_id("GUID");
	mid = add_struc_member(id,"Data1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Data2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data3",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data4",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);

	id = get_struc_id("linedevcaps_tag");
	mid = add_struc_member(id,"dwTotalSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNeededSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUsedSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwProviderInfoSize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwProviderInfoOffset",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSwitchInfoSize",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSwitchInfoOffset",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwPermanentLineID",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLineNameSize",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLineNameOffset",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwStringFormat",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAddressModes",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNumAddresses",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwBearerModes",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxRate",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMediaModes",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwGenerateToneModes",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwGenerateToneMaxNumFreq",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwGenerateDigitModes",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMonitorToneMaxNumFreq",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMonitorToneMaxNumEntries",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMonitorDigitModes",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwGatherDigitsMinTimeout",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwGatherDigitsMaxTimeout",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMedCtlDigitMaxListSize",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMedCtlMediaMaxListSize",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMedCtlToneMaxListSize",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMedCtlCallStateMaxListSize",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevCapFlags",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxNumActiveCalls",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAnswerMode",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRingModes",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLineStates",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUUIAcceptSize",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUUIAnswerSize",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUUIMakeCallSize",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUUIDropSize",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUUISendUserUserInfoSize",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUUICallInfoSize",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MinDialParams",	0X9C,	0x60000400,	get_struc_id("LINEDIALPARAMS"),	16);
	mid = add_struc_member(id,"MaxDialParams",	0XAC,	0x60000400,	get_struc_id("LINEDIALPARAMS"),	16);
	mid = add_struc_member(id,"DefaultDialParams",	0XBC,	0x60000400,	get_struc_id("LINEDIALPARAMS"),	16);
	mid = add_struc_member(id,"dwNumTerminals",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTerminalCapsSize",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTerminalCapsOffset",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTerminalTextEntrySize",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTerminalTextSize",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTerminalTextOffset",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevSpecificSize",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevSpecificOffset",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLineFeatures",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSettableDevStatus",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceClassesSize",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceClassesOffset",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PermanentLineGuid",	0XFC,	0x60000400,	get_struc_id("GUID"),	16);
	mid = add_struc_member(id,"dwAddressTypes",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ProtocolGuid",	0X110,	0x60000400,	get_struc_id("GUID"),	16);
	mid = add_struc_member(id,"dwAvailableTracking",	0X120,	0x20000400,	-1,	4);

	id = get_struc_id("_COMMTIMEOUTS");
	mid = add_struc_member(id,"ReadIntervalTimeout",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadTotalTimeoutMultiplier",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadTotalTimeoutConstant",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteTotalTimeoutMultiplier",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteTotalTimeoutConstant",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("DCB");
	mid = add_struc_member(id,"DCBlength",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BaudRate",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wReserved",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"XonLim",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"XoffLim",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ByteSize",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Parity",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"StopBits",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"XonChar",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"XoffChar",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ErrorChar",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"EofChar",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"EvtChar",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"wReserved1",	0X1A,	0x10000400,	-1,	2);
	set_struc_align(id,2);

	id = get_struc_id("_COMMCONFIG");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wVersion",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wReserved",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"dcb",	0X8,	0x60000400,	get_struc_id("DCB"),	28);
	mid = add_struc_member(id,"dwProviderSubType",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwProviderOffset",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwProviderSize",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wcProviderData",	0X30,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_padding",	0X32,	0x000400,	-1,	2);
	set_struc_align(id,2);

	id = get_struc_id("_FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	set_struc_align(id,1);

	id = get_struc_id("_TIME_ZONE_INFORMATION");
	mid = add_struc_member(id,"Bias",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StandardName",	0X4,	0x10000400,	-1,	64);
	mid = add_struc_member(id,"StandardDate",	0X44,	0x60000400,	get_struc_id("SYSTEMTIME"),	16);
	mid = add_struc_member(id,"StandardBias",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DaylightName",	0X58,	0x10000400,	-1,	64);
	mid = add_struc_member(id,"DaylightDate",	0X98,	0x60000400,	get_struc_id("SYSTEMTIME"),	16);
	mid = add_struc_member(id,"DaylightBias",	0XA8,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	set_struc_align(id,1);

	id = get_struc_id("_SECURITY_ATTRIBUTES");
	mid = add_struc_member(id,"nLength",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpSecurityDescriptor",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"bInheritHandle",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_STARTUPINFOA");
	mid = add_struc_member(id,"cb",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpReserved",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpDesktop",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpTitle",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwX",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwY",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXSize",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYSize",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXCountChars",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYCountChars",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFillAttribute",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wShowWindow",	0X30,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"cbReserved2",	0X32,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"lpReserved2",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdInput",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdOutput",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdError",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("_cpinfo");
	mid = add_struc_member(id,"MaxCharSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DefaultChar",	0X4,	0x000400,	-1,	2);
	mid = add_struc_member(id,"LeadByte",	0X6,	0x000400,	-1,	12);
	mid = add_struc_member(id,"_padding",	0X12,	0x000400,	-1,	2);
	set_struc_align(id,2);

	id = get_struc_id("_MEMORY_BASIC_INFORMATION");
	mid = add_struc_member(id,"BaseAddress",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AllocationBase",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AllocationProtect",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RegionSize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"State",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Protect",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Type",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_ThrowInfo");
	mid = add_struc_member(id,"attributes",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pmfnUnwind",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pForwardCompat",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pCatchableTypeArray",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("FILE");
	mid = add_struc_member(id,"_ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_cnt",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_base",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_flag",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_file",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_charbuf",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bufsiz",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_tmpfname",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("_diskfree_t");
	mid = add_struc_member(id,"total_clusters",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"avail_clusters",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sectors_per_cluster",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bytes_per_sector",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("tm");
	mid = add_struc_member(id,"tm_sec",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_min",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_hour",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_mday",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_mon",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_year",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_wday",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_yday",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_isdst",	0X20,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("FuncInfoV1");
	mid = add_struc_member(id,"magicNumber",	0,	0x21100400,	-1,	4);
	mid = add_struc_member(id,"maxState",	0X4,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pUnwindMap",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nTryBlocks",	0XC,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pTryBlockMap",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nIPMapEntries",	0X14,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pIPtoStateMap",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("UnwindMapEntry");
	mid = add_struc_member(id,"toState",	0,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"action",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("TryBlockMapEntry");
	mid = add_struc_member(id,"tryLow",	0,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"tryHigh",	0X4,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"catchHigh",	0X8,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"nCatches",	0XC,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pHandlerArray",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("HandlerType");
	mid = add_struc_member(id,"adjectives",	0,	0x21100400,	-1,	4);
	mid = add_struc_member(id,"pType",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dispCatchObj",	0X8,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"addressOfHandler",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("ULARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);

	id = get_struc_id("FuncInfo_V1");
	mid = add_struc_member(id,"magicNumber",	0,	0x21100400,	-1,	4);
	mid = add_struc_member(id,"maxState",	0X4,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pUnwindMap",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nTryBlocks",	0XC,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pTryBlockMap",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nIPMapEntries",	0X14,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pIPtoStateMap",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("DIDATAFORMAT");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwObjSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDataSize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNumObjs",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rgodf",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("_SYSTEM_INFO::$058745E319A46827965CDE7F37238831::$AA04DEB0C6383F89F13D312A174572A9");
	mid = add_struc_member(id,"wProcessorArchitecture",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wReserved",	0X2,	0x10000400,	-1,	2);
	set_struc_align(id,1);

	id = get_struc_id("_SYSTEM_INFO::$058745E319A46827965CDE7F37238831");
	mid = add_struc_member(id,"dwOemId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"s",	0,	0x60000400,	get_struc_id("_SYSTEM_INFO::$058745E319A46827965CDE7F37238831::$AA04DEB0C6383F89F13D312A174572A9"),	4);
	set_struc_align(id,2);

	id = get_struc_id("_DCB");
	mid = add_struc_member(id,"DCBlength",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BaudRate",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fDummy2",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wReserved",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"XonLim",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"XoffLim",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ByteSize",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Parity",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"StopBits",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"XonChar",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"XoffChar",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ErrorChar",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"EofChar",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"EvtChar",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"wReserved1",	0X1A,	0x10000400,	-1,	2);

	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9");
	mid = add_struc_member(id,"wProcessorArchitecture",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wReserved",	0X2,	0x10000400,	-1,	2);

	id = get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2");
	mid = add_struc_member(id,"dwOemId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_SYSTEM_INFO::$41710344DA04EC56A327D4EA11DEF6D2::$AA04DEB0C6383F89F13D312A174572A9"),	4);

	id = get_struc_id("CCarHeadlightsPosition");
	mid = add_struc_member(id,"fX0",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fY0",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fZ0",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fX1",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fY1",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fZ1",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fX2",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fY2",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fZ2",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fX3",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fY3",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fZ3",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fX4",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fY4",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fZ4",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fX5",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fY5",	0X134,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fZ5",	0X138,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("LanguageData");
	mid = add_struc_member(id,"pName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"region",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("LanguageFileData");
	mid = add_struc_member(id,"id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pFilecode",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pBinfile",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fontdata",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("LanguageStruct7F6DE8");
	mid = add_struc_member(id,"fonthash",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("LanguageFontData");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);

	id = get_struc_id("LoadedLanguage");
	mid = add_struc_member(id,"numStrings",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrStrings",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ptrTable",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ptrConversionTable",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("LanguageTableEntry");
	mid = add_struc_member(id,"key",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"string",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("LanguageConversionTable");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"table",	0X4,	0x10000400,	-1,	512);
	set_member_cmt(id,	0X4,	"size unknown",	1);

	id = get_struc_id("BinSectionHeader");
	mid = add_struc_member(id,"magic",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"size",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("BinSection");
	mid = add_struc_member(id,"header",	0,	0x60000400,	get_struc_id("BinSectionHeader"),	8);
	mid = add_struc_member(id,"data",	0X8,	0x000400,	-1,	1);
	set_member_cmt(id,	0X8,	"actual data size is determined by {struct BinSectionHeader}.{struct BinSectionHeader+4} ||| ref,ref",	1);

	id = get_struc_id("BinDataLanguage39000");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numStrings",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tableOffset",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"stringsOffset",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("PoolLink");
	mid = add_struc_member(id,"prev",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("PoolControl");
	mid = add_struc_member(id,"inited",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("PoolLink"),	8);

	id = get_struc_id("Pool");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolLink"),	8);
	mid = add_struc_member(id,"nextLinkedPool",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pName",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"firstAvailableElement",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"flags",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"see {enum POOLFLAGS} ||| ref",	1);
	mid = add_struc_member(id,"numUsedElements",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maxUsedElements?",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"the highest amount that was allocated at one point?",	1);
	mid = add_struc_member(id,"unknownArgGivenOnPoolCreation",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"elementAmount",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"elementSize",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"elementAmountOverAllLinkedPools",	0X2C,	0x20000400,	-1,	4);

	id = get_struc_id("PoolEntry");
	mid = add_struc_member(id,"nextEntry",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prevEntry",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("bPNodeSlotPoolEntry");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"fngName",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("LevelSorterPoolEntry");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"fngName",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"indexInLevelSorterLink",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someNumber",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);

	id = get_struc_id("bFileSystemPoolEntry");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"ptrDataContent",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrfield_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nextLinkedEntry?",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someNumber",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filename",	0X1C,	0x000400,	-1,	100);
	set_member_cmt(id,	0X1C,	"sometimes this is different data?",	1);

	id = get_struc_id("ResourceFileSlotPoolEntry");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"sometimes read as a byte",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filename",	0X1C,	0x000400,	-1,	60);
	mid = add_struc_member(id,"field_58",	0X58,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_59",	0X59,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5A",	0X5A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5B",	0X5B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_80",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filename_again",	0X94,	0x000400,	-1,	48);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someNumber_CC",	0XCC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XCC,	"set to 1 after ptrAllocatedMemForData has been free'd",	1);
	mid = add_struc_member(id,"ptrFunction",	0XD0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_D4",	0XD4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XD4,	"used as argument when calling D0 ptrFunction",	1);
	mid = add_struc_member(id,"ptrAllocatedMemForData",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filesize",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E0",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E8",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_EC",	0XEC,	0x20000400,	-1,	4);

	id = get_struc_id("QueuedFileSlotPoolEntry");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"ptrDataContent",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filename",	0XC,	0x000400,	-1,	60);
	set_member_cmt(id,	0XC,	"has some weird acces but it HAS to be filename for other usages (and strcpy and strcmp). Maybe those other usages use the wrong struct?",	1);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filesize",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrsomefunc",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X5C,	"might be sub_571050",	1);
	mid = add_struc_member(id,"resourceFileSlotPoolEntry",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"handle",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X70,	"2 when filesize is 0?",	1);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"flt_field_78",	0X78,	0x20000400,	-1,	4);

	id = get_struc_id("substructFor440AD0");
	mid = add_struc_member(id,"type",	0,	0x20000400,	-1,	4);

	id = get_struc_id("substructFor440AD0type1");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	set_member_cmt(id,	0,	"1",	1);
	mid = add_struc_member(id,"ptrFilename",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next_type4",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("substructFor440AD0type4");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	set_member_cmt(id,	0,	"4",	1);
	mid = add_struc_member(id,"value",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"a number?",	1);
	mid = add_struc_member(id,"next_null",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("substructFor440AD0type5");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	set_member_cmt(id,	0,	"5",	1);
	mid = add_struc_member(id,"ptrRandomTraceFileString",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next_type1",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("substructFor440AD0type6");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	set_member_cmt(id,	0,	"6",	1);
	mid = add_struc_member(id,"value",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"0x1B0?",	1);
	mid = add_struc_member(id,"next_type5",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("structFor440AD0");
	mid = add_struc_member(id,"type6",	0,	0x60000400,	get_struc_id("substructFor440AD0type6"),	12);
	mid = add_struc_member(id,"type5",	0XC,	0x60000400,	get_struc_id("substructFor440AD0type5"),	12);
	mid = add_struc_member(id,"type1",	0X18,	0x60000400,	get_struc_id("substructFor440AD0type1"),	12);
	mid = add_struc_member(id,"type4",	0X24,	0x60000400,	get_struc_id("substructFor440AD0type4"),	12);

	id = get_struc_id("substructFor440AD0common");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	mid = add_struc_member(id,"value",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"next",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("substructFor440AD0type2");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	mid = add_struc_member(id,"value",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"next",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("substructFor440AD0type3");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("substructFor440AD0"),	4);
	mid = add_struc_member(id,"value",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"next",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("FNGData");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"procCreateFNGObject",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"helpLanguageKey",	0X8,	0x28800400,	get_enum("LANGUAGE_LABELS"),	4);
	mid = add_struc_member(id,"helpBarMask",	0XC,	0x28800400,	get_enum("PCHELPBARFLAGS"),	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);

	id = get_struc_id("ListEntry");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prev",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("FNGInfo");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("ListEntry"),	12);
	set_member_cmt(id,	0,	"'next' is child fng, 'prev' is parent fng",	0);
	mid = add_struc_member(id,"fngName",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	return id;
}

static Structures_1(id) {
        auto mid;

	mid = add_struc_member(id,"hash",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"indexInLevelSorterLink",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"index in {struct UIData+10} ||| ref",	0);
	mid = add_struc_member(id,"controlMask",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"control mask related?",	1);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"control mask related?",	1);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"control mask related?",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pUIData_field8",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X30,	"bit surprising but ok",	0);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"somefnginfo",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X3C,	"what is the relation between these? calling/parent fng?",	1);
	mid = add_struc_member(id,"somethingUIImpl",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rootUIElement",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);

	id = get_struc_id("CheatScreenData");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"doCheatCheck",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"only 1 when in the 'press enter key' screen",	1);
	mid = add_struc_member(id,"cheatExecuted",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field2CofLastCheatActivated",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cheats",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"0x7FB960 {7FB960} ||| ref",	1);
	mid = add_struc_member(id,"numCheats",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"20",	1);
	mid = add_struc_member(id,"typedCheat",	0X14,	0x000400,	-1,	32);
	mid = add_struc_member(id,"typedCheatLength",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);

	id = get_struc_id("CheatData");
	mid = add_struc_member(id,"name0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"splitting {name[32]} into 8 fields because it makes the disassembly easier, because it's written/read per dword ||| code",	1);
	mid = add_struc_member(id,"name4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nameC",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cheatType",	0X20,	0x28800400,	get_enum("CHEATTYPE"),	4);
	mid = add_struc_member(id,"cheatData",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"hash (when cheatType is sponsor car or vinyl) or data (what is the other data?)",	1);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hasBeenTriggered",	0X30,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_31",	0X31,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cheatEnabled",	0X32,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_33",	0X33,	0x000400,	-1,	1);

	id = get_struc_id("CriticalSectionWrapper_2");
	mid = add_struc_member(id,"lpCriticalSection",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"pointer to struct of CRITICAL_SECTION",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("CRealCoreDrive");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"probably 7C30F8",	1);
	mid = add_struc_member(id,"driveNameLetterPathThing",	0X4,	0x000400,	-1,	16);
	set_member_cmt(id,	0X4,	"like 'null:'. actual size is unknown, but this struct size is probably 0x14",	1);

	id = get_struc_id("MouseData");
	mid = add_struc_member(id,"dinputdevice",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cursorX",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"on 640x480 canvas",	1);
	mid = add_struc_member(id,"cursorY",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"on 640x480 canvas",	1);
	mid = add_struc_member(id,"previousCursorX",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"on 640x480 canvas",	1);
	mid = add_struc_member(id,"previousCursorY",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"on 640x480 canvas",	1);
	mid = add_struc_member(id,"deltaCursorX",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"on 640x480 canvas",	1);
	mid = add_struc_member(id,"deltaCursorY",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"on 640x480 canvas",	1);
	mid = add_struc_member(id,"mousestate.lZ",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"scrollwheel data",	1);
	mid = add_struc_member(id,"areMouseButtonsSwapped",	0X20,	0x000400,	-1,	1);
	set_member_cmt(id,	0X20,	"result of {GetSystemMetrics(SM_SWAPBUTTON)} ||| code",	1);
	mid = add_struc_member(id,"button0State",	0X21,	0x000400,	-1,	1);
	set_member_cmt(id,	0X21,	"left mouse button",	1);
	mid = add_struc_member(id,"button0JustPressed",	0X22,	0x000400,	-1,	1);
	mid = add_struc_member(id,"button0JustReleased",	0X23,	0x000400,	-1,	1);
	mid = add_struc_member(id,"button1State",	0X24,	0x000400,	-1,	1);
	set_member_cmt(id,	0X24,	"right mouse button",	1);
	mid = add_struc_member(id,"button1JustPressed",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"button1JustReleased",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"button2State",	0X27,	0x000400,	-1,	1);
	set_member_cmt(id,	0X27,	"middle mouse button",	1);
	mid = add_struc_member(id,"button2JustPressed",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"button2JustReleased",	0X29,	0x000400,	-1,	1);

	id = get_struc_id("QWORDSTRUCT");
	mid = add_struc_member(id,"lo32",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hi32",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("IDirectInputDevice8");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("IDirectInputDevice8vtable");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Acquire",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unacquire",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDeviceState",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SetDataFormat",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SetCooperativeLevel",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("D3DADAPTER_IDENTIFIER9");
	mid = add_struc_member(id,"cDriver",	0,	0x000400,	-1,	512);
	set_member_cmt(id,	0,	"char[MAX_DEVICE_IDENTIFIER_STRING]",	1);
	mid = add_struc_member(id,"cDescription",	0X200,	0x000400,	-1,	512);
	set_member_cmt(id,	0X200,	"char[MAX_DEVICE_IDENTIFIER_STRING]",	1);
	mid = add_struc_member(id,"cDeviceName",	0X400,	0x000400,	-1,	32);
	mid = add_struc_member(id,"dwDriverVersionLowPart",	0X420,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X420,	"SubVersion = HIWORD(DriverVersion.LowPart)\nBuild = LOWORD(DriverVersion.LowPart)",	1);
	mid = add_struc_member(id,"dwDriverVersionHightPart",	0X424,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X424,	"Product = HIWORD(DriverVersion.HighPart)\nVersion = LOWORD(DriverVersion.HighPart)",	1);
	mid = add_struc_member(id,"dwVendorId",	0X428,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeviceId",	0X42C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSubSysId",	0X430,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRevision",	0X434,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DeviceIdentifier",	0X438,	0x60000400,	get_struc_id("GUID"),	16);
	mid = add_struc_member(id,"dwWHQLLevel",	0X448,	0x20000400,	-1,	4);

	id = get_struc_id("IDirectInput8");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("IDirectInput8vtable");
	mid = add_struc_member(id,"QueryInterface",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AddRef",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Release",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CreateDevice",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumDevices",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetDeviceStatus",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RunControlPanel",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Initialize",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FindDevice",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EnumDevicesBySemantics",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ConfigureDevices",	0X28,	0x20000400,	-1,	4);

	id = get_struc_id("WIN32_FIND_DATAA");
	mid = add_struc_member(id,"dwFileAttributes",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ftCreationTime",	0X4,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"ftLastAccessTime",	0XC,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"ftLastWriteTime",	0X14,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"nFileSizeHigh",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nFileSizeLow",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved0",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved1",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cFileName",	0X2C,	0x000400,	-1,	260);
	mid = add_struc_member(id,"cAlternateFileName",	0X130,	0x000400,	-1,	14);
	mid = add_struc_member(id,"_padding",	0X13E,	0x000400,	-1,	2);
	set_struc_align(id,2);

	id = get_struc_id("DIMOUSESTATE2");
	mid = add_struc_member(id,"lX",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lY",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lZ",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rbgButton0",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton1",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton2",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton3",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton4",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton5",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton6",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"rbgButton7",	0X13,	0x000400,	-1,	1);

	id = get_struc_id("tagSIZE");
	mid = add_struc_member(id,"_cx",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cy",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_SIZE");
	mid = add_struc_member(id,"width",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"height",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("_POS");
	mid = add_struc_member(id,"x",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("CRealCoreDrive_vtable");
	mid = add_struc_member(id,"field_0",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CreateFileAWrapper",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"probably {6FAD03} ||| ref",	1);
	mid = add_struc_member(id,"CloseHandleWrapper",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X10,	"probably {6FAE16} ||| ref",	1);
	mid = add_struc_member(id,"ReadFileWrapper",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X14,	"probably {6FAE20} ||| ref\nreturn amount of bytes actually read",	1);
	mid = add_struc_member(id,"WriteFileWrapper",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X18,	"probably {6FAE3F} ||| ref",	1);
	mid = add_struc_member(id,"SetFilePointerWrapper",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X1C,	"probably {6FAE5E} ||| ref",	1);
	mid = add_struc_member(id,"GetFileSizeWrapper",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X20,	"probably {6FAE89} ||| ref",	1);
	mid = add_struc_member(id,"UnkStdCall1ArgUnused",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X24,	"probably {570A80} (returns edx:eax 0) ||| ref",	1);
	mid = add_struc_member(id,"DeleteFileAWrapper",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X28,	"probably {6FAE9D} ||| ref",	1);
	mid = add_struc_member(id,"GetDiskFreeSpaceExAWrapper",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X2C,	"probably {6FAEB3} ||| ref",	1);
	mid = add_struc_member(id,"GetDriveNamePath",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_34",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X34,	"unsure about parameters",	1);

	id = get_struc_id("CriticalSectionWrapper");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpCriticalSection",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("EventWrapper");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hEvent",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("struct6F79AFesi");
	mid = add_struc_member(id,"nextLinkedStruct",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"criticalSectionWrapper_28",	0X28,	0x60000400,	get_struc_id("CriticalSectionWrapper"),	8);
	mid = add_struc_member(id,"eventWrapper_44",	0X44,	0x60000400,	get_struc_id("EventWrapper"),	8);
	mid = add_struc_member(id,"_realCoreDrive",	0X80,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("struct8AD610_base");
	mid = add_struc_member(id,"ptrField_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someCounter_8",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("struct6F7195");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	set_member_cmt(id,	0,	"is this the same struct as struct6F79AFesi?",	1);
	mid = add_struc_member(id,"someNumber",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"stopLoadingFileLoop?",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"see 6F724E",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"struct8AD610_base",	0X10,	0x60000400,	get_struc_id("struct8AD610_base"),	12);
	mid = add_struc_member(id,"someinlinestructusedasthis?",	0X1C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"criticalSectionWrapper_28",	0X28,	0x60000400,	get_struc_id("CriticalSectionWrapper"),	8);
	mid = add_struc_member(id,"criticalSectionWrapper_fileReadLock",	0X44,	0x60000400,	get_struc_id("CriticalSectionWrapper"),	8);
	set_member_cmt(id,	0X44,	"the (language) file is read while WaitForSingleObject on this one",	1);
	mid = add_struc_member(id,"hEvent",	0X78,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X78,	"could this be part of EventWrapper?",	1);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);

	id = get_struc_id("struct6F7195_8AD610_ptr0");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"probably 7C2F64",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_12",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_13",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"probablyPtrStruct8AD610LinkedListNode",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X14,	"a value returned from sub 6F79AF",	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrFunc",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"can be sub 57B800",	1);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrFilepath",	0X30,	0x20000400,	-1,	4);

	id = get_struc_id("struct6F7195_8AD610_ptr0_vtable");
	mid = add_struc_member(id,"field_0",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ptrFuncSomethingOpensFileHandle",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4,	"probably sub 6F8680",	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("struct6F7195_8AD610_ptr0_ptrC");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"indexForStruct6F79AFesi",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"this number is used as index for sub 6F6C47 to get a structure of type struct6F79AFesi",	1);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);

	id = get_struc_id("struct8AD610LinkedList");
	mid = add_struc_member(id,"first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"last",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"count",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("struct8AD610");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("struct8AD610_base"),	12);
	mid = add_struc_member(id,"criticalSectionWrapper_C",	0XC,	0x60000400,	get_struc_id("CriticalSectionWrapper"),	8);
	mid = add_struc_member(id,"someList",	0X28,	0x60000400,	get_struc_id("struct8AD610LinkedList"),	12);
	mid = add_struc_member(id,"criticalSectionWrapper_34",	0X34,	0x60000400,	get_struc_id("CriticalSectionWrapper"),	8);
	mid = add_struc_member(id,"someCounter_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"criticalSectionWrapper_54",	0X54,	0x60000400,	get_struc_id("CriticalSectionWrapper"),	8);
	mid = add_struc_member(id,"ptrStruct6F79AFesi_7C",	0X7C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pathPointers",	0X88,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrStruct6F79AFesi_98",	0X98,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("struct8AD610LinkedListNode");
	mid = add_struc_member(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"most likely a value that is used with different kinds of filesystems, when real filesystem (CreateFileA etc), this will awlays be a ptr to this own struct",	1);
	mid = add_struc_member(id,"filehandle",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8,	"HANDLE",	1);
	mid = add_struc_member(id,"_struct6F79AFesi",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"filesizeLo",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"filesizeHi",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);

	id = get_struc_id("LinkedListNode");
	mid = add_struc_member(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dunno??",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"valuemaybe?",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("LinkedList");
	mid = add_struc_member(id,"first",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"last",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"count",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("struct8AD2B8");
	mid = add_struc_member(id,"ptrFunction",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"arguments/retval unknown",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("BinSectionLoadFunc");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("BinSectionUnloadFunc");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("BinSectionHandler");
	mid = add_struc_member(id,"magic",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"loadfunc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"unloadfunc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("BinSectionMagicMapEntry");
	mid = add_struc_member(id,"nextEntry",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"value",	0X4,	0x60000400,	get_struc_id("BinSectionHandler"),	12);

	id = get_struc_id("OL850080");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	set_member_cmt(id,	0X18,	"set to 0 when socket is created",	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1B",	0X1B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_29",	0X29,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2A",	0X2A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2B",	0X2B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4D",	0X4D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4E",	0X4E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4F",	0X4F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);

	id = get_struc_id("OL86A858");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_518",	0X518,	0x20000400,	-1,	4);

	id = get_struc_id("OLMainStruct");
	mid = add_struc_member(id,"openDialogId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"fngObject",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"which child fngobject is it though",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	set_member_cmt(id,	0XD,	"set to 1 when showing 'connecting to srv/lobby' msg",	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_F",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_12",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_13",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);

	id = get_struc_id("ObjectLink");
	mid = add_struc_member(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("OL836370");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"most likely 7977F0, 1 extry with free call?",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"inited to 1",	1);
	mid = add_struc_member(id,"someLink",	0X138,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X138,	"link of struct OL138",	1);
	mid = add_struc_member(id,"currentOL138?",	0X140,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X140,	"initialized to UI_OLISPConnect.fng",	1);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X148,	"some fngname?",	1);
	mid = add_struc_member(id,"field_14C",	0X14C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_150",	0X150,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_151",	0X151,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_152",	0X152,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_153",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("OL138");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"fngName",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"continueProc?",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"TODO",	1);
	mid = add_struc_member(id,"cancelProc?",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X10,	"TODO",	1);

	id = get_struc_id("TextboxData");
	mid = add_struc_member(id,"placeholderText?",	0,	0x000400,	-1,	256);
	mid = add_struc_member(id,"currentText",	0X100,	0x000400,	-1,	256);
	mid = add_struc_member(id,"currentTextLength",	0X200,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"type",	0X204,	0x28800400,	get_enum("TEXTBOXTYPE"),	4);
	set_member_cmt(id,	0X204,	"see enum TEXTBOXTYPE",	1);
	mid = add_struc_member(id,"field_208",	0X208,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maxLength",	0X20C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isTextboxFocused",	0X210,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_211",	0X211,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_212",	0X212,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_213",	0X213,	0x000400,	-1,	1);
	mid = add_struc_member(id,"focusedTextbox",	0X214,	0x20000400,	-1,	4);

	id = get_struc_id("FocusedTextbox");
	mid = add_struc_member(id,"uiLabel",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fngObject",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"timerForCaretAnimation",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"goes to 90, display | when less than 45",	1);

	id = get_struc_id("UIMessage");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"one func (destructor)",	1);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"targetUIElement",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"ui element this message is meant to be sent to, matches an element's {struct UIElement.C} ||| ref",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fngInfo",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X14,	"fng this message originates from",	1);
	mid = add_struc_member(id,"theMessage",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);

	id = get_struc_id("PCHelpBarButton");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"1 func (destructor)",	1);
	mid = add_struc_member(id,"siblingLink",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"isCursorHovering",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_F",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"buttonLabelElement",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"buttonBgElement",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"shouldShow",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1B",	0X1B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"buttonFlag",	0X1C,	0x28800400,	get_enum("PCHELPBARFLAGS"),	4);
	set_member_cmt(id,	0X1C,	"from enum PCHELPBARFLAGS",	1);
	mid = add_struc_member(id,"animationStringUnkLength",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cursorHoverAnimationHash",	0X60,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X60,	"animation to apply when cursor hovers button",	1);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_80",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_98",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B4",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_BC",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_CC",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D4",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_DC",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E0",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E8",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_EC",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F0",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F4",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F8",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_FC",	0XFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_100",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_104",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_118",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_11C",	0X11C,	0x20000400,	-1,	4);

	id = get_struc_id("FNGShowData_Arg2");
	mid = add_struc_member(id,"unk",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MessageDialogFNGObject_ptrSms",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DialogFNGObject_ptrDialogInfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("FNGShowData");
	mid = add_struc_member(id,"fngName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fngInfo",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"helpTextLanguageString",	0X8,	0x28800400,	get_enum("LANGUAGE_LABELS"),	4);
	set_member_cmt(id,	0X8,	"set to {struct FNGData}.{struct FNGData+8} ||| ref,ref\nTODO please reconfirm",	1);
	mid = add_struc_member(id,"helpBarMask",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"set to {struct FNGData}.{struct FNGData+C} ||| ref,ref",	1);
	mid = add_struc_member(id,"arg2",	0X10,	0x60000400,	get_struc_id("FNGShowData_Arg2"),	4);

	id = get_struc_id("FNGObject");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fngName",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"focusedTextbox",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	set_member_cmt(id,	0X10,	"something textbox related, 0-1-2-3",	1);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_12",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_13",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"fngShowData",	0X14,	0x60000400,	get_struc_id("FNGShowData"),	20);
	mid = add_struc_member(id,"fngdata_field8",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"set to FNGData_field8 on fngobject init",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2D",	0X2D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2E",	0X2E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2F",	0X2F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"numberField_30",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"initialized to 9 (for BaseMenuFNGObject)",	1);
	mid = add_struc_member(id,"uiElement_34",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X34,	"pchelpbar: player name ui label",	1);
	mid = add_struc_member(id,"uiElement_38",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X38,	"pchelpbar: money ui label",	1);
	mid = add_struc_member(id,"uiElement_3C",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"floatField_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X48,	"maybe an ui element?",	1);

	id = get_struc_id("ScrollingThing");
	mid = add_struc_member(id,"isVertical?",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	set_member_cmt(id,	0X1,	"handle gets drawn stretched horizontally if 1",	0);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_4",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_8",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_C",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_10",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_14",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_18",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_1C",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_20",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_24",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_28",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_2C",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_30",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_34",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"frameTimeWhenArrowClicked",	0X38,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X38,	"so next clicks will be ignored for small amount of time",	1);
	mid = add_struc_member(id,"currentScrollAmountToPerform",	0X3C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"set when (mouse) input event happens on arrow/body / mousewheel input...  value -10/-9/-1/1/10\n-9 might be magic for nop?",	0);
	mid = add_struc_member(id,"uiElementBacking",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X40,	"%s_Backing (scrollbar body)",	1);
	mid = add_struc_member(id,"uiElementHandle",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X44,	"%s_Handle (circle handle position indicator)",	1);
	mid = add_struc_member(id,"uiElementArrow1",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X48,	"%s_Arrow_1 (left arrow)",	1);
	mid = add_struc_member(id,"uiElementArrow2",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4C,	"%s_Arrow_2 (right arrow)",	1);
	mid = add_struc_member(id,"uiElementBackingEnd1",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X50,	"%s_Backing_End_1 (scrollbar body end left)",	1);
	mid = add_struc_member(id,"uiElementBackingEnd2",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X54,	"%s_Backing_End_2 (scrollbar body end right)",	1);

	id = get_struc_id("vec2");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);

	id = get_struc_id("OptionsPCControllerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"controllerOptionsRelatedLinkTitles",	0X4C,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4C,	"links struct ControllerOptionsRelated (+4)",	1);
	mid = add_struc_member(id,"controllerOptionsRelatedLinkPrimary",	0X54,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X54,	"links struct ControllerOptionsRelated (+4)",	1);
	mid = add_struc_member(id,"controllerOptionsRelatedLinkSecondary",	0X5C,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X5C,	"links struct ControllerOptionsRelated (+4)",	1);
	mid = add_struc_member(id,"focusedControl",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"controllerOptionsRelated68",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uielement_TITLE_MASTER",	0X6C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uielement_DATA_MASTER",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uielement_DATA_MASTER2",	0X74,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uielement_DONE_BUTTON",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"scrollingThing",	0X80,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"uilabel_Instructions_Label",	0XD8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uielement_ControllerSelectionArrowLeft",	0XDC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uielement_ControllerSelectionArrowRight",	0XE0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uilabel_keyboardconfig",	0XE4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XE4,	"4E11CF90h",	1);
	mid = add_struc_member(id,"strField_E8",	0XE8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XE8,	"OPTION_NAME_",	1);
	mid = add_struc_member(id,"strField_EC",	0XEC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XEC,	"OPTION_DATA_",	1);
	mid = add_struc_member(id,"strField_F0",	0XF0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XF0,	"OPTION_DATA2_",	1);
	mid = add_struc_member(id,"titleMasterPos",	0XF4,	0x60000400,	get_struc_id("vec2"),	8);
	set_member_cmt(id,	0XF4,	"position of {struct OptionsPCControllerFNGObject+6C} ||| ref",	0);
	mid = add_struc_member(id,"titleMasterPosCopy",	0XFC,	0x60000400,	get_struc_id("vec2"),	8);
	set_member_cmt(id,	0XFC,	"initialized to value of {struct OptionsPCControllerFNGObject+F4} ||| ref",	0);
	mid = add_struc_member(id,"dataMasterSizeXCopy",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"titleMasterSizeYCopy",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"titleMasterSize",	0X10C,	0x60000400,	get_struc_id("vec2"),	8);
	mid = add_struc_member(id,"dataMasterSize",	0X114,	0x60000400,	get_struc_id("vec2"),	8);
	set_member_cmt(id,	0X114,	"used together with the field below (as x;y or with 2 more fields as x;y;w;h?)",	1);
	mid = add_struc_member(id,"dataMasterPos",	0X11C,	0x60000400,	get_struc_id("vec2"),	8);
	mid = add_struc_member(id,"dataMaster2Pos",	0X124,	0x60000400,	get_struc_id("vec2"),	8);
	mid = add_struc_member(id,"floatField_12C",	0X12C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_130",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentOptionIndex",	0X134,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X134,	"incremented every time {4CB4B0} is called ||| ref",	1);
	mid = add_struc_member(id,"field_138",	0X138,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rowsPerPage",	0X13C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X13C,	"7",	0);
	mid = add_struc_member(id,"hash140",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14C",	0X14C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14D",	0X14D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14E",	0X14E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"waitingForReassignmentKeyInput",	0X14F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_150",	0X150,	0x000400,	-1,	1);
	set_member_cmt(id,	0X150,	"set when about to set waitingForReassignmentKeyInput to 1",	1);
	mid = add_struc_member(id,"numControllerConfigurations3",	0X154,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X154,	"num controllers where result of {5B8720} is 3 ||| ref",	1);
	mid = add_struc_member(id,"numControllerConfigurations",	0X158,	0x20000400,	-1,	4);

	id = get_struc_id("BuyPerformancePartsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1E7,	0x000400,	-1,	1);

	id = get_struc_id("UIProgressBar");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"78F544",	1);
	mid = add_struc_member(id,"isVertical",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"can be handled as an int because of padding (probably)",	1);
	mid = add_struc_member(id,"parentFngName",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"backingUIElement",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"like top_speed_backing",	1);
	mid = add_struc_member(id,"handleUIElement",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X10,	"like top_speed_handle",	1);
	mid = add_struc_member(id,"valueUIElement",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X14,	"like top_speed_value, an element that will show a number (text)",	1);
	mid = add_struc_member(id,"currUIElement",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X18,	"like top_speed_curr",	1);
	mid = add_struc_member(id,"endCapUIElement",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X1C,	"like top_speed_end_cap",	1);
	mid = add_struc_member(id,"endUIElement",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X20,	"like top_speed_end",	1);
	mid = add_struc_member(id,"floatField_24",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_28",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_30",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_34",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_3C",	0X3C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_40",	0X40,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X40,	"initialized to 46.0",	1);

	id = get_struc_id("CareerCarLotFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"selectableCars",	0X50,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X50,	"entries are {struct CarSelectCarEntry} (link offset 10h) ||| ref",	1);
	mid = add_struc_member(id,"currentSelectedCar",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X58,	"this is an entry that is in {struct CareerCarLotFNGObject+50} ||| ref",	1);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentActiveSlotHash?",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numUnlockedAndFreeInventorySlots",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numUnlockedInventorySlots",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numSelectableCars",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"scrollingThing",	0X88,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"field_E0",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"manufacturerLogoUIElement",	0XE4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"carBadgeUIElement",	0XE8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"browsingPlayer",	0XEC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XEC,	"1 or 2",	1);
	mid = add_struc_member(id,"accelerationIndicator",	0XF0,	0x60000400,	get_struc_id("UIProgressBar"),	68);
	mid = add_struc_member(id,"topSpeedIndicator",	0X134,	0x60000400,	get_struc_id("UIProgressBar"),	68);
	mid = add_struc_member(id,"handlingIndicator",	0X178,	0x60000400,	get_struc_id("UIProgressBar"),	68);
	mid = add_struc_member(id,"field_1BC",	0X1BC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1BD",	0X1BD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1BE",	0X1BE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X1BF,	0x000400,	-1,	1);

	id = get_struc_id("TunedCar360_17");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);

	id = get_struc_id("TunedCar360_20");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);

	id = get_struc_id("TunedCar360");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x60000400,	get_struc_id("TunedCar360_17"),	9);
	mid = add_struc_member(id,"field_20",	0X20,	0x60000400,	get_struc_id("TunedCar360_20"),	9);

	id = get_struc_id("s734");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"initialized to -1",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"initialized to 1",	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"{&{struct MenuCarInstance_10.30}} ||| code,ref",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x60000400,	get_struc_id("TunedCar360"),	41);
	set_member_cmt(id,	0X14,	"gonna take a leap and assume this is this struct. it looks the same & is initialized the same.",	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	92);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	36);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	36);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x20000400,	-1,	4);

	id = get_struc_id("s735_100");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_4",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_8",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_C",	0XC,	0x80000400,	-1,	4);
	set_member_cmt(id,	0XC,	"{4133D0} sets this to {({struct s735_100+8}-{struct s735_100+4})/63} (63 is amount of elements in {struct s735.0} ||| ref,code,ref,ref,ref",	0);
	mid = add_struc_member(id,"owner_s735",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("s735");
	mid = add_struc_member(id,"floatField_0",	0,	0x80000400,	-1,	252);
	mid = add_struc_member(id,"floatField_FC",	0XFC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_100",	0X100,	0x60000400,	get_struc_id("s735_100"),	20);

	id = get_struc_id("MenuCarInstance_10_2E0");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	40);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	40);
	mid = add_struc_member(id,"field_50",	0X50,	0x000400,	-1,	68);

	id = get_struc_id("MenuCarInstance_10");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_140",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14C",	0X14C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_190",	0X190,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2E0",	0X2E0,	0x60000400,	get_struc_id("MenuCarInstance_10_2E0"),	148);
	mid = add_struc_member(id,"field_374",	0X374,	0x60000400,	get_struc_id("s734"),	232);
	mid = add_struc_member(id,"field_45C",	0X45C,	0x60000400,	get_struc_id("s735"),	276);

	id = get_struc_id("MenuCarInstance");
	mid = add_struc_member(id,"carIndex",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x60000400,	get_struc_id("MenuCarInstance_10"),	1392);
	mid = add_struc_member(id,"field_580",	0X580,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_581",	0X581,	0x000400,	-1,	1);
	mid = add_struc_member(id,"someDummySkinHash",	0X584,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X584,	"if {struct Car.88C} was not 0, this is set to hash of DUMMY_SKIN%d where %d is something ||| ref",	1);
	mid = add_struc_member(id,"someWheelHash",	0X588,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X588,	"set to hash of DUMMY_WHEEL%d at some point",	1);
	mid = add_struc_member(id,"someSpinnerHash",	0X58C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X58C,	"set to hash of DUMMY_SPINNER%d at some point",	1);
	mid = add_struc_member(id,"field_590",	0X590,	0x25500400,	0XFFFFFFFF,	64,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_5D0",	0X5D0,	0x20000400,	-1,	484);
	mid = add_struc_member(id,"somePMatrix1",	0X7B4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_7B8",	0X7B8,	0x20000400,	-1,	60);
	mid = add_struc_member(id,"field_7F4",	0X7F4,	0x20000400,	-1,	68);
	mid = add_struc_member(id,"field_838",	0X838,	0x000400,	-1,	170);
	set_member_cmt(id,	0X838,	"all initialized to 1",	1);
	mid = add_struc_member(id,"field_8E4",	0X8E4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8E8",	0X8E8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8EC",	0X8EC,	0x20000400,	-1,	4);

	id = get_struc_id("CarSelectCarEntry");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"just a dtor",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0X10,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"carInstance",	0X20,	0x60000400,	get_struc_id("MenuCarInstance"),	2288);
	mid = add_struc_member(id,"playerId",	0X910,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X910,	"1 or 2",	1);
	mid = add_struc_member(id,"needApplyTuningToCarInstance",	0X914,	0x000400,	-1,	1);
	set_member_cmt(id,	0X914,	"just a guess",	1);
	mid = add_struc_member(id,"car",	0X918,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_91C",	0X91C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"slotHash",	0X920,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X920,	"gets its value from {struct InventoryCar.8} ||| ref",	1);
	mid = add_struc_member(id,"field_924",	0X924,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_928",	0X928,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X92F,	0x000400,	-1,	1);

	id = get_struc_id("s483");
	mid = add_struc_member(id,"value",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"just seems like an index",	1);
	mid = add_struc_member(id,"name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("Tmp4DF9C0ListEntry");
	mid = add_struc_member(id,"link",	0,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"carIndex",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("UIProgressBar$vtable");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"{4FF480} ||| ref",	1);
	mid = add_struc_member(id,"procInitializeElements",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8,	"{540C10} ||| ref",	1);
	mid = add_struc_member(id,"procHideOrShowElements",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"{512240} ||| ref",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"{526D90} ||| ref",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"{526F80} ||| ref",	1);
	mid = add_struc_member(id,"procUpdateUI",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"{4FF530} ||| ref",	1);
	mid = add_struc_member(id,"procUpdateUIVertical",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"{540E90} ||| ref",	1);
	mid = add_struc_member(id,"procUpdateUIHorizontal",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"{540D20} ||| ref",	1);

	id = get_struc_id("UIProgressBarInitializeElementsConfig");
	mid = add_struc_member(id,"parentFngName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"backingName",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"handleName",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"valueName",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currName",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"endCapName",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"endName",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_2C",	0X2C,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCarSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1AF,	0x000400,	-1,	1);

	id = get_struc_id("CareerCribFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("CareerWorldMapFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X22F,	0x000400,	-1,	1);

	id = get_struc_id("ChooseCustomHUDFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0XB3,	0x000400,	-1,	1);

	id = get_struc_id("ChooseCustomizeCategoryFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X16F,	0x000400,	-1,	1);

	id = get_struc_id("ChoosePaintCategoryFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("ChoosePerformanceCategoryFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("ChooseRimBrandFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("ChooseSpinnerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X217,	0x000400,	-1,	1);

	id = get_struc_id("ChooseUniquePartFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("ChooseVinylLayerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("CreditsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X67,	0x000400,	-1,	1);

	id = get_struc_id("CribRewardOptionsMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("CustomHUDOverlayFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X12B,	0x000400,	-1,	1);

	id = get_struc_id("CustomNeonMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X163,	0x000400,	-1,	1);

	id = get_struc_id("DateEntryFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X8F,	0x000400,	-1,	1);

	id = get_struc_id("DebugCarCustomizeFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X87,	0x000400,	-1,	1);

	id = get_struc_id("DecalMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X177,	0x000400,	-1,	1);

	id = get_struc_id("DecalsOverlayFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X11B,	0x000400,	-1,	1);

	id = get_struc_id("DeleteprofileFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("DemoLegalFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X53,	0x000400,	-1,	1);

	id = get_struc_id("DemoPSAFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("DiscErrorPCFngObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("EATraxJukeboxFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X127,	0x000400,	-1,	1);

	id = get_struc_id("EngageEventDialogFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("EngageRaceDialogFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X5B,	0x000400,	-1,	1);

	id = get_struc_id("GenericPartsBrowserFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1E3,	0x000400,	-1,	1);

	id = get_struc_id("ICEMAINFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X16B,	0x000400,	-1,	1);

	id = get_struc_id("IGPlayMovieFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X67,	0x000400,	-1,	1);

	id = get_struc_id("InGameWorldMapFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X63,	0x000400,	-1,	1);

	id = get_struc_id("EngageShopDialogFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("GarageMainFNGObject_1D8");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"uiElement1x",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"uiElement1",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uiElement2",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uiElement1width",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);

	id = get_struc_id("GarageMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_80",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_98",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B4",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_BC",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_CC",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D4",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_DC",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E0",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E8",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_EC",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F0",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F4",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F8",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_FC",	0XFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_100",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_104",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_118",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_11C",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_120",	0X120,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_124",	0X124,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_128",	0X128,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_12C",	0X12C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_130",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_134",	0X134,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_138",	0X138,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_13C",	0X13C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_140",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14C",	0X14C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_150",	0X150,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_154",	0X154,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_158",	0X158,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15C",	0X15C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_160",	0X160,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_161",	0X161,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_162",	0X162,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_163",	0X163,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_164",	0X164,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_165",	0X165,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_166",	0X166,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_167",	0X167,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_168",	0X168,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_16C",	0X16C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16D",	0X16D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_170",	0X170,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_174",	0X174,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_178",	0X178,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_17C",	0X17C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_180",	0X180,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_184",	0X184,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_188",	0X188,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18C",	0X18C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_190",	0X190,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_194",	0X194,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_198",	0X198,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_19C",	0X19C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1A0",	0X1A0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1A4",	0X1A4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1A8",	0X1A8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1AC",	0X1AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1B0",	0X1B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiLabelCarName",	0X1B4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiLabelPlayerName",	0X1B8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiLabelStyle",	0X1BC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C0",	0X1C0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C4",	0X1C4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C8",	0X1C8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1CC",	0X1CC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D0",	0X1D0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D4",	0X1D4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D8",	0X1D8,	0x60000400,	get_struc_id("GarageMainFNGObject_1D8"),	24);
	mid = add_struc_member(id,"field_1F0",	0X1F0,	0x60000400,	get_struc_id("GarageMainFNGObject_1D8"),	24);
	mid = add_struc_member(id,"field_208",	0X208,	0x60000400,	get_struc_id("GarageMainFNGObject_1D8"),	24);
	mid = add_struc_member(id,"field_220",	0X220,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_224",	0X224,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_228",	0X228,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_22C",	0X22C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_230",	0X230,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_234",	0X234,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_238",	0X238,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_23C",	0X23C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_240",	0X240,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_244",	0X244,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_248",	0X248,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24C",	0X24C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_250",	0X250,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_254",	0X254,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_258",	0X258,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_25C",	0X25C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_260",	0X260,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_264",	0X264,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_268",	0X268,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_26C",	0X26C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_270",	0X270,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_274",	0X274,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_278",	0X278,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X27F,	0x000400,	-1,	1);

	id = get_struc_id("GarageMainFNGObject_234");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x60000400,	get_struc_id("MenuCarInstance"),	2288);
	mid = add_struc_member(id,"field_900",	0X900,	0x60000400,	get_struc_id("MenuCarInstance"),	2288);
	mid = add_struc_member(id,"field_11F0",	0X11F0,	0x60000400,	get_struc_id("MenuCarInstance"),	2288);
	mid = add_struc_member(id,"field_1AE0",	0X1AE0,	0x60000400,	get_struc_id("MenuCarInstance"),	2288);
	mid = add_struc_member(id,"field_23D0",	0X23D0,	0x60000400,	get_struc_id("MenuCarInstance"),	2288);
	mid = add_struc_member(id,"field_2CC0",	0X2CC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CC4",	0X2CC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CC8",	0X2CC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CCC",	0X2CCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CD0",	0X2CD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CD4",	0X2CD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CD8",	0X2CD8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2CDC",	0X2CDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2CE0",	0X2CE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X2CEF,	0x000400,	-1,	1);

	id = get_struc_id("LoadingTipsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X5B,	0x000400,	-1,	1);

	id = get_struc_id("LSDemoWarningFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("LSEALogoFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("LSIntroFMVFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("LSPSAMovieFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X5F,	0x000400,	-1,	1);

	id = get_struc_id("LSSplashFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X53,	0x000400,	-1,	1);

	id = get_struc_id("LSTHXMovieFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("MagazineBackFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("MagazineRewardFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0XAB,	0x000400,	-1,	1);

	id = get_struc_id("MagazineSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X157,	0x000400,	-1,	1);

	id = get_struc_id("MagazineViewFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X53,	0x000400,	-1,	1);

	id = get_struc_id("MCListFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X107,	0x000400,	-1,	1);

	id = get_struc_id("NeonPartsOverlayFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X11F,	0x000400,	-1,	1);

	id = get_struc_id("OLCarLotFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1BB,	0x000400,	-1,	1);

	id = get_struc_id("OLChallengeFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X167,	0x000400,	-1,	1);

	id = get_struc_id("OLCreateUserFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1A3,	0x000400,	-1,	1);

	id = get_struc_id("OLDisconnectBGFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X6F,	0x000400,	-1,	1);

	id = get_struc_id("OLDisconnectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X5B,	0x000400,	-1,	1);

	id = get_struc_id("OLEALoginFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X16F,	0x000400,	-1,	1);

	id = get_struc_id("WheelOptionsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("VirtualKeyboardFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X21B,	0x000400,	-1,	1);

	id = get_struc_id("TwoPPressStartFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4D",	0X4D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("TrailersFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("ShowcaseDPADFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("IconScrollerBase");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"most likely 79C0F4 (for IconScroller struct)",	1);
	mid = add_struc_member(id,"icons",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4,	"links {struct IconScrollerIcon} (offset 4) ||| ref",	1);
	mid = add_struc_member(id,"selectedIcon",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uiElementOPTION_MASTER",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"identified by hash of \"OPTION_MASTER\"",	1);
	mid = add_struc_member(id,"uiElementLOCK_MASTER",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"identified by hash of \"LOCK_MASTER\"",	1);
	mid = add_struc_member(id,"uiElementBUTTON_MASTER",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"identified by hash of \"BUTTON_MASTER\"",	1);
	mid = add_struc_member(id,"fngName",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"optionPrefix",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X20,	"inited to \"option_\"",	1);
	mid = add_struc_member(id,"floatField_24",	0X24,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X24,	"inited to 10.0, then 40.0",	1);
	mid = add_struc_member(id,"numIcons",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"inited to 1",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2D",	0X2D,	0x000400,	-1,	1);
	set_member_cmt(id,	0X2D,	"inited to 1",	1);
	mid = add_struc_member(id,"field_2E",	0X2E,	0x000400,	-1,	1);
	set_member_cmt(id,	0X2E,	"inited to 1",	1);
	mid = add_struc_member(id,"field_2F",	0X2F,	0x000400,	-1,	1);
	set_member_cmt(id,	0X2F,	"inited to 1",	1);
	mid = add_struc_member(id,"field_30",	0X30,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_31",	0X31,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_32",	0X32,	0x000400,	-1,	1);
	return id;
}

static Structures_2(id) {
        auto mid;

	mid = add_struc_member(id,"field_33",	0X33,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X34,	"inited to -9",	1);

	id = get_struc_id("IconScroller");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("IconScrollerBase"),	56);
	mid = add_struc_member(id,"scrollingThing",	0X38,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_98",	0X98,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_9C",	0X9C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_B4",	0XB4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XB4,	"inited to 1.0, 0.3f",	1);
	mid = add_struc_member(id,"floatField_B8",	0XB8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XB8,	"inited to 1.0",	1);
	mid = add_struc_member(id,"field_BC",	0XBC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_BE",	0XBE,	0x10000400,	-1,	2);
	set_member_cmt(id,	0XBE,	"inited to 1",	1);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC0,	"inited to 1",	1);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"selectedIconIndex",	0XC8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC8,	"inited to 1, index in {struct IconScrollerBase+4} (so can't be 0 because that would be the {struct IconScrollerBase} struct itself, which is not an icon",	1);
	mid = add_struc_member(id,"floatField_CC",	0XCC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XCC,	"inited to 480.0 (by passed param)",	1);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_D4",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_D8",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_DC",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_E0",	0XE0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x000400,	-1,	1);

	id = get_struc_id("IconScrollerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"iconScroller",	0X4C,	0x60000400,	get_struc_id("IconScroller"),	229);
	mid = add_struc_member(id,"iconTitleUILabel",	0X134,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X134,	"for ICON_TITLE, may be null",	1);
	mid = add_struc_member(id,"emptystringUILabel",	0X138,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X138,	"label with name empty string; may be null",	1);
	mid = add_struc_member(id,"field_13C",	0X13C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_140",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14C",	0X14C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14D",	0X14D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14E",	0X14E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14F",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("ChoosePerformancePackageFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("IconScrollerFNGObject"),	336);
	mid = add_struc_member(id,"field_15C",	0X15C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_160",	0X160,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_161",	0X161,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_162",	0X162,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_163",	0X163,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_164",	0X164,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_168",	0X168,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16C",	0X16C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_170",	0X170,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_174",	0X174,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_178",	0X178,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_17C",	0X17C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_180",	0X180,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_184",	0X184,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_188",	0X188,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18C",	0X18C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_190",	0X190,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_194",	0X194,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_198",	0X198,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_19C",	0X19C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1A0",	0X1A0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1A4",	0X1A4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1A8",	0X1A8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1AC",	0X1AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1B0",	0X1B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1B4",	0X1B4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1B8",	0X1B8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1BC",	0X1BC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C0",	0X1C0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C4",	0X1C4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C8",	0X1C8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1CC",	0X1CC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D0",	0X1D0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D4",	0X1D4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D8",	0X1D8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1DC",	0X1DC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1E0",	0X1E0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1E4",	0X1E4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1E8",	0X1E8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1EC",	0X1EC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1F0",	0X1F0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1F4",	0X1F4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1F8",	0X1F8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1FC",	0X1FC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_200",	0X200,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_204",	0X204,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_208",	0X208,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20C",	0X20C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_210",	0X210,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_214",	0X214,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_218",	0X218,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_21C",	0X21C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_220",	0X220,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_224",	0X224,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_228",	0X228,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_22C",	0X22C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_230",	0X230,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_234",	0X234,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_238",	0X238,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_23C",	0X23C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_240",	0X240,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_244",	0X244,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_248",	0X248,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24C",	0X24C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X24F,	0x000400,	-1,	1);

	id = get_struc_id("DebugTestFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("DemoESRBFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("MCBootupFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X97,	0x000400,	-1,	1);

	id = get_struc_id("MCBackgroundFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("MCMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X9B,	0x000400,	-1,	1);

	id = get_struc_id("OLAgeVerifFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("OLCreateUser2FNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("OLEAMessengerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1CB,	0x000400,	-1,	1);

	id = get_struc_id("OLFeedbackFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X107,	0x000400,	-1,	1);

	id = get_struc_id("OLFiltersFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X157,	0x000400,	-1,	1);

	id = get_struc_id("OLForgotAccountNameFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X18F,	0x000400,	-1,	1);

	id = get_struc_id("OLFriendDialogueFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X117,	0x000400,	-1,	1);

	id = get_struc_id("OLGameRoomclientFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("OLGameRoomhostFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("OLISPConnectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("OLMAINFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X16F,	0x000400,	-1,	1);

	id = get_struc_id("OLNewsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X117,	0x000400,	-1,	1);

	id = get_struc_id("OLPassworFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X163,	0x000400,	-1,	1);

	id = get_struc_id("OLPreRaceStartFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("OLRankingsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("OLRankingsMonthlyFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X93,	0x000400,	-1,	1);

	id = get_struc_id("OLRankingsOverallFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X3C3,	0x000400,	-1,	1);

	id = get_struc_id("OLRankingsPersonalFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X97,	0x000400,	-1,	1);

	id = get_struc_id("OLSelectPersonaFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X16F,	0x000400,	-1,	1);

	id = get_struc_id("OLUseExistingFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X19F,	0x000400,	-1,	1);

	id = get_struc_id("OLViewCareerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1E7,	0x000400,	-1,	1);

	id = get_struc_id("OLViewCarFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X12B,	0x000400,	-1,	1);

	id = get_struc_id("OLViewTrackFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X163,	0x000400,	-1,	1);

	id = get_struc_id("OLWebOfferFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X52F,	0x000400,	-1,	1);

	id = get_struc_id("OLWebOffer2FNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("OLWebOfferFNGObject"),	1328);

	id = get_struc_id("OLXFindResultsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X177,	0x000400,	-1,	1);

	id = get_struc_id("OLXMessageFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1383,	0x000400,	-1,	1);

	id = get_struc_id("OptionsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X163,	0x000400,	-1,	1);

	id = get_struc_id("OptionsMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("PaintFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X18F,	0x000400,	-1,	1);

	id = get_struc_id("PauseFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X157,	0x000400,	-1,	1);

	id = get_struc_id("PauseOptionsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X15B,	0x000400,	-1,	1);

	id = get_struc_id("PauseOptionsMainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("PCCustomizeOptionFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14B,	0x000400,	-1,	1);

	id = get_struc_id("PCLANFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("PCLANServerSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X927,	0x000400,	-1,	1);

	id = get_struc_id("PCOLGameRoomFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X11C3,	0x000400,	-1,	1);

	id = get_struc_id("PCOLLobbyFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X1CF,	0x000400,	-1,	1);

	id = get_struc_id("PCOLSEARCHFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceBrandSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14B,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceDynoChartFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X53,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceDynoMAINFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X157,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceDynoResultsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X11F,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceTuningGraph");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X57,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceTuningMaster");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X157,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceTuningSetting");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X157,	0x000400,	-1,	1);

	id = get_struc_id("PerformanceTuningSlidersFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("PostRaceFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("PostRaceResultsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X77,	0x000400,	-1,	1);

	id = get_struc_id("PostRaceRewardFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("PostRaceStatsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X18F,	0x000400,	-1,	1);

	id = get_struc_id("PostRaceTournResultsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X8B,	0x000400,	-1,	1);

	id = get_struc_id("PostRaceTournStandingsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X93,	0x000400,	-1,	1);

	id = get_struc_id("ProfileManagerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("QRModeOptionsFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X163,	0x000400,	-1,	1);

	id = get_struc_id("QRModeSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X14F,	0x000400,	-1,	1);

	id = get_struc_id("CarSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4D",	0X4D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4E",	0X4E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"selectableCars",	0X50,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X50,	"entries are {struct CarSelectCarEntry} (link offset 10h) ||| ref",	1);
	mid = add_struc_member(id,"currentSelectedCar",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"browsingPlayerIndex",	0X5C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X5C,	"0/1",	1);
	mid = add_struc_member(id,"numSelectableCars",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentIndexInSelectableCars",	0X64,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X64,	"assumption; please confirm\n0 is sentinel node",	1);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"scrollingThing",	0X6C,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"manufacturerLogoUIElement",	0XC8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"carBadgeUIElement",	0XCC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prevCategoryButton",	0XD0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nextCategoryButton",	0XD4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"accelerationIndicator",	0XD8,	0x60000400,	get_struc_id("UIProgressBar"),	68);
	mid = add_struc_member(id,"topSpeedIndicator",	0X11C,	0x60000400,	get_struc_id("UIProgressBar"),	68);
	mid = add_struc_member(id,"handlingIndicator",	0X160,	0x60000400,	get_struc_id("UIProgressBar"),	68);
	mid = add_struc_member(id,"field_1A4",	0X1A4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A5",	0X1A5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A6",	0X1A6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A7",	0X1A7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"slotHash",	0X1A8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1A8,	"initialized to {83A9D0.10.D4.4} ||| ref",	1);
	mid = add_struc_member(id,"field_1AC",	0X1AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1B0",	0X1B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1B4",	0X1B4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X1B7,	0x000400,	-1,	1);

	id = get_struc_id("QRTrackSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X15F,	0x000400,	-1,	1);

	id = get_struc_id("QuickRaceCarSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0XE3,	0x000400,	-1,	1);

	id = get_struc_id("ReplayControlFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X107,	0x000400,	-1,	1);

	id = get_struc_id("RewardsSponsorFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X203,	0x000400,	-1,	1);

	id = get_struc_id("RimsBrowserFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X217,	0x000400,	-1,	1);

	id = get_struc_id("ShowcasePreviewFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0XEB,	0x000400,	-1,	1);

	id = get_struc_id("SponsorPopupFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("IconScrollerIcon");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4,	"links itself (offset 4)",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiElement10",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"floatField_14",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_21",	0X21,	0x000400,	-1,	1);
	mid = add_struc_member(id,"isLocked",	0X22,	0x000400,	-1,	1);
	set_member_cmt(id,	0X22,	"show lock icon & don't allow enter",	0);
	mid = add_struc_member(id,"field_23",	0X23,	0x000400,	-1,	1);
	mid = add_struc_member(id,"uiElement10Width",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"uiElement10Height",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"languageKeyIconName",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"languageKeyOption?NeverUsed",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_34",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_38",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_3C",	0X3C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_40",	0X40,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_45",	0X45,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X47,	0x000400,	-1,	1);

	id = get_struc_id("SponsorIconScrollerIcon");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("IconScrollerIcon"),	72);
	mid = add_struc_member(id,"sponsor",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("CommonFNGObjectStructA");
	mid = add_struc_member(id,"ownerFNGObject",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"scrollingThing",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"strField_C",	0XC,	0x000400,	-1,	32);
	set_member_cmt(id,	0XC,	"\"TERMS_%d\" for sponsor select screen",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrAllocatedBytes50DB80",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);

	id = get_struc_id("SponsorshipnewFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("IconScrollerFNGObject"),	336);
	set_member_cmt(id,	0,	"scroller to select sponsor",	1);
	mid = add_struc_member(id,"masterOptionUIElement",	0X150,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X150,	"element with hash 'MASTER_OPTION'",	0);
	mid = add_struc_member(id,"sponsorLogoUIElementAgain",	0X158,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X158,	"points to the same element as {struct SponsorshipnewFNGObject+5C} at time of debugging ||| ref",	0);
	mid = add_struc_member(id,"field_15C",	0X15C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_160",	0X160,	0x60000400,	get_struc_id("CommonFNGObjectStructA"),	84);
	set_member_cmt(id,	0X160,	"its {struct CommonFNGObjectStructA+C} will contain \"TERMS_%D\"",	0);
	mid = add_struc_member(id,"contractTermsScroller",	0X1B4,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"field_20C",	0X20C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sponsorLogoUIElementAgainAgain",	0X210,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X210,	"points to the same element as {struct SponsorshipnewFNGObject+5C} at time of debugging ||| ref",	0);

	id = get_struc_id("StartCareerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X153,	0x000400,	-1,	1);

	id = get_struc_id("StatusCareerFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X107,	0x000400,	-1,	1);

	id = get_struc_id("StatusDVDFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("StatusMasterFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X107,	0x000400,	-1,	1);

	id = get_struc_id("StatusRegionFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("LSChineseHealthFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("LSBlankMovieFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);

	id = get_struc_id("LSLangSelectFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("IconScrollerFNGObject"),	336);

	id = get_struc_id("FNGObject$vtable");
	mid = add_struc_member(id,"dtor",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procMessageHandler",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("IconScrollerFNGObject$vtable");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject$vtable"),	16);
	mid = add_struc_member(id,"procSelectedIconChanged",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"default {50DA50} ||| ref",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procAddIconEntryToScroller",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"default {50DAB0} ||| ref",	1);

	id = get_struc_id("IconScrollerBase$vtable");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"most likely 543BF0",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"most likely 538940",	1);
	mid = add_struc_member(id,"procAddIconEntry",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"most likely {543C10} ||| ref",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"most likely 50D980",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"most likely 52F7C0",	1);
	mid = add_struc_member(id,"procSetSelectedIcon",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"most likely {52F680} ||| ref",	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"most likely 538B80",	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"most likely 51F870",	1);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"most likely 538A30",	1);

	id = get_struc_id("MainFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("IconScrollerFNGObject"),	336);

	id = get_struc_id("PCHelpBarFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"buttonsLink",	0X4C,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4C,	"type PCHelpBarButton struct",	1);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"buttonOwnerFngName",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"oldButtonOwnerFngName",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X60,	"somehash? see usages, set to A3E4657B on fng init",	1);
	mid = add_struc_member(id,"currentButtonMask",	0X64,	0x28800400,	get_enum("PCHELPBARFLAGS"),	4);
	set_member_cmt(id,	0X64,	"set to fngdata_fieldC on ctor",	1);
	mid = add_struc_member(id,"someTimingField",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"shouldShow",	0X6C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6D",	0X6D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6E",	0X6E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6F",	0X6F,	0x000400,	-1,	1);

	id = get_struc_id("DialogInfo");
	mid = add_struc_member(id,"text",	0,	0x000400,	-1,	768);
	mid = add_struc_member(id,"leftButtonLanguageString",	0X300,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"leftButtonMessage",	0X304,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rightButtonLanguageString",	0X308,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rightButtonMessage",	0X30C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"middleButtonLanguageString",	0X310,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"middleButtonMessage",	0X314,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"escMessage",	0X318,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X318,	"Message to send when pressing esc. If 0, dialog is not escapable",	1);
	mid = add_struc_member(id,"field_31C",	0X31C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"parentFNGName",	0X320,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"myFNGName",	0X324,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"numButtons",	0X328,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_32C",	0X32C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"isHelpDialog",	0X32D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_32E",	0X32E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"textNeedsSomeWcharConversion",	0X32F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"messageToSendToParentFNGWhenThisDialogIsDismissed",	0X330,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X330,	"this is a message that will be sent (when non-zero) (with {55DC20}) to {struct DialogInfo+320} when this dialog is dismissed due to {558020} being called to show another dialog ||| ref,ref,ref\n\ninitialized to 0 in {558020}, but some dialog set this later ||| ref\n\nTODO: explore maybe?",	0);
	mid = add_struc_member(id,"dialogId",	0X334,	0x20000400,	-1,	4);

	id = get_struc_id("DialogFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"didSuppressHelpBarShouldShowFlagWhenShowing",	0X4C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4D",	0X4D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4E",	0X4E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4F",	0X4F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"returnWithMessage",	0X50,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X50,	"-1 = unset",	1);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dialogInfo",	0X58,	0x60000400,	get_struc_id("DialogInfo"),	824);

	id = get_struc_id("ChyronIGFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_55",	0X55,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_56",	0X56,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_57",	0X57,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);

	id = get_struc_id("IcePartsOverlayFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"ptrField_110",	0X110,	0x20000400,	-1,	4);

	id = get_struc_id("SubScrollingThing");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"probably {795CB4} ||| ref",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link8",	0X8,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X8,	"links {struct MailBoxRelated1} or {struct MailBoxRelated3} (see parent struct) ||| ref,ref",	1);
	mid = add_struc_member(id,"link10",	0X10,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"numberField_18",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"inc'd when {struct SubScrollingThing+8} gets a new entry ||| ref",	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uielement",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"scrollingThing",	0X34,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"floatField_8C",	0X8C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X8C,	"stores {struct SubScrollingThing+30} UI element coordinate x ||| ref",	1);
	mid = add_struc_member(id,"floatField_90",	0X90,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X90,	"stores {struct SubScrollingThing+30} UI element coordinate y ||| ref",	1);
	mid = add_struc_member(id,"floatField_94",	0X94,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_98",	0X98,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9D",	0X9D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9E",	0X9E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9F",	0X9F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x000400,	-1,	1);

	id = get_struc_id("SMSMailboxFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"someTimingValue",	0X4C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4C,	"possibly float",	1);
	mid = add_struc_member(id,"subScrollingThing1",	0X50,	0x60000400,	get_struc_id("SubScrollingThing"),	169);
	set_member_cmt(id,	0X50,	"its {struct SubScrollingThing+8} links {struct MailBoxRelated1} ||| ref,ref",	1);
	mid = add_struc_member(id,"subScrollingThing2",	0XFC,	0x60000400,	get_struc_id("SubScrollingThing"),	169);
	set_member_cmt(id,	0XFC,	"its {struct SubScrollingThing+8} links {struct MailBoxRelated3} ||| ref,ref",	1);
	mid = add_struc_member(id,"field_1A8",	0X1A8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1AC",	0X1AC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"uiElementUpArrow",	0X1B0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X1B0,	"ui element \"UP_ARROW\"",	1);
	mid = add_struc_member(id,"uiElementDownArrow",	0X1B4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X1B4,	"ui element \"DOWN_ARROW\"",	1);

	id = get_struc_id("MailBoxRelated1");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"seems like a destructor + nullsub",	1);
	mid = add_struc_member(id,"link1",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4,	"links own types",	1);
	mid = add_struc_member(id,"link2",	0XC,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0XC,	"links {struct MailBoxRelated2} ||| ref",	1);
	mid = add_struc_member(id,"uielement",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X14,	"ui element \"HIGH_LIGHT_%d\"",	1);
	mid = add_struc_member(id,"floatField_18",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"related to the rect of {struct MailBoxRelated1+14}",	1);
	mid = add_struc_member(id,"floatField_1C",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"related to the rect of {struct MailBoxRelated1+14}",	1);
	mid = add_struc_member(id,"floatField_20",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"related to the rect of {struct MailBoxRelated1+14}",	1);
	mid = add_struc_member(id,"floatField_24",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"related to the rect of {struct MailBoxRelated1+14}",	1);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"animationString1",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"animationString2",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("MailBoxRelated3");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"seems like a destructor + nullsub, name as {struct MailBoxRelated1} ||| ref",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0XC,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0XC,	"links {struct MailBoxRelated4} ||| ref",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"animationString1",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"animationString2",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("MailBoxRelated2");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"single dtor func",	1);
	mid = add_struc_member(id,"uielement",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"element with name \"MESSAGE_TEXT_%d\"",	1);

	id = get_struc_id("MailBoxRelated4");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"single dtor func",	1);
	mid = add_struc_member(id,"uielement",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("Mailbox");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"only a dtor entry",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0XC,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"mailboxId",	0X18,	0x28800400,	get_enum("MAILBOX"),	4);

	id = get_struc_id("SmsDataData");
	mid = add_struc_member(id,"typeAstageIndex",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"stage index in hi16",	1);
	mid = add_struc_member(id,"typeFmarkerHash",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1,	"hash matching marker data {struct Marker+30} ||| ref",	0);
	mid = add_struc_member(id,"unk",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"typeCstageIndex",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3,	"stage index in hi16",	1);
	mid = add_struc_member(id,"type1raceHash",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"type9stageIndex",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X5,	"stage index in hi16",	1);
	mid = add_struc_member(id,"type3unk",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"type2unk",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"typeEunk",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"type7unk",	0,	0x20000400,	-1,	4);

	id = get_struc_id("SmsData");
	mid = add_struc_member(id,"careerTextLanguageTableOffset",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"offset in language table {838428} ||| ref",	1);
	mid = add_struc_member(id,"type",	0X2,	0x8800400,	get_enum("SMS_TYPE"),	1);
	mid = add_struc_member(id,"mailboxId",	0X3,	0x8800400,	get_enum("MAILBOX"),	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"data",	0X8,	0x60000400,	get_struc_id("SmsDataData"),	4);
	mid = add_struc_member(id,"moneyReward",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"senderLanguageLabel",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("SmsListEntry");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0XC,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sms",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("EngageMessageDialogFNGObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("FNGObject"),	76);
	mid = add_struc_member(id,"field_50",	0X50,	0x60000400,	get_struc_id("CommonFNGObjectStructA"),	84);
	mid = add_struc_member(id,"scrollingThing",	0XA4,	0x60000400,	get_struc_id("ScrollingThing"),	88);
	mid = add_struc_member(id,"sms",	0XFC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_100",	0X100,	0x20000400,	-1,	4);

	id = get_struc_id("SubScrollingThing$vtable");
	mid = add_struc_member(id,"field_0",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("ControllerOptionsRelated");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"pos",	0XC,	0x60000400,	get_struc_id("vec2"),	8);
	mid = add_struc_member(id,"size",	0X14,	0x60000400,	get_struc_id("vec2"),	8);
	mid = add_struc_member(id,"floatField_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"backingElement",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X24,	"background type1 ui element",	0);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	set_member_cmt(id,	0X28,	"element not focusable if this is 0",	1);
	mid = add_struc_member(id,"field_29",	0X29,	0x000400,	-1,	1);
	set_member_cmt(id,	0X29,	"element not focusable if this is 1",	1);
	mid = add_struc_member(id,"uilabel",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"sizeCopy",	0X30,	0x60000400,	get_struc_id("vec2"),	8);

	id = get_struc_id("ControllerOptionsRelated$vtable");
	mid = add_struc_member(id,"procDtor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"procDispatchMessage",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"procOnClick",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procUpdateLabelText",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procShow",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"+ backing",	1);
	mid = add_struc_member(id,"procHide",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"+ backing",	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procHighlight",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procUnhighlight",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procSetPos",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"procSetPosX",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"procSetPosY",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);

	id = get_struc_id("ControllerStruct874C40_58");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("ControllerStruct874C40_158");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("ControllerStruct874C40_1D8");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("ControllerStruct874C40_D8");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("ControllerStruct874C40");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"only has dtor",	0);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"inited to -1",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"inited to -1",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	set_member_cmt(id,	0X10,	"inited to 0",	1);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	1);
	set_member_cmt(id,	0X11,	"inited to 0",	1);
	mid = add_struc_member(id,"field_12",	0X12,	0x000400,	-1,	1);
	set_member_cmt(id,	0X12,	"inited to 0x80",	1);
	mid = add_struc_member(id,"field_13",	0X13,	0x000400,	-1,	1);
	set_member_cmt(id,	0X13,	"inited to 0x80",	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x60000400,	get_struc_id("ControllerStruct874C40_58"),	64);
	mid = add_struc_member(id,"field_98",	0X98,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x60000400,	get_struc_id("ControllerStruct874C40_D8"),	64);
	mid = add_struc_member(id,"field_158",	0X158,	0x60000400,	get_struc_id("ControllerStruct874C40_158"),	64);
	mid = add_struc_member(id,"field_1D8",	0X1D8,	0x60000400,	get_struc_id("ControllerStruct874C40_1D8"),	64);
	mid = add_struc_member(id,"field_218",	0X218,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X218,	"inited to 1",	1);
	mid = add_struc_member(id,"field_21C",	0X21C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_230",	0X230,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X230,	"an index or -1",	1);
	mid = add_struc_member(id,"type",	0X234,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X234,	"0x13 = keyboard (not a controller)",	1);
	mid = add_struc_member(id,"field_238",	0X238,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentActiveKeyIndex",	0X33C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"currentActiveIsSecondary",	0X340,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_344",	0X344,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X344,	"at least 4 elements",	1);
	mid = add_struc_member(id,"field_350",	0X350,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_354",	0X354,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_358",	0X358,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_35C",	0X35C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_360",	0X360,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_364",	0X364,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_365",	0X365,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_366",	0X366,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_367",	0X367,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_368",	0X368,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_36C",	0X36C,	0x20000400,	-1,	4);

	id = get_struc_id("ControllerStruct835930");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"set to 0/1/2",	1);
	mid = add_struc_member(id,"index",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("U2RECT");
	mid = add_struc_member(id,"left",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"right",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x80000400,	-1,	4);

	id = get_struc_id("UIPos");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"leftOffset",	0X1C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"maybe translate?",	1);
	mid = add_struc_member(id,"topOffset",	0X20,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X20,	"maybe translate?",	1);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_38",	0X38,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X38,	"something with x position",	1);
	mid = add_struc_member(id,"floatField_3C",	0X3C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"somehting with y position",	1);

	id = get_struc_id("UIElement_Animation");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"next",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"related with field_10",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"maybe animation timer?",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hash_30",	0X30,	0x20000400,	-1,	4);

	id = get_struc_id("UIElement");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nextSibling",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hash",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"type",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"1-11? 2 = {struct UILabel} 5 = {struct UIContainer}, 7 = movie ||| ref,ref",	1);
	mid = add_struc_member(id,"flags",	0X1C,	0x28800400,	get_enum("UIELEMENTFLAGS"),	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"textureHashOrMovieName",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"see 497414 (textureHash) and 566250 (movieName)",	0);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pos",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X2C,	"some positioning (and maybe size) thing?",	1);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maybeSizeWidth?",	0X38,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X38,	"guessing this may be the width (for some types), based on {51D730} ||| ref\nalthough if this element is a label, the measured text width (which is also a guess) is multiplied by this member",	1);
	mid = add_struc_member(id,"maybeSizeHeight?",	0X3C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"guessing this may be the height (for some types), based on {51D730} ||| ref\nalthough if this element is a label, the measured text height (which is also a guess) is multiplied by this member",	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"firstAnimation",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4C,	"not {struct ObjectLink}, it's non-doubly linked list ||| ref",	0);
	mid = add_struc_member(id,"lastAnimation",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"currentAnimation?",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FERenderObject",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("UIElementType1");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("UIElement"),	92);

	id = get_struc_id("WideCharString");
	mid = add_struc_member(id,"pStr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"allocatedWcharLength",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"amount of wchars that can fit, excluding zero term",	1);

	id = get_struc_id("UILabel");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("UIElement"),	92);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X5C,	"some string pointer?",	1);
	mid = add_struc_member(id,"textLanguageString",	0X60,	0x28800400,	get_enum("LANGUAGE_LABELS"),	4);
	set_member_cmt(id,	0X60,	"the text (of the language files entry that matches this key) this label will display if its {struct UIElement+1C} does not include {enum UIELEMENTFLAGS/2} ||| ref,ref",	0);
	mid = add_struc_member(id,"customString",	0X64,	0x60000400,	get_struc_id("WideCharString"),	8);
	set_member_cmt(id,	0X64,	"the text this label will display if its {struct UIElement+1C} includes {enum UIELEMENTFLAGS/2} ||| ref,ref",	0);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);

	id = get_struc_id("UIContainer");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("UIElement"),	92);
	mid = add_struc_member(id,"numChildren",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rootElement",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("UIData");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"probably 79BCD8",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"isDrawingMagazineBack??",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"levelSorterPoolEntry",	0X10,	0x60000400,	get_struc_id("PoolEntry"),	8);
	set_member_cmt(id,	0X10,	"sentinel node",	1);

	id = get_struc_id("UIDataC");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"dtor only",	0);
	mid = add_struc_member(id,"link10",	0X10,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	13312);

	id = get_struc_id("UIData$vtable");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procInitFNGPackage",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"procUnloadFNGPackage",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X10,	"probably 51C8C0",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"51C690",	1);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"537480",	1);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"50C2C0",	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"50C490",	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X54,	"called when sending/queueing a message, arg1=msg,arg3=fnginfo*?",	1);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);

	id = get_struc_id("UIData_field8_4134");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numUIDLA",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"firstUIDLA",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lastUIDLA",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);

	id = get_struc_id("List");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"numEntries",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"first",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8,	"NULL when list is empty",	0);
	mid = add_struc_member(id,"last",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"NULL when list is empty",	0);

	id = get_struc_id("FNGInfoList");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("List"),	16);

	id = get_struc_id("UIData_field8");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"inputsEnabled",	0X1,	0x000400,	-1,	1);
	set_member_cmt(id,	0X1,	"can't interact with ui when 0 EXCEPT you can scroll iconscrollers with mouse :D",	0);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_29",	0X29,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	76);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	76);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numField8Instances?",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"fngPackagesDC",	0XDC,	0x60000400,	get_struc_id("FNGInfoList"),	16);
	mid = add_struc_member(id,"fngPackagesEC",	0XEC,	0x60000400,	get_struc_id("FNGInfoList"),	16);
	mid = add_struc_member(id,"field_FC",	0XFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_100",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_104",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiData",	0X10C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X10C,	"its {struct UIData+8} links to this struct ||| ref",	1);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4114",	0X4114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numMessagesInQueue",	0X4118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"messagesQueueLink",	0X411C,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X411C,	"entries are {struct UIMessage} ||| ref",	0);
	mid = add_struc_member(id,"field_4124",	0X4124,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numEntriesInlink412C",	0X4128,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link412C",	0X412C,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X412C,	"entries are {struct UIData_field8_412C} ||| ref",	0);
	mid = add_struc_member(id,"field_4134",	0X4134,	0x60000400,	get_struc_id("UIData_field8_4134"),	17);
	mid = add_struc_member(id,"field_4148",	0X4148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_414C",	0X414C,	0x20000400,	-1,	4096);
	mid = add_struc_member(id,"field_514C",	0X514C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5150",	0X5150,	0x20000400,	-1,	256);
	mid = add_struc_member(id,"field_5250",	0X5250,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5251",	0X5251,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5252",	0X5252,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5253",	0X5253,	0x000400,	-1,	1);

	id = get_struc_id("UIData_field8_8");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	128);

	id = get_struc_id("NamedLinkNode");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prev",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"name",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"ptr to mem specially allocated to hold this, see {519DE0} ||| ref",	1);
	mid = add_struc_member(id,"cihashOfName",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("UIData_field8_412C");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("NamedLinkNode"),	20);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"parentFngInfo",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("UIDLA");
	mid = add_struc_member(id,"__parentA",	0,	0x60000400,	get_struc_id("NamedLinkNode"),	20);
	mid = add_struc_member(id,"vtableB",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numEntries",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"firstEntry",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lastEntry",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uiElementType",	0X24,	0x20000400,	-1,	4);

	id = get_struc_id("UIDLA_ENTRY");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("NamedLinkNode"),	20);
	mid = add_struc_member(id,"type",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dataSize",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"initialized from map 799320 entry at this->type*4 :D",	1);
	mid = add_struc_member(id,"cumulativeDataSize",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"this entry's dataSize + sum of those values of all previous entries in this link",	0);
	mid = add_struc_member(id,"data",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("SomethingUI$vtable");
	mid = add_struc_member(id,"dtor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("SomethingUIImpl");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"usually 79B15C",	1);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"data30203",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"set if this instance is from a 30203 binsection, else null",	0);
	mid = add_struc_member(id,"binsection",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fngObject",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fngInfo",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_1E",	0X1E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"fngData",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X20,	"ptr to the entry in {7F7DC8} for the hash of this struct's fngname (which comes from its bindata), initialized in ctor ||| ref",	0);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"controlMask",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);

	id = get_struc_id("BinSection30203Data");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fngName",	0X28,	0x000400,	-1,	10);
	set_member_cmt(id,	0X28,	"length unknown",	1);

	id = get_struc_id("BinSection30210");
	mid = add_struc_member(id,"header",	0,	0x60000400,	get_struc_id("BinSectionHeader"),	8);
	mid = add_struc_member(id,"fngNameCSHash",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"see 51B97B for proof",	0);

	id = get_struc_id("UIElementVisitor$vtable");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"acceptElement",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4,	"return 0 to stop visiting",	1);

	id = get_struc_id("UIElementVisitor");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("UIElementVisitor_FindByHash");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("UIElementVisitor"),	4);
	mid = add_struc_member(id,"searchingHash",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"foundUIElement",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("UIElementVisitor_ClearFNGCache");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("UIElementVisitor"),	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("UIElementVisitor_FindByFieldC");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("UIElementVisitor"),	4);
	mid = add_struc_member(id,"searchingUIElementFieldC",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"foundUIElement",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("FERenderObject");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"maybe flags field?",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FERenderEPolyLink",	0X18,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X18,	"objectlink of pool entries?",	1);
	mid = add_struc_member(id,"__end",	0X9F,	0x000400,	-1,	1);

	id = get_struc_id("FERenderEPoly");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("PoolEntry"),	8);
	mid = add_struc_member(id,"__end",	0X9F,	0x000400,	-1,	1);

	id = get_struc_id("WorldAnimStuff");
	mid = add_struc_member(id,"worldAnimEntityPool",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"worldAnimEntityTreePool",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"worldAnimEntityTreeInfoPool",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"worldAnimCtrlPool",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"worldAnimInstanceEntryPool",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"arePoolsCreated",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"struct of size 8",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"struct of size 8",	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X38,	"struct of size 8",	1);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X40,	"struct of size 8",	1);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X48,	"struct of size 8",	1);

	id = get_struc_id("AudioStuff");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);

	id = get_struc_id("Struct836498");
	mid = add_struc_member(id,"ptrField0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bootFinished",	0X9,	0x000400,	-1,	1);
	set_member_cmt(id,	0X9,	"meaning, went through all entries in bootflow, see field 836488",	1);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_F",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"minimapEntityPool",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"minimapElementsPool",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"chyronIGFNGObject",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X54,	"used as index for controllerStruct835930",	1);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);

	id = get_struc_id("Bootflow");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"probably {796524} ||| ref",	1);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"firstEntry",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("BootflowEntry");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"name",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("FontData");

	id = get_struc_id("SoundEffectSystem");

	id = get_struc_id("SoundIdBank");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_F",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_12",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_13",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x000400,	-1,	1);

	id = get_struc_id("SoundIdBanks");
	mid = add_struc_member(id,"bank0",	0,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank1",	0X1B,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank2",	0X36,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank3",	0X51,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank4",	0X6C,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	set_member_cmt(id,	0X6C,	"most of these are 0x2",	1);
	mid = add_struc_member(id,"bank5",	0X87,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank6",	0XA2,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank7",	0XBD,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank8",	0XD8,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank9",	0XF3,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank10",	0X10E,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank11",	0X129,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank12",	0X144,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank13",	0X15F,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank14",	0X17A,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank15",	0X195,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank16",	0X1B0,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank17",	0X1CB,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank18",	0X1E6,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank19",	0X201,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank20",	0X21C,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank21",	0X237,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank22",	0X252,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank23",	0X26D,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank24",	0X288,	0x60000400,	get_struc_id("SoundIdBank"),	27);
	mid = add_struc_member(id,"bank25",	0X2A3,	0x60000400,	get_struc_id("SoundIdBank"),	27);

	id = get_struc_id("Car");
	mid = add_struc_member(id,"name0",	0,	0x000400,	-1,	32);
	set_member_cmt(id,	0,	"like \"240SX\"",	1);
	mid = add_struc_member(id,"name1",	0X20,	0x000400,	-1,	32);
	set_member_cmt(id,	0X20,	"like \"240SX\"",	1);
	mid = add_struc_member(id,"geometrybinfilename",	0X40,	0x000400,	-1,	32);
	set_member_cmt(id,	0X40,	"like \"CARS\\240SX\\GEOMETRY.BIN\"",	1);
	mid = add_struc_member(id,"geometrylzcfilename",	0X60,	0x000400,	-1,	32);
	set_member_cmt(id,	0X60,	"like \"CARS\\240SX\\GEOMETRY.LZC\"\nunknown size, may be larger",	1);
	mid = add_struc_member(id,"manufacturerName",	0XC0,	0x000400,	-1,	16);
	set_member_cmt(id,	0XC0,	"like \"NISSAN\"\nunknown length, but max 16?",	1);
	mid = add_struc_member(id,"carNamehash",	0XD0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XD0,	"cs hash of {struct Car+0} ||| ref",	1);
	mid = add_struc_member(id,"maybeFlags",	0XDA,	0x000400,	-1,	1);
	set_member_cmt(id,	0XDA,	"car will only be available if {value & 2} ||| code",	1);
	mid = add_struc_member(id,"carIndex",	0X840,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X840,	"index of this struct in {8A1CCC} ||| ref",	0);
	mid = add_struc_member(id,"carType",	0X844,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X844,	"0 = customizable, 2 = traffic/ambu/firetruck/...",	1);
	return id;
}

static Structures_3(id) {
        auto mid;

	mid = add_struc_member(id,"field_84C",	0X84C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X84C,	"player1 something",	0);
	mid = add_struc_member(id,"field_850",	0X850,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X850,	"player2 something",	0);
	mid = add_struc_member(id,"field_88A",	0X88A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_88C",	0X88C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X88C,	"has something to do with DUMMY_SKIN%d",	1);

	id = get_struc_id("CarPreset");
	mid = add_struc_member(id,"link",	0,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0,	"sentinel node is {8A31E4} ||| ref",	1);
	mid = add_struc_member(id,"modelName",	0X8,	0x000400,	-1,	32);
	set_member_cmt(id,	0X8,	"like {struct Car.0} ||| ref",	1);
	mid = add_struc_member(id,"name",	0X28,	0x000400,	-1,	32);
	set_member_cmt(id,	0X28,	"DDAY_PLAYER_CAR, DEMO_AI_300GT_BLUE, sponsor cars, ...",	0);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	680);
	mid = add_struc_member(id,"field_2F4",	0X2F4,	0x000400,	-1,	68);

	id = get_struc_id("s484");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("s485");
	mid = add_struc_member(id,"index",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hash",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"hash of part name related to name field, f.e. name is \"Side Mirror Left\" and hash is of LEFT_SIDE_MIRROR",	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"always zero",	1);
	mid = add_struc_member(id,"floatField_C",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_10",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_14",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"0/1",	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("InventoryCar$vtable");
	mid = add_struc_member(id,"dtor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"procGetCarIndex",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4,	"index in {8A1CCC}. stock: {503A30} sponsor: {503460} else: {503AE0} ||| ref,ref,ref,ref",	1);
	mid = add_struc_member(id,"procGetCarNameHash",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8,	"stock: {503A60} sponsor: {503490} else: {503B00} ||| ref,ref,ref",	1);
	mid = add_struc_member(id,"procApplyTuningToInstance",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"stock: {503A80} sponsor: {5039D0} else: {516CA0} ||| ref,ref,ref\nlast arg is only used for TunedCar instances",	1);

	id = get_struc_id("s54F980");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"just a dtor",	1);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4,	"links {struct bPNodeSlotPoolEntry} ||| ref",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("CarCollection9BD8");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("TraxEntry");
	mid = add_struc_member(id,"title",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"artist",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"album",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"playWhen",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XC,	"\"FE\" (menus), \"IG\" (race), \"AL\" (all)",	1);

	id = get_struc_id("SomethingUI");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0X4,	"elements are {struct SomethingUIImpl} ||| ref",	0);

	id = get_struc_id("InventoryCar");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"slotHash",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"STOCK_PEUGEOT when stock,\n0 when unused tuned, TUNED_CAR_%d when used tuned,\nCAREER_SLOT_%d when career,\nONLINE_CAREER_CIRCUIT when online/ranked (DRAG, DRIFT, SPRINT, STREET_CROSS, URL),\nSPONSOR_SNOOP_DOGG when sponsor\nsometimes this is also just hash of the car name? I wanna cry",	0);
	mid = add_struc_member(id,"floatField_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"sponsorcar: 1 after hash is assigned, career: inited to 1 | slotHasCar or something?, tunedcar: 1 after car is assigned?",	1);
	mid = add_struc_member(id,"flags",	0X14,	0x28800400,	get_enum("INVENTORY_CAR_FLAGS"),	4);

	id = get_struc_id("TunedCar18");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"carNameHash",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"cs hash of {struct Car.0} ||| ref",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	680);
	mid = add_struc_member(id,"field_2B4",	0X2B4,	0x60000400,	get_struc_id("MenuCarInstance_10_2E0"),	148);
	set_member_cmt(id,	0X2B4,	"copied from {struct MenuCarInstance} at {503950} ||| ref,ref",	0);
	mid = add_struc_member(id,"field_348",	0X348,	0x60000400,	get_struc_id("TunedCar360"),	205);
	mid = add_struc_member(id,"__end",	0X417,	0x000400,	-1,	1);
	set_member_cmt(id,	0X417,	"probably just padding",	0);

	id = get_struc_id("TunedCar");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("InventoryCar"),	24);
	mid = add_struc_member(id,"field_18",	0X18,	0x60000400,	get_struc_id("TunedCar18"),	1048);
	mid = add_struc_member(id,"field_430",	0X430,	0x20000400,	-1,	4);

	id = get_struc_id("OnlineCareerCar");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("TunedCar"),	1076);

	id = get_struc_id("OnlineCar");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("OnlineCareerCar"),	1076);
	mid = add_struc_member(id,"onlineCarType",	0X434,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X434,	"0 circuit, 1 sprint, 2 drag, 3 drift, 4 url, 5-9 ?, 10 street cross",	1);

	id = get_struc_id("StockCar");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("InventoryCar"),	24);
	mid = add_struc_member(id,"indexInCarData",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"index in {8A1CCC} ||| ref",	1);

	id = get_struc_id("SponsorCar");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("InventoryCar"),	24);
	mid = add_struc_member(id,"carPresetHash",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"set to hash of SNOOP_DOGG etc, matches {struct CarPreset+28} ||| ref",	1);

	id = get_struc_id("CareerCar434_15C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar434_26C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar434_27C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar434_28C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar434_294");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar434_29C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar434");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	348);
	set_member_cmt(id,	0,	"87 entries see 503E8B",	0);
	mid = add_struc_member(id,"field_15C",	0X15C,	0x60000400,	get_struc_id("CareerCar434_15C"),	16);
	mid = add_struc_member(id,"field_16C",	0X16C,	0x20000400,	-1,	256);
	set_member_cmt(id,	0X16C,	"64 entries see 503E9A",	0);
	mid = add_struc_member(id,"field_26C",	0X26C,	0x60000400,	get_struc_id("CareerCar434_26C"),	16);
	mid = add_struc_member(id,"field_27C",	0X27C,	0x60000400,	get_struc_id("CareerCar434_27C"),	16);
	mid = add_struc_member(id,"field_28C",	0X28C,	0x60000400,	get_struc_id("CareerCar434_28C"),	8);
	mid = add_struc_member(id,"field_294",	0X294,	0x60000400,	get_struc_id("CareerCar434_294"),	8);
	mid = add_struc_member(id,"field_29C",	0X29C,	0x60000400,	get_struc_id("CareerCar434_29C"),	16);
	mid = add_struc_member(id,"field_2AC",	0X2AC,	0x20000400,	-1,	272);
	set_member_cmt(id,	0X2AC,	"68 entries see 503EDF",	0);
	mid = add_struc_member(id,"moneySpentOnCar",	0X3BC,	0x20000400,	-1,	4);

	id = get_struc_id("CareerCar");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("OnlineCareerCar"),	1076);
	mid = add_struc_member(id,"field_434",	0X434,	0x60000400,	get_struc_id("CareerCar434"),	960);
	mid = add_struc_member(id,"isLocked",	0X7F4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X7F4,	"all slots except first are locked and sequentially unlocked when signing sponsors, see {532CF0} and {5284D0} ||| ref,ref",	0);
	mid = add_struc_member(id,"hasCarBought",	0X7F5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X7F7,	0x000400,	-1,	1);

	id = get_struc_id("CarCollection");
	mid = add_struc_member(id,"stockCars",	0,	0x60000400,	get_struc_id("StockCar"),	1344);
	mid = add_struc_member(id,"numStockCars",	0X540,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tunedCars",	0X544,	0x60000400,	get_struc_id("TunedCar"),	21520);
	mid = add_struc_member(id,"careerCars",	0X5954,	0x60000400,	get_struc_id("CareerCar"),	10200);
	mid = add_struc_member(id,"numCareerCarSlots",	0X812C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X812C,	"always 5",	1);
	mid = add_struc_member(id,"onlineCars",	0X8130,	0x60000400,	get_struc_id("OnlineCar"),	6480);
	mid = add_struc_member(id,"numOnlineCarSlots",	0X9A80,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X9A80,	"always 6",	1);
	mid = add_struc_member(id,"sponsorCars",	0X9A84,	0x60000400,	get_struc_id("SponsorCar"),	336);
	mid = add_struc_member(id,"numSponsorCars",	0X9BD4,	0x20000400,	-1,	4);

	id = get_struc_id("OLCarSlotData_Slot");
	mid = add_struc_member(id,"number0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"0/1/2/3/4/10",	1);
	mid = add_struc_member(id,"slotHash",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"ONLINE_CAREER_CIRCUIT/ONLINE_CAREER_SPRINT/ONLINE_CAREER_DRAG/ONLINE_CAREER_DRIFT/ONLINE_CAREER_URL/ONLINE_CAREER_STREET_CROSS",	1);
	mid = add_struc_member(id,"number8",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"4/1/3/2/0/1",	1);

	id = get_struc_id("OLCarSlotData");
	mid = add_struc_member(id,"ONLINE_CAREER_CIRCUIT",	0,	0x60000400,	get_struc_id("OLCarSlotData_Slot"),	12);
	mid = add_struc_member(id,"ONLINE_CAREER_SPRINT",	0XC,	0x60000400,	get_struc_id("OLCarSlotData_Slot"),	12);
	mid = add_struc_member(id,"ONLINE_CAREER_DRAG",	0X18,	0x60000400,	get_struc_id("OLCarSlotData_Slot"),	12);
	mid = add_struc_member(id,"ONLINE_CAREER_DRIFT",	0X24,	0x60000400,	get_struc_id("OLCarSlotData_Slot"),	12);
	mid = add_struc_member(id,"ONLINE_CAREER_URL",	0X30,	0x60000400,	get_struc_id("OLCarSlotData_Slot"),	12);
	mid = add_struc_member(id,"ONLINE_CAREER_STREET_CROSS",	0X3C,	0x60000400,	get_struc_id("OLCarSlotData_Slot"),	12);

	id = get_struc_id("CarCollectionWithPointers");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("CarCollection"),	39896);
	mid = add_struc_member(id,"ptrStockCars",	0X9BD8,	0x25500400,	0XFFFFFFFF,	192,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X9BD8,	"initialized to {&this->__parent.stockCars + i} ||| code",	0);
	mid = add_struc_member(id,"ptrTunedCars",	0X9C98,	0x25500400,	0XFFFFFFFF,	80,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X9C98,	"initialized to {&this->__parent.tunedCars + i} ||| code",	0);
	mid = add_struc_member(id,"ptrCareerCars",	0X9CE8,	0x25500400,	0XFFFFFFFF,	20,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X9CE8,	"initialized to {&this->__parent.careerCars + i} ||| code",	0);
	mid = add_struc_member(id,"ptrSponsorCars",	0X9CFC,	0x25500400,	0XFFFFFFFF,	48,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X9CFC,	"initialized to {&this->__parent.SponsorCars + i} ||| code",	0);
	mid = add_struc_member(id,"ptrOnlineCars",	0X9D2C,	0x25500400,	0XFFFFFFFF,	24,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X9D2C,	"initialized to {&this->__parent.onlineCars + i} ||| code",	0);

	id = get_struc_id("Player_24_60");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"initialized to 3",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_1C",	0X1C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"initialized to 1.O",	1);
	mid = add_struc_member(id,"floatField_20",	0X20,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X20,	"initialized to 12.5",	1);
	mid = add_struc_member(id,"floatField_24",	0X24,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X24,	"initialized to 1.0",	1);

	id = get_struc_id("Player_24");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_4",	0X4,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X4,	"initialized to .5",	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"useMetricSystem",	0X16,	0x000400,	-1,	1);
	set_member_cmt(id,	0X16,	"initialized to 1 if {7F70D0} is not 0 ||| ref",	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_1C",	0X1C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"initialized to 127.5",	1);
	mid = add_struc_member(id,"floatField_20",	0X20,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X20,	"initialized to 127.5",	1);
	mid = add_struc_member(id,"floatField_24",	0X24,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X24,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"floatField_28",	0X28,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X28,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"floatField_2C",	0X2C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X2C,	"initialized to 0.7",	1);
	mid = add_struc_member(id,"floatField_30",	0X30,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X30,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"floatField_34",	0X34,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X34,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"floatField_38",	0X38,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X38,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"floatField_3C",	0X3C,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"floatField_40",	0X40,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X40,	"initialized to 1.0",	1);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x60000400,	get_struc_id("Player_24_60"),	80);

	id = get_struc_id("Player_D4_10");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X13,	0x000400,	-1,	1);

	id = get_struc_id("Player_D4_100_1C");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0XB,	0x000400,	-1,	1);

	id = get_struc_id("Player_D4_100");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x60000400,	get_struc_id("Player_D4_100_1C"),	96);

	id = get_struc_id("Player_D4");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"number. compared against 2,3,4,8,9,C",	1);
	mid = add_struc_member(id,"currentCarSelectionSlotHash",	0X4,	0x20000400,	-1,	8);
	set_member_cmt(id,	0X4,	"last selected car in car selection, used to select the same car again when going to car selection again (if possible), and also used as the car to use when starting a race.\noften defaults to STOCK_RX8.\nArray of 2, one for each player (for some reason?? I thought there already was a Player struct instance for each player??)",	0);
	mid = add_struc_member(id,"currentCarSelectionCategory",	0XC,	0x28800400,	get_enum("INVENTORY_CAR_FLAGS"),	4);
	set_member_cmt(id,	0XC,	"last category in car selection, to initialize with the same category the next time car selection is shown again, if possible",	0);
	mid = add_struc_member(id,"field_10",	0X10,	0x60000400,	get_struc_id("Player_D4_10"),	240);
	mid = add_struc_member(id,"field_100",	0X100,	0x60000400,	get_struc_id("Player_D4_100"),	124);

	id = get_struc_id("TraxConfig");
	mid = add_struc_member(id,"traxIndex",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"index in {7ECD80} ||| ref",	0);
	mid = add_struc_member(id,"playWhen",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"0x0 = off, 0x1 = menus, 0x2 = race, 0x3 = all",	0);
	mid = add_struc_member(id,"__end",	0X7,	0x000400,	-1,	1);

	id = get_struc_id("Player");
	mid = add_struc_member(id,"name",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"p24",	0X24,	0x60000400,	get_struc_id("Player_24"),	176);
	mid = add_struc_member(id,"d4",	0XD4,	0x60000400,	get_struc_id("Player_D4"),	380);
	mid = add_struc_member(id,"field_250",	0X250,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_254",	0X254,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_258",	0X258,	0x20000400,	-1,	128);
	mid = add_struc_member(id,"traxConfig",	0X2D8,	0x60000400,	get_struc_id("TraxConfig"),	216);
	mid = add_struc_member(id,"carCollection",	0X3B0,	0x60000400,	get_struc_id("CarCollectionWithPointers"),	40260);
	mid = add_struc_member(id,"field_A0F4",	0XA0F4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0F8",	0XA0F8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A0F9",	0XA0F9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A0FA",	0XA0FA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A0FC",	0XA0FC,	0x20000400,	-1,	2640);

	id = get_struc_id("ProfileData_156B0_SubB");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("ProfileData_156B0_SubA");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);

	id = get_struc_id("ProfileData_156B0");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1B",	0X1B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x60000400,	get_struc_id("ProfileData_156B0_SubA"),	13);
	mid = add_struc_member(id,"field_29",	0X29,	0x60000400,	get_struc_id("ProfileData_156B0_SubA"),	13);
	mid = add_struc_member(id,"field_38",	0X38,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_3A",	0X3A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_41",	0X41,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_44",	0X44,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_45",	0X45,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_46",	0X46,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_47",	0X47,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_48",	0X48,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_49",	0X49,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4A",	0X4A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4B",	0X4B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x60000400,	get_struc_id("ProfileData_156B0_SubB"),	20);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x60000400,	get_struc_id("ProfileData_156B0_SubB"),	20);
	mid = add_struc_member(id,"field_80",	0X80,	0x60000400,	get_struc_id("ProfileData_156B0_SubB"),	20);
	mid = add_struc_member(id,"field_94",	0X94,	0x60000400,	get_struc_id("ProfileData_156B0_SubB"),	20);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x60000400,	get_struc_id("ProfileData_156B0_SubB"),	20);

	id = get_struc_id("ProfileData28DB0");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);

	id = get_struc_id("ProfileData28FD0");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("ProfileData29C70");
	mid = add_struc_member(id,"__end",	0X1F,	0x000400,	-1,	1);

	id = get_struc_id("CareerD24_54_30_0_10C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_10",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_2C",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);

	id = get_struc_id("CareerD24_54_30_0");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"checked against 1 and 0xB, see 528822,5288B5",	0);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	84);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	84);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_CC",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D4",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_DC",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E0",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E8",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_EC",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F0",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F4",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F8",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_FC",	0XFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_100",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_104",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x60000400,	get_struc_id("CareerD24_54_30_0_10C"),	52);
	mid = add_struc_member(id,"field_140",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	84);
	mid = add_struc_member(id,"field_198",	0X198,	0x20000400,	-1,	84);
	mid = add_struc_member(id,"field_1EC",	0X1EC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1F0",	0X1F0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1F4",	0X1F4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1F8",	0X1F8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1FC",	0X1FC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_200",	0X200,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_204",	0X204,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_208",	0X208,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20C",	0X20C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_210",	0X210,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_214",	0X214,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_218",	0X218,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_21C",	0X21C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_220",	0X220,	0x20000400,	-1,	4);

	id = get_struc_id("CareerD24_54_30");
	mid = add_struc_member(id,"field_0",	0,	0x60000400,	get_struc_id("CareerD24_54_30_0"),	3288);
	mid = add_struc_member(id,"field_CD8",	0XCD8,	0x25500400,	0XFFFFFFFF,	24,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"numUsedField0",	0XCF0,	0x20000400,	-1,	4);

	id = get_struc_id("SmsMessage");
	mid = add_struc_member(id,"data",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"read",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"deleted",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"movedToCorrectInbox",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bodyFormatLanguageLabel",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"subjectParameterLanguageLabel",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"subjectFormatLanguageLabel",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("SmsMessageList");
	mid = add_struc_member(id,"smsMessages",	0,	0x60000400,	get_struc_id("SmsMessage"),	5120);
	mid = add_struc_member(id,"numMessages",	0X1400,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numUnreadMessages",	0X1404,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1408",	0X1408,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_140C",	0X140C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_140D",	0X140D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_140E",	0X140E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_140F",	0X140F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1410",	0X1410,	0x20000400,	-1,	4);

	id = get_struc_id("Career7B00");
	mid = add_struc_member(id,"hash",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"hash of race, shop, ...",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"if this entry is a hidden shop, this must be 1 for it to be visible on the map",	0);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	set_member_cmt(id,	0X6,	"put to 1 when this entry is for a race and the race is finished (won?)",	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);

	id = get_struc_id("CareerD24_54");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"compared to 4 at 5287F3/513F1C, 3 at 513F03/54C95D",	0);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x60000400,	get_struc_id("CareerD24_54_30"),	3316);

	id = get_struc_id("CareerD24_8");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"79AA00",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("CareerD24");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x60000400,	get_struc_id("CareerD24_8"),	72);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x60000400,	get_struc_id("CareerD24_54"),	13456);
	mid = add_struc_member(id,"ptrCareerDataD24_54",	0X34E4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X34E4,	"set to first {struct CareerD24+54} at 532FEE ||| ref",	0);
	mid = add_struc_member(id,"field_34E8",	0X34E8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X34E8,	"sometimes used as index for {struct CareerD24+54} ||| ref",	1);

	id = get_struc_id("CareerStage");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	140);
	set_member_cmt(id,	0,	"most likely some hash\nextra refs: 500FBC 51441E",	1);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	16);
	set_member_cmt(id,	0X8C,	"most likely some hash",	1);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	40);
	set_member_cmt(id,	0X9C,	"most likely some hash",	1);
	mid = add_struc_member(id,"showcases",	0XC4,	0x20000400,	-1,	24);
	set_member_cmt(id,	0XC4,	"magazines/dvds done, probably hashes",	1);
	mid = add_struc_member(id,"outrunsRaced",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"totalReputation",	0XE0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"racesFinished",	0XE4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XE4,	"used to calc averageReputationPerRace, so is this # finished or # raced?",	1);
	mid = add_struc_member(id,"signedSponsor",	0XE8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_EC",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F0",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F4",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F8",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"stageFinished?",	0XFC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"settings",	0X100,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("CareerC00");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_4",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	256);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_118",	0X118,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_11C",	0X11C,	0x20000400,	-1,	4);

	id = get_struc_id("Career887C_D");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	1);

	id = get_struc_id("Career887C_A8");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("Career887C");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x60000400,	get_struc_id("Career887C_D"),	11);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_19",	0X19,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1A",	0X1A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_25",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_26",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_27",	0X27,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	120);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"stage",	0XA5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A6",	0XA6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x60000400,	get_struc_id("Career887C_A8"),	96);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_118",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_11C",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_120",	0X120,	0x20000400,	-1,	112);

	id = get_struc_id("Career7148_180");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	8);
	set_member_cmt(id,	0,	"counter (are field8/fieldC part of this too?)",	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("Career7148");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	128);
	set_member_cmt(id,	0,	"size 32 see 527D64",	0);
	mid = add_struc_member(id,"raceHash",	0X80,	0x20000400,	-1,	256);
	mid = add_struc_member(id,"field_180",	0X180,	0x60000400,	get_struc_id("Career7148_180"),	16);

	id = get_struc_id("Career_0");
	mid = add_struc_member(id,"field_0",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"careerShop8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);

	id = get_struc_id("Career713C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9",	0X9,	0x000400,	-1,	1);

	id = get_struc_id("Career4230");
	mid = add_struc_member(id,"field_10",	0X10,	0x60000400,	get_struc_id("MenuCarInstance"),	6864);
	mid = add_struc_member(id,"field_1AE0",	0X1AE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_1AE4",	0X1AE4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_1AE8",	0X1AE8,	0x20000400,	-1,	4);

	id = get_struc_id("Career4210");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_14",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_18",	0X18,	0x80000400,	-1,	4);

	id = get_struc_id("CareerBank");
	mid = add_struc_member(id,"money",	0,	0x20000400,	-1,	4);

	id = get_struc_id("vec3");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"z",	0X8,	0x80000400,	-1,	4);

	id = get_struc_id("Career");
	mid = add_struc_member(id,"field_0",	0,	0x60000400,	get_struc_id("Career_0"),	1536);
	mid = add_struc_member(id,"collectedEngageMarkers",	0X600,	0x25500400,	0XFFFFFFFF,	512,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X600,	"see {528980} ||| ref\nextra ref: 605880",	0);
	mid = add_struc_member(id,"collectedMoneyMarkers?",	0X800,	0x25500400,	0XFFFFFFFF,	1024,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X800,	"why is there 256 of these? there aren't that many money pickups in the world...\nsee {5141B0} ||| ref",	0);
	mid = add_struc_member(id,"field_C00",	0XC00,	0x60000400,	get_struc_id("CareerC00"),	288);
	set_member_cmt(id,	0XC00,	"unknown struct size",	0);
	mid = add_struc_member(id,"field_D24",	0XD24,	0x60000400,	get_struc_id("CareerD24"),	13548);
	mid = add_struc_member(id,"field_4210",	0X4210,	0x60000400,	get_struc_id("Career4210"),	28);
	mid = add_struc_member(id,"field_422C",	0X422C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_422D",	0X422D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4230",	0X4230,	0x60000400,	get_struc_id("Career4230"),	6892);
	mid = add_struc_member(id,"smsMessageList",	0X5D20,	0x60000400,	get_struc_id("SmsMessageList"),	5140);
	mid = add_struc_member(id,"bank",	0X7134,	0x60000400,	get_struc_id("CareerBank"),	4);
	mid = add_struc_member(id,"field_7138",	0X7138,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_713C",	0X713C,	0x60000400,	get_struc_id("Career713C"),	10);
	mid = add_struc_member(id,"field_7148",	0X7148,	0x60000400,	get_struc_id("Career7148"),	400);
	mid = add_struc_member(id,"stage0",	0X72D8,	0x60000400,	get_struc_id("CareerStage"),	260);
	set_member_cmt(id,	0X72D8,	"array of 8 (but split in separate fields in this struct for IDA xrefs)",	0);
	mid = add_struc_member(id,"stage1",	0X73DC,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"stage2",	0X74E0,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"stage3",	0X75E4,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"stage4",	0X76E8,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"stage5",	0X77EC,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"stage6",	0X78F0,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"stage7",	0X79F4,	0x60000400,	get_struc_id("CareerStage"),	260);
	mid = add_struc_member(id,"currentStage",	0X7AF8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X7AF8,	"0-6 (but there's a stage 7? or is it dummy?)",	1);
	mid = add_struc_member(id,"numUsed7B00",	0X7AFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7B00",	0X7B00,	0x60000400,	get_struc_id("Career7B00"),	3072);
	set_member_cmt(id,	0X7B00,	"384 elements, see 53286B",	0);
	set_member_cmt(id,	0X7B00,	"nulling entries removes discovered shops from the map",	1);
	mid = add_struc_member(id,"field_8700",	0X8700,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8704",	0X8704,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8708",	0X8708,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someCareerShop870C",	0X870C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8710",	0X8710,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8714",	0X8714,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_871C",	0X871C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8720",	0X8720,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someCareerShop8724",	0X8724,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8728",	0X8728,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_872C",	0X872C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X872C,	"counter",	1);
	mid = add_struc_member(id,"currentRace?lastRace?",	0X8730,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8730,	"set in {541160} ||| ref",	0);
	mid = add_struc_member(id,"field_8734",	0X8734,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8738",	0X8738,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"isCareerStarted",	0X873C,	0x000400,	-1,	1);
	set_member_cmt(id,	0X873C,	"Fun fact: when creating a new profile,\nthis value is set to 0 when the textbox to enter a name appears.\nWhen canceling at that point, it's set back to 1\n(if the loaded profile already had career started).",	0);
	mid = add_struc_member(id,"field_873D",	0X873D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_873E",	0X873E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_873F",	0X873F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"activeCarSlotHash",	0X8740,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8740,	"eg: \"CAREER_0\"  (<- shouldn't this be CAREER_SLOT_0?)",	0);
	mid = add_struc_member(id,"field_8744",	0X8744,	0x000400,	-1,	1);
	mid = add_struc_member(id,"carPosition",	0X8750,	0x60000400,	get_struc_id("vec3"),	12);
	set_member_cmt(id,	0X8750,	"car position is stored here at some points",	0);
	mid = add_struc_member(id,"field_875C",	0X875C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"carAngle",	0X8760,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X8760,	"same as {struct Career+8750} ||| ref",	0);
	mid = add_struc_member(id,"floatField_8764",	0X8764,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_8768",	0X8768,	0x20000400,	-1,	256);
	set_member_cmt(id,	0X8768,	"size 64 see 532A1E",	0);
	mid = add_struc_member(id,"field_8868",	0X8868,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8869",	0X8869,	0x000400,	-1,	16);
	set_member_cmt(id,	0X8869,	"all inited to 1",	1);
	mid = add_struc_member(id,"field_8879",	0X8879,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_887C",	0X887C,	0x60000400,	get_struc_id("Career887C"),	400);

	id = get_struc_id("ProfileData");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"player1",	0X10,	0x60000400,	get_struc_id("Player"),	43852);
	mid = add_struc_member(id,"player2",	0XAB5C,	0x60000400,	get_struc_id("Player"),	43852);
	mid = add_struc_member(id,"menuState",	0X156A8,	0x28800400,	get_enum("MENU_STATE"),	4);
	mid = add_struc_member(id,"field_156B0",	0X156B0,	0x60000400,	get_struc_id("ProfileData_156B0"),	188);
	mid = add_struc_member(id,"field_15780",	0X15780,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15784",	0X15784,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15788",	0X15788,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1578C",	0X1578C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15790",	0X15790,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15794",	0X15794,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15894",	0X15894,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15994",	0X15994,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_15998",	0X15998,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1599C",	0X1599C,	0x60000400,	get_struc_id("CareerD24_54_30"),	3316);
	mid = add_struc_member(id,"field_16690",	0X16690,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_166A1",	0X166A1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_166B2",	0X166B2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_166C3",	0X166C3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_166F6",	0X166F6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1675C",	0X1675C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1675D",	0X1675D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16760",	0X16760,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_16764",	0X16764,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_16768",	0X16768,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1676C",	0X1676C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16770",	0X16770,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"memForWritingSaveData",	0X16778,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"carCollection",	0X1677C,	0x60000400,	get_struc_id("CarCollection"),	39896);
	mid = add_struc_member(id,"currentPlayerIndex?",	0X20358,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20358,	"0 or 1",	1);
	mid = add_struc_member(id,"field_2035C",	0X2035C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2036C",	0X2036C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"career",	0X20370,	0x60000400,	get_struc_id("Career"),	35340);
	mid = add_struc_member(id,"floatField_28D8C",	0X28D8C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_28D90",	0X28D90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28D98",	0X28D98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"list_28DA0",	0X28DA0,	0x60000400,	get_struc_id("List"),	16);
	mid = add_struc_member(id,"field_28DB0",	0X28DB0,	0x60000400,	get_struc_id("ProfileData28DB0"),	32);
	mid = add_struc_member(id,"list_28DD0",	0X28DD0,	0x60000400,	get_struc_id("List"),	16);
	mid = add_struc_member(id,"somethingUI",	0X28DE0,	0x60000400,	get_struc_id("SomethingUI"),	12);
	mid = add_struc_member(id,"field_28DEC",	0X28DEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28DF4",	0X28DF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28DF8",	0X28DF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28E00",	0X28E00,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28FD0",	0X28FD0,	0x60000400,	get_struc_id("ProfileData28FD0"),	2048);
	mid = add_struc_member(id,"field_297D0",	0X297D0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"olCarSlotData",	0X297DC,	0x60000400,	get_struc_id("OLCarSlotData"),	72);
	mid = add_struc_member(id,"binSection80034A10loaded",	0X29824,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X29824,	"Ensures this section only gets loaded once",	0);
	mid = add_struc_member(id,"field_29828",	0X29828,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2982C",	0X2982C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29830",	0X29830,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29834",	0X29834,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29838",	0X29838,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2983C",	0X2983C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29840",	0X29840,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"buffer_29848",	0X29848,	0x000400,	-1,	1024);
	set_member_cmt(id,	0X29848,	"dunno how big this is, assuming 1024 for now",	1);
	mid = add_struc_member(id,"field_29C48",	0X29C48,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_29C49",	0X29C49,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_29C4A",	0X29C4A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_29C50",	0X29C50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29C54",	0X29C54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"styleMomentSlotPool",	0X29C58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_29C5C",	0X29C5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29C60",	0X29C60,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"floatField_29C68",	0X29C68,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_29C70",	0X29C70,	0x60000400,	get_struc_id("ProfileData29C70"),	192);
	mid = add_struc_member(id,"field_29D30",	0X29D30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29D34",	0X29D34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29D38",	0X29D38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29D40",	0X29D40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29D50",	0X29D50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29D58",	0X29D58,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"field_29DB8",	0X29DB8,	0x000400,	-1,	1);
	set_member_cmt(id,	0X29DB8,	"array unknown size",	0);
	mid = add_struc_member(id,"field_29DB9",	0X29DB9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_29DBC",	0X29DBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29DC0",	0X29DC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29DC4",	0X29DC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29DCC",	0X29DCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_29DD0",	0X29DD0,	0x000400,	-1,	1);
	set_member_cmt(id,	0X29DD0,	"array unknown size",	0);
	mid = add_struc_member(id,"__end",	0X29DD7,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A11_38");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"hash4",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("Bin34A11_18");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);

	id = get_struc_id("CareerRace");
	mid = add_struc_member(id,"postRaceMovieStrOffs",	0X4,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X4,	"if not 0, this if offset in {838428} that will point to a movie name. ||| ref\nvalues seen: INDUSTEAST, SUBURBAN, SCENE08, SCENE12,  INDUSTWEST",	0);
	mid = add_struc_member(id,"hash",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"some hash that identifies this race\nthis is at some point compared to field8 of sms data SMS_END_OF_GAME_MESSAGE",	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"raceType",	0XF,	0x8800400,	get_enum("RACE_TYPE"),	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"hash",	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x60000400,	get_struc_id("Bin34A11_18"),	16);
	set_member_cmt(id,	0X18,	"this is an array; but what size? guessing 4 for now",	1);
	mid = add_struc_member(id,"markerHash",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"{struct Marker+30} ||| ref",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bankToWinFromRace",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"see 5414D7, -1 means no money? see 500A8F",	0);
	mid = add_struc_member(id,"field_34",	0X34,	0x000400,	-1,	1);
	set_member_cmt(id,	0X34,	"see {532E50} ||| ref\n{struct CareerSponsor+2} will be added to race bank reward if this is 1 ||| ref\nbut this value is also compared to 2 and 3",	0);
	mid = add_struc_member(id,"numField38",	0X35,	0x000400,	-1,	1);
	mid = add_struc_member(id,"stageIndex",	0X37,	0x000400,	-1,	1);
	set_member_cmt(id,	0X37,	"index for {struct Career+72D8} ||| ref",	1);
	mid = add_struc_member(id,"field_38",	0X38,	0x60000400,	get_struc_id("Bin34A11_38"),	64);
	set_member_cmt(id,	0X38,	"how big is this array? 8 is a guess",	1);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"numField18",	0X7E,	0x000400,	-1,	1);
	set_member_cmt(id,	0X7E,	"entries in field_18",	1);
	mid = add_struc_member(id,"field_7F",	0X7F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X87,	0x000400,	-1,	1);

	id = get_struc_id("BinSection34A11");
	mid = add_struc_member(id,"field_0",	0,	0x60000400,	get_struc_id("CareerRace"),	30464);
	set_member_cmt(id,	0,	"since the section in my file is size 7700, I'm assuming this array has 224 entries",	0);

	id = get_struc_id("CareerStatsHiddenShopsDiscovered");
	mid = add_struc_member(id,"numDiscovered",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"numShops",	0X2,	0x10000400,	-1,	2);

	id = get_struc_id("CareerStatsDvdCover");
	mid = add_struc_member(id,"requiredStarRating",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"didGetCover",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X7,	0x000400,	-1,	1);

	id = get_struc_id("CareerStatsRegionDvdCovers");
	mid = add_struc_member(id,"cover",	0,	0x60000400,	get_struc_id("CareerStatsDvdCover"),	32);
	mid = add_struc_member(id,"numCovers",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X27,	0x000400,	-1,	1);

	id = get_struc_id("CareerStats");
	mid = add_struc_member(id,"money",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"racesEntered",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"overallWins",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"winPercent",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"[0-1]",	1);
	mid = add_struc_member(id,"circuitWins",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sprintWins",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dragWins",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"driftWins",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"streetxWins",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"urlWins",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"magazinesWon",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"magazinesToWin",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sponsorsSigned",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hiddenShopsDiscovered",	0X34,	0x60000400,	get_struc_id("CareerStatsHiddenShopsDiscovered"),	32);
	mid = add_struc_member(id,"partsUnlocked",	0X54,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X54,	"[0-1]",	1);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gameCompletionStatus",	0X68,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X68,	"[0-1]",	0);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionWorldEventWins",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionWorldEventWinsMax",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionSponsorEventWins",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionSponsorEventWinsMax",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionURLEventWins",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionURLEventWinsMax",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dvdCoversWon",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dvdCoversToWin",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionDVDCovers",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionDVDCoversMax",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regionCompletion",	0X98,	0x80000400,	-1,	4);
	set_member_cmt(id,	0X98,	"[0-1]",	0);
	mid = add_struc_member(id,"regionDvdCovers",	0X9C,	0x60000400,	get_struc_id("CareerStatsRegionDvdCovers"),	320);
	mid = add_struc_member(id,"stageTotalReputation",	0X1DC,	0x80000400,	-1,	32);
	mid = add_struc_member(id,"stageAverageReputationPerRaceForStage",	0X1FC,	0x80000400,	-1,	32);

	id = get_struc_id("Career887C_2A");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0XB,	0x000400,	-1,	1);

	id = get_struc_id("MarkerQueryResult");
	mid = add_struc_member(id,"marker",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"foundRace",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"foundShop",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"found34A16",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"found34A1B",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("CareerSponsor");
	mid = add_struc_member(id,"sponsorNameStrpoolOffset",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"offset in string table {838428}, which will point to something like {STREETGLOW}, which is then used to get name and info like {SPONSOR_%S} {SPONSOR_INFO_%S} ||| ref,code,code,code",	0);
	mid = add_struc_member(id,"bankPerRaceWon",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"signingBonus",	0XC,	0x10000400,	-1,	2);
	set_member_cmt(id,	0XC,	"money amount",	1);
	mid = add_struc_member(id,"requiredAverageReputation",	0XE,	0x10000400,	-1,	2);
	set_member_cmt(id,	0XE,	"this sponsor will only be available when player's average reputation per race in the previous stage was equal or higher than this",	0);

	id = get_struc_id("CarUnlockEntry");
	mid = add_struc_member(id,"carNameHash",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unlockingRaceIfGameRegionIsUS",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"to be matched with {struct CareerRace.8} when game region is US ||| ref",	1);
	mid = add_struc_member(id,"unlockingRaceIfGameRegionIsNotUs",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"to be matched with {struct CareerRace.8} when game region is NOT US ||| ref",	1);

	id = get_struc_id("Bin34A1E");
	mid = add_struc_member(id,"__end",	0XB,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A1C");
	mid = add_struc_member(id,"__end",	0X27,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A1A");
	mid = add_struc_member(id,"__end",	0X17,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A1B");
	mid = add_struc_member(id,"careerStringpoolOffset",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	"this value is an offset in {838428} ||| ref\n\nexample values:\nTRIGGER_START_STAGE_2_SHOW_1\nTRIGGER_START_STAGE_2_SHOW_2\nEVENT_LOCATOR_01\nTRIGGER_START_STAGE_3_PERF_1\nTRIGGER_START_STAGE_3_VISUAL_2",	0);
	mid = add_struc_member(id,"__end",	0X17,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A16");
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"markerHash",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X3F,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A14");
	mid = add_struc_member(id,"__end",	0X43,	0x000400,	-1,	1);

	id = get_struc_id("CareerShop");
	mid = add_struc_member(id,"hash",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"markerHash",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isHiddenShop",	0X51,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X74,	"some sort of condition variable for this shop to be visible on the map (if hidden shop); sometimes a hash (race hash?), sometimes a number. see 512870",	1);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"stageIndex",	0X9D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"__end",	0X9F,	0x000400,	-1,	1);

	id = get_struc_id("Bin34A15_C");
	mid = add_struc_member(id,"index",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"index because {837B90}[index] = this; ||| ref",	1);
	mid = add_struc_member(id,"moreIndices40",	0X40,	0x20000400,	-1,	20);
	set_member_cmt(id,	0X40,	"also points to an index for this same kind of struct",	0);
	mid = add_struc_member(id,"moreIndices50",	0X54,	0x20000400,	-1,	8);
	set_member_cmt(id,	0X54,	"also points to an index for this same kind of struct",	0);

	id = get_struc_id("Bin34A15");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numEntriesInFieldC",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x60000400,	get_struc_id("Bin34A15_C"),	276);
	mid = add_struc_member(id,"__end",	0X17B,	0x000400,	-1,	1);

	id = get_struc_id("CareerSponsorPtrOrHash");
	mid = add_struc_member(id,"sponsor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"sponsorNameHash",	0,	0x20000400,	-1,	4);

	id = get_struc_id("CareerStageSettings");
	mid = add_struc_member(id,"stageIndex",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"numSponsors",	0X1,	0x000400,	-1,	1);
	set_member_cmt(id,	0X1,	"max 5, because {struct CareerStageSettings+8}/{struct CareerStageSettings+1C} is of size 5 ||| ref,ref",	0);
	mid = add_struc_member(id,"outrunStakes",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	"money to win or lose for outruns",	1);
	mid = add_struc_member(id,"showcaseRewardMultiplier",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sponsors",	0X8,	0x60000400,	get_struc_id("CareerSponsorPtrOrHash"),	20);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x10000400,	-1,	10);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"hash, sms hash? see usage at 524395",	1);
	mid = add_struc_member(id,"field_30",	0X30,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_31",	0X31,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_32",	0X32,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_33",	0X33,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_37",	0X37,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x000400,	-1,	1);
	set_member_cmt(id,	0X40,	"outrun related, at some point it's compared with amount of outruns raced",	1);
	mid = add_struc_member(id,"field_41",	0X41,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_42",	0X42,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X4F,	0x000400,	-1,	1);

	id = get_struc_id("Marker");
	mid = add_struc_member(id,"type",	0,	0x28800400,	get_enum("MARKER_TYPE"),	4);
	mid = add_struc_member(id,"floatField_4",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_8",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hash",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"for type neighbourhood: hash of name\nfor type engage tip: hash of sms name\nfor money: hash of sound effect to play!?",	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"radius",	0X40,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X40,	"usually 4-14",	1);
	mid = add_struc_member(id,"markerStructSize",	0X42,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X42,	"seems like there are marker subtypes with different sizes",	1);
	mid = add_struc_member(id,"pos_x",	0X44,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pos_y",	0X48,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x000400,	-1,	1);

	id = get_struc_id("C4");
	mid = add_struc_member(id,"carPosition",	0X60,	0x60000400,	get_struc_id("vec3"),	12);
	set_member_cmt(id,	0X60,	"x/y writable, z doesn't seem to be writable (or needs special handling)",	1);
	mid = add_struc_member(id,"carAngle?",	0X40C,	0x10000400,	-1,	2);

	id = get_struc_id("C2D4");
	mid = add_struc_member(id,"vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"just a dtor",	0);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	160,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8,	"maybe stdcall?",	0);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_AD",	0XAD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_AE",	0XAE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B4",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_CC",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_354",	0X354,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end?",	0X36F,	0x000400,	-1,	1);
	set_member_cmt(id,	0X36F,	"maybe? ctor just empties 220*4 bytes",	0);

	id = get_struc_id("C64C");
	mid = add_struc_member(id,"link",	0,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2BC",	0X2BC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2E0",	0X2E0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2E4",	0X2E4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2E8",	0X2E8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2EC",	0X2EC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2F0",	0X2F0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_304",	0X304,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_308",	0X308,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30C",	0X30C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_310",	0X310,	0x20000400,	-1,	4);

	id = get_struc_id("C20");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_4",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"playerName",	0X10,	0x000400,	-1,	16);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);

	id = get_struc_id("C");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"playerInstance",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4,	"due to lack of better name",	0);
	mid = add_struc_member(id,"field_8",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"otherInstance",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X14,	"there may be max 2 instances of this struct, and this field links to the other instance",	0);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x60000400,	get_struc_id("C20"),	48);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x000400,	-1,	8);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	32);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_98",	0X98,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0XA0,	"allocated memory, see ctor for details",	0);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_A8",	0XA8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_B4",	0XB4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_BC",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	64);
	mid = add_struc_member(id,"field_100",	0X100,	0x10000400,	-1,	4);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_130",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_134",	0X134,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_140",	0X140,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_14C",	0X14C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"floatField_150",	0X150,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_154",	0X154,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_158",	0X158,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_160",	0X160,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_164",	0X164,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_166",	0X166,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_168",	0X168,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"floatField_16C",	0X16C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_170",	0X170,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_174",	0X174,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_178",	0X178,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_17C",	0X17C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_180",	0X180,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X180,	"allocated memory, see ctor for details",	0);
	mid = add_struc_member(id,"field_184",	0X184,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X184,	"allocated memory, see ctor for details",	0);
	mid = add_struc_member(id,"field_190",	0X190,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1D0",	0X1D0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_1D8",	0X1D8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_210",	0X210,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_214",	0X214,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_218",	0X218,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_21C",	0X21C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_220",	0X220,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_224",	0X224,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_225",	0X225,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_228",	0X228,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_22C",	0X22C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_230",	0X230,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_234",	0X234,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_238",	0X238,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_23C",	0X23C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_240",	0X240,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_244",	0X244,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_248",	0X248,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_249",	0X249,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_24A",	0X24A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_24C",	0X24C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_250",	0X250,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_258",	0X258,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_25C",	0X25C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_260",	0X260,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_264",	0X264,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_268",	0X268,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X268,	"allocated memory, see ctor for details",	0);
	mid = add_struc_member(id,"field_270",	0X270,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_274",	0X274,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_278",	0X278,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_280",	0X280,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_284",	0X284,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_288",	0X288,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_290",	0X290,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_294",	0X294,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_298",	0X298,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_2A0",	0X2A0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2B0",	0X2B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2B4",	0X2B4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2B8",	0X2B8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C0",	0X2C0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C4",	0X2C4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C8",	0X2C8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2D0",	0X2D0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X2D0,	"allocated memory, see ctor for details",	0);
	mid = add_struc_member(id,"field_2D4",	0X2D4,	0x60000400,	get_struc_id("C2D4"),	880);
	mid = add_struc_member(id,"field_644",	0X644,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_648",	0X648,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64C",	0X64C,	0x60000400,	get_struc_id("C64C"),	788);
	mid = add_struc_member(id,"field_998",	0X998,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_99C",	0X99C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9A0",	0X9A0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9A1",	0X9A1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9A4",	0X9A4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X9A4,	"allocated memory, see ctor for details",	1);
	mid = add_struc_member(id,"field_9A8",	0X9A8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_9AC",	0X9AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9B0",	0X9B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9B4",	0X9B4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9B8",	0X9B8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__end",	0X9BF,	0x000400,	-1,	1);

	id = get_struc_id("D");
	mid = add_struc_member(id,"e",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"floatField_18",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"link44",	0X44,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"__end",	0X6F,	0x000400,	-1,	1);

	id = get_struc_id("E");
	mid = add_struc_member(id,"__end",	0X11F,	0x000400,	-1,	1);

	id = get_struc_id("struct890020");
	mid = add_struc_member(id,"marker",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"floatField4",	0X4,	0x80000400,	-1,	4);

	id = get_struc_id("PathsData");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_14",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatField_18",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_22",	0X22,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numMarkers",	0X434,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X434,	"number of entries in {struct PathsData+43C}, note that each entry has a dynamic size of {struct Marker+42} ||| ref,ref",	1);
	mid = add_struc_member(id,"allMarkersSize",	0X438,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X438,	"{struct PathsData+43C} is loaded from binsection {3414A} data, this field is the \"size\" field of that binsection ||| ref,code",	0);
	set_member_cmt(id,	0X438,	"size of {struct PathsData+43C} ||| ref",	1);
	mid = add_struc_member(id,"allMarkers",	0X43C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"markers",	0X440,	0x25500400,	0XFFFFFFFF,	88,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X440,	"note that, while this array is of size 22,\nentry 21 does not point to an array of markers,\nrather it points to where the end of the array on entry 20 is",	0);
	set_member_cmt(id,	0X440,	"array of ptrs to markers with the arrayindex as marker type (ie {{struct PathsData+440}[3]} points to an array of markers with type 3 ||| code,ref",	1);
	mid = add_struc_member(id,"field_498",	0X498,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_49C",	0X49C,	0x20000400,	-1,	4);

	id = get_struc_id("NeighbourhoodName");
	mid = add_struc_member(id,"ptrName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hash",	0X4,	0x20000400,	-1,	4);

	id = get_struc_id("JoyKeyData");
	mid = add_struc_member(id,"keyId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("SomeKeyData");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"joyId",	0X8,	0x28800400,	get_enum("JOYID"),	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);

	id = get_struc_id("JoyHandlerData");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"id",	0X4,	0x20000400,	-1,	4);
	return id;
}

static Structures_4(id) {
        auto mid;

	mid = add_struc_member(id,"name",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);

	id = get_struc_id("JoystickEventNode");
	mid = add_struc_member(id,"link",	0,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0,	"offset 0",	1);
	mid = add_struc_member(id,"joyId",	0X8,	0x28800400,	get_enum("JOYID"),	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"proc",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"minimum 4 args, arg0/arg4(joyId)/arg8/argC",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);

	id = get_struc_id("Entry8655A0");
	mid = add_struc_member(id,"joystickEventNodeLink",	0,	0x60000400,	get_struc_id("ObjectLink"),	8);
	set_member_cmt(id,	0,	"element {struct JoystickEventNode}, offset 0 ||| ref",	1);
	mid = add_struc_member(id,"field_1B8",	0X1B8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C4",	0X1C4,	0x20000400,	-1,	4);

	id = get_struc_id("Struct8383A4");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_134",	0X134,	0x20000400,	-1,	4);

	id = get_struc_id("Network86A388");
	mid = add_struc_member(id,"vtable",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"linkField_34",	0X34,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"linkField_3C",	0X3C,	0x60000400,	get_struc_id("ObjectLink"),	8);
	mid = add_struc_member(id,"network44",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_48",	0X48,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_49",	0X49,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4A",	0X4A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4B",	0X4B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"serverName",	0X50,	0x000400,	-1,	64);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_98",	0X98,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X98,	"on allocation, same as ptrfield 8B7CAC",	1);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A1",	0XA1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A2",	0XA2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A3",	0XA3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B4",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_BC",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);

	id = get_struc_id("Network1498");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"proc3",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);

	id = get_struc_id("Network1160");
	mid = add_struc_member(id,"ptrField_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("Network44");
	mid = add_struc_member(id,"network0",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"icmpSocketWrapper",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"big number (40000, 60000)",	1);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x000400,	-1,	256);
	set_member_cmt(id,	0X40,	"some string, set to KEY=VALUE thing on init",	1);
	mid = add_struc_member(id,"keyValueString61757464",	0X140,	0x000400,	-1,	256);
	set_member_cmt(id,	0X140,	"actual length unknown, a KEY=VALUE string",	1);
	mid = add_struc_member(id,"keyValueString70657264",	0X340,	0x000400,	-1,	256);
	set_member_cmt(id,	0X340,	"actual length unknown",	1);
	mid = add_struc_member(id,"keyValueString636F6E66",	0X540,	0x000400,	-1,	256);
	set_member_cmt(id,	0X540,	"actual length unknown, KEY=VALUE string, this one should have TOSURL,GAMES_PER_UPDATE,NEWSURL,RESPONSE_GRAPH",	1);
	mid = add_struc_member(id,"keyValueString75736572_61636374",	0XD44,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XD44,	"actual length unknown",	1);
	mid = add_struc_member(id,"keyValueString73656C66",	0XD58,	0x000400,	-1,	8);
	set_member_cmt(id,	0XD58,	"994 bytes zero inited from here",	1);
	mid = add_struc_member(id,"keyValueString70657273",	0XD60,	0x000400,	-1,	1);
	set_member_cmt(id,	0XD60,	"actual length unknown",	1);
	mid = add_struc_member(id,"keyValueString726F6F6D",	0X1110,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1110,	"actual length unknown",	1);
	mid = add_struc_member(id,"network1160",	0X1160,	0x60000400,	get_struc_id("Network1160"),	720);
	mid = add_struc_member(id,"field_1434",	0X1434,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1438",	0X1438,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"network1498",	0X1498,	0x60000400,	get_struc_id("Network1498"),	384);
	mid = add_struc_member(id,"network1618",	0X1618,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_161C",	0X161C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1620",	0X1620,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1620,	"zero at alloc?",	1);
	mid = add_struc_member(id,"procSomething",	0X1624,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1624,	"int?,char*",	1);
	mid = add_struc_member(id,"field_1628",	0X1628,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_162C",	0X162C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1634",	0X1634,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"keyValueString73657276",	0X1928,	0x000400,	-1,	8);
	set_member_cmt(id,	0X1928,	"actual length unknown",	1);
	mid = add_struc_member(id,"field_1948",	0X1948,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1949",	0X1949,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1984",	0X1984,	0x20000400,	-1,	4);

	id = get_struc_id("Network1618");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);

	id = get_struc_id("Network0");
	mid = add_struc_member(id,"network00",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_70",	0X70,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X70,	"alloced mem",	1);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ptrField_7C",	0X7C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X7C,	"alloced mem",	1);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_8E",	0X8E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E4",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2EC",	0X2EC,	0x20000400,	-1,	4);

	id = get_struc_id("Network00");
	mid = add_struc_member(id,"socketWrapper",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"network00_4",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"(from cheatengine) might be hostname to connect to?",	1);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10C",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someState",	0X118,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X118,	"only sends or receives when between (inclusive) 10 & 16",	1);
	mid = add_struc_member(id,"field_11C",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"network120",	0X120,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("Network00_4");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"proc",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"1 arg, its own struct?",	1);

	id = get_struc_id("Network120");
	mid = add_struc_member(id,"bytesSent",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bytesToSend",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sendDataBuffer",	0X8,	0x000400,	-1,	200);
	set_member_cmt(id,	0X8,	"how long is this",	1);
	mid = add_struc_member(id,"field_4008",	0X4008,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4008,	"maybe packet sequence number?",	1);
	mid = add_struc_member(id,"numberBytesReceived",	0X400C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numberBytesToReceive",	0X4010,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"recvDataBuffer",	0X4018,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8018",	0X8018,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_801C",	0X801C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8020",	0X8020,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8024",	0X8024,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8028",	0X8028,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_80A8",	0X80A8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X80A8,	"a number?",	1);
	mid = add_struc_member(id,"field_80AC",	0X80AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_812C",	0X812C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8130",	0X8130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_81B0",	0X81B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_81B4",	0X81B4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X81B4,	"a number",	1);
	mid = add_struc_member(id,"field_81B8",	0X81B8,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81B8,	"initialized to 48*1",	1);
	mid = add_struc_member(id,"field_81B9",	0X81B9,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81B9,	"initialized to 48*2",	1);
	mid = add_struc_member(id,"field_81BA",	0X81BA,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81BA,	"initialized to 48*3",	1);
	mid = add_struc_member(id,"field_81BB",	0X81BB,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81BB,	"initialized to 48*4",	1);
	mid = add_struc_member(id,"field_81BC",	0X81BC,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81BC,	"initialized to 48*5",	1);
	mid = add_struc_member(id,"field_81BD",	0X81BD,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81BD,	"initialized to 48*6",	1);
	mid = add_struc_member(id,"field_81BE",	0X81BE,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81BE,	"initialized to 48*7",	1);
	mid = add_struc_member(id,"field_81BF",	0X81BF,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81BF,	"initialized to 48*8",	1);
	mid = add_struc_member(id,"field_81C0",	0X81C0,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C0,	"initialized to 48*9",	1);
	mid = add_struc_member(id,"field_81C1",	0X81C1,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C1,	"initialized to 48*10",	1);
	mid = add_struc_member(id,"field_81C2",	0X81C2,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C2,	"initialized to 48*11",	1);
	mid = add_struc_member(id,"field_81C3",	0X81C3,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C3,	"initialized to 48*12",	1);
	mid = add_struc_member(id,"field_81C4",	0X81C4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C4,	"initialized to 48*13",	1);
	mid = add_struc_member(id,"field_81C5",	0X81C5,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C5,	"initialized to 48*14",	1);
	mid = add_struc_member(id,"field_81C6",	0X81C6,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C6,	"initialized to 48*15",	1);
	mid = add_struc_member(id,"field_81C7",	0X81C7,	0x000400,	-1,	1);
	set_member_cmt(id,	0X81C7,	"initialized to 48*16",	1);
	mid = add_struc_member(id,"field_81D0",	0X81D0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_81D4",	0X81D4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_85AC",	0X85AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_85B0",	0X85B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8634",	0X8634,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8638",	0X8638,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_86BC",	0X86BC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_87BC",	0X87BC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88BC",	0X88BC,	0x20000400,	-1,	4);

	id = get_struc_id("Network8B7CAC");
	mid = add_struc_member(id,"sizeInDwords",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"set to GetTickCount on allocation (system uptime)",	1);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"set to GetTickCount on allocation (system uptime)",	1);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"icmpSocketWrapperWrapper",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("Quantizer141");
	mid = add_struc_member(id,"name",	0,	0x000400,	-1,	300);
	mid = add_struc_member(id,"field_12C",	0X12C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_130",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_134",	0X134,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_138",	0X138,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"floatField_13C",	0X13C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_140",	0X140,	0x000400,	-1,	1);

	id = get_struc_id("Quantizer149");
	mid = add_struc_member(id,"__parent",	0,	0x60000400,	get_struc_id("Quantizer141"),	321);
	mid = add_struc_member(id,"field_144",	0X144,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_148",	0X148,	0x000400,	-1,	1);

	id = get_struc_id("Network89CF48");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"some state? 0-6",	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x000400,	-1,	24);
	set_member_cmt(id,	0X8,	"24 bytes nulled on init",	1);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_21",	0X21,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_22",	0X22,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_23",	0X23,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x000400,	-1,	32);
	set_member_cmt(id,	0X28,	"32 bytes nulled on init",	1);
	mid = add_struc_member(id,"field_48",	0X48,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_49",	0X49,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4A",	0X4A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4B",	0X4B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x000400,	-1,	96);
	set_member_cmt(id,	0X64,	"96 bytes nulled on init",	1);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_CC",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D4",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_DC",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E0",	0XE0,	0x000400,	-1,	24);
	set_member_cmt(id,	0XE0,	"24 bytes nulled on init",	1);
	mid = add_struc_member(id,"field_F8",	0XF8,	0x000400,	-1,	24);
	set_member_cmt(id,	0XF8,	"24 bytes nulled on init",	1);
	mid = add_struc_member(id,"field_110",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_114",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_118",	0X118,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_119",	0X119,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_11A",	0X11A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_11B",	0X11B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"carSlotIDQuantizer",	0X11C,	0x60000400,	get_struc_id("Quantizer141"),	321);
	mid = add_struc_member(id,"carTypeQuantizer",	0X260,	0x60000400,	get_struc_id("Quantizer141"),	321);
	mid = add_struc_member(id,"partIndexQuantizer",	0X3A4,	0x60000400,	get_struc_id("Quantizer141"),	321);
	mid = add_struc_member(id,"int2bitQuantizer",	0X4E8,	0x60000400,	get_struc_id("Quantizer141"),	321);
	mid = add_struc_member(id,"int4bitQuantizer",	0X62C,	0x60000400,	get_struc_id("Quantizer141"),	321);
	mid = add_struc_member(id,"floatTimeQuantizer",	0X770,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"positionQuantizerX",	0X8BC,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"positionQuantizerY",	0XA08,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"positionQuantizerZ",	0XB54,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"velocityQuantizer",	0XCA0,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"matrixQuantizer",	0XDEC,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"accelerationQuantizer",	0XF38,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"avelocityQuantizer",	0X1084,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"controlQuantizer",	0X11D0,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"rpmQuantizer",	0X131C,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"hydraulicQuantizer",	0X1468,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"nosQuantizer",	0X15B4,	0x60000400,	get_struc_id("Quantizer149"),	329);
	mid = add_struc_member(id,"gearQuantizer",	0X1700,	0x60000400,	get_struc_id("Quantizer141"),	321);

	id = get_struc_id("SocketWrapper");
	mid = add_struc_member(id,"previousSocketWrapper",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"socket_af",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"socket_type",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"socket_protocol",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_16",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"socket",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"some number, values seen: 2",	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X44,	"maybe buffer size? values seen: 5000",	1);
	mid = add_struc_member(id,"socketWrapperWrapper",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"func",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4C,	"not a __thiscall even though first arg is usually this",	1);

	id = get_struc_id("CRITICAL_SECTION");
	mid = add_struc_member(id,"DebugInfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockCount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RecursionCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OwningThread",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockSemaphore",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SpinCount",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("CriticalSectionWrapper_3");
	mid = add_struc_member(id,"lastAccessedThreadId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numActiveLocks",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isInCriticalSection",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"criticalSection",	0XC,	0x60000400,	get_struc_id("CRITICAL_SECTION"),	24);

	id = get_struc_id("SocketWrapperWrapper");
	mid = add_struc_member(id,"socketWrapper",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"criticalSectionWrapper",	0XC,	0x60000400,	get_struc_id("CriticalSectionWrapper_3"),	36);
	mid = add_struc_member(id,"ptrField30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);

	id = get_struc_id("NetworkRegionStuff");
	mid = add_struc_member(id,"regionName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"regionCode",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"someNumber",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"someSuffix",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"someCode",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);

	id = get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0");
	mid = add_struc_member(id,"s_b1",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"s_b2",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"s_b3",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"s_b4",	0X3,	0x000400,	-1,	1);

	id = get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5");
	mid = add_struc_member(id,"s_w1",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s_w2",	0X2,	0x10000400,	-1,	2);
	set_struc_align(id,1);

	id = get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9");
	mid = add_struc_member(id,"S_un_b",	0,	0x60000400,	get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0"),	4);
	mid = add_struc_member(id,"S_un_w",	0,	0x60000400,	get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5"),	4);
	mid = add_struc_member(id,"S_addr",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("in_addr");
	mid = add_struc_member(id,"S_un",	0,	0x60000400,	get_struc_id("in_addr::$C13EC994467D6E67044F092615EC7EA9"),	4);
	set_struc_align(id,2);

	id = get_struc_id("sockaddr_in");
	mid = add_struc_member(id,"sin_family",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sin_port",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sin_addr",	0X4,	0x60000400,	get_struc_id("in_addr"),	4);
	mid = add_struc_member(id,"sin_zero",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);

	id = get_struc_id("mat4x4");
	mid = add_struc_member(id,"m11",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m12",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m13",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m14",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m21",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m22",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m23",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m24",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m31",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m32",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m33",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m34",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m41",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m42",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m43",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m44",	0X3C,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("IDirect3D9");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("IDirect3D9Vtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RegisterSoftwareDevice",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAdapterCount",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAdapterIdentifier",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAdapterModeCount",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumAdapterModes",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAdapterDisplayMode",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CheckDeviceType",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CheckDeviceFormat",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CheckDeviceMultiSampleType",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CheckDepthStencilMatch",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CheckDeviceFormatConversion",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDeviceCaps",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAdapterMonitor",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateDevice",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Version",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);

	id = get_struc_id("D3DVSHADERCAPS2_0");
	mid = add_struc_member(id,"dwCaps",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iDynamicFlowControlDepth",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iNumTemps",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iStaticFlowControlDepth",	0XC,	0x20000400,	-1,	4);

	id = get_struc_id("D3DPSHADERCAPS2_0");
	mid = add_struc_member(id,"dwCaps",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iDynamicFlowControlDepth",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iNumTemps",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iStaticFlowControlDepth",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iNumInstructionSlots",	0X10,	0x20000400,	-1,	4);

	id = get_struc_id("D3DCAPS9");
	mid = add_struc_member(id,"dwDeviceType",	0,	0x20800400,	get_enum("D3DDEVTYPE"),	4);
	mid = add_struc_member(id,"uiAdapterOrdinal",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCaps",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCaps2",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCaps3",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwPresentationIntervals",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCursorCaps",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevCaps",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwPrimiriveMiscCaps",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRasterCaps",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwZCmpCaps",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwSrcBeldnCaps",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDestBlendCaps",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwAlphaCmpCaps",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwShadeCaps",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTextureCaps",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTextureFilterCaps",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwCubeTextureFilterCaps",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwVolumeTextureFilterCaps",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTextureAddressCaps",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwVolumeTextureAddressCaps",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwLineCaps",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxTextureWidth",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxTextureHeight",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVolumeExtent",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxTextureRepeat",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxTextureAspectRatio",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxAnisotropy",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fMaxVertexW",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fGuardBandLeft",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fGuardBandTop",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fGuardBandRight",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fGuardBandBottom",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fExtentsAdjust",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwStencilCaps",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFVFCaps",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTextureOpCaps",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxTextureBlendStages",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxSimultaneousTextures",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwVertexProcessingCaps",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxActiveLights",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxUserClipPlanes",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVertexBlendMartices",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVertexBlendMatrixIndex",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fMaxPointSize",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxPrimitiveCount",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVertexIndex",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxStreams",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxStreamsStride",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwVertexShaderVersion",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVertexShaderConst",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwPixelShaderVersion",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fPixelShader1xMaxValue",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDevCaps2",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiMasterAdapterOrdinal",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiAdapterOrdinalInGroup",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiNumberOfAdaptersInGroup",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDeclTypes",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwNumSimultaneousRTs",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"swStretchRectFilterCaps",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VS20Caps",	0XF0,	0x60000400,	get_struc_id("D3DVSHADERCAPS2_0"),	16);
	mid = add_struc_member(id,"PS20Caps",	0X100,	0x60000400,	get_struc_id("D3DPSHADERCAPS2_0"),	20);
	mid = add_struc_member(id,"dwVertexTextureFilterCaps",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVShaderInstructionsExecuted",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxPShaderInstructionsExecuted",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxVertexShader30InstructionSlots",	0X120,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwMaxPixelShader30InstructionSlots",	0X124,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved2",	0X128,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved3",	0X12C,	0x20000400,	-1,	4);

	id = get_struc_id("D3DPRESENT_PARAMETERS");
	mid = add_struc_member(id,"uiBackBufferWidth",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiBackBufferHeight",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BackBufferFormat",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiBackBufferCount",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MultiSampleType",	0X10,	0x20800400,	get_enum("D3DMULTISAMPLE_TYPE"),	4);
	mid = add_struc_member(id,"MultiSampleQuality",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SwapEffect",	0X18,	0x20800400,	get_enum("D3DSWAPEFFECT"),	4);
	mid = add_struc_member(id,"hDeviceWindow",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bWindowed",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bEnableAutoDepthStencil",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AutoDepthStencilFormat",	0X28,	0x20800400,	get_enum("_D3DFORMAT"),	4);
	mid = add_struc_member(id,"dwFlags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiFullScreen_RefreshRateInHz",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"windowed mode: 0, fullscreen: one of rates returned from EnumAdapterModes",	1);
	mid = add_struc_member(id,"uiPresentationInterval",	0X34,	0x20000400,	-1,	4);

	id = get_struc_id("D3DDEVICE_CREATION_PARAMETERS");
	mid = add_struc_member(id,"AdapterOrdinal",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DeviceType",	0X4,	0x28800400,	get_enum("D3DDEVTYPE"),	4);
	mid = add_struc_member(id,"hFocusWindow",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BehaviorFlags",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DDISPLAYMODE");
	mid = add_struc_member(id,"Width",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Height",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RefreshRate",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Format",	0XC,	0x28800400,	get_enum("D3DFORMAT"),	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DVIEWPORT9");
	mid = add_struc_member(id,"X",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Y",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Width",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Height",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MinZ",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"MaxZ",	0X14,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DMATRIX");
	mid = add_struc_member(id,"_11",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_12",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_13",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_14",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_21",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_22",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_23",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_24",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_31",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_32",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_33",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_34",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_41",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_42",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_43",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_44",	0X3C,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DCOLORVALUE::$79F58B462609A8478E0156545A48EE38");
	mid = add_struc_member(id,"r",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvR",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DCOLORVALUE::$1870E08CD1297AF1183F2104CF0E68BB");
	mid = add_struc_member(id,"g",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvG",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DCOLORVALUE::$89D0C02BD3EDF7E42F4E64602AB90C16");
	mid = add_struc_member(id,"b",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvB",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DCOLORVALUE::$5FBE30F4B5EDEA02F5A8FF631684CD5C");
	mid = add_struc_member(id,"a",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvA",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DCOLORVALUE");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_D3DCOLORVALUE::$79F58B462609A8478E0156545A48EE38"),	4);
	mid = add_struc_member(id,"anonymous_1",	0X4,	0x60000400,	get_struc_id("_D3DCOLORVALUE::$1870E08CD1297AF1183F2104CF0E68BB"),	4);
	mid = add_struc_member(id,"anonymous_2",	0X8,	0x60000400,	get_struc_id("_D3DCOLORVALUE::$89D0C02BD3EDF7E42F4E64602AB90C16"),	4);
	mid = add_struc_member(id,"anonymous_3",	0XC,	0x60000400,	get_struc_id("_D3DCOLORVALUE::$5FBE30F4B5EDEA02F5A8FF631684CD5C"),	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DMATERIAL9");
	mid = add_struc_member(id,"Diffuse",	0,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Ambient",	0X10,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Specular",	0X20,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Emissive",	0X30,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Power",	0X40,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DVECTOR::$681612F8DC6DDCA79CBEF9228C3A67A0");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvX",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DVECTOR::$2970DA2ECFB38188FCB670891BDDBDFA");
	mid = add_struc_member(id,"y",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvY",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("_D3DVECTOR::$3781A3F6A2280FF9BE972B852E87FD21");
	mid = add_struc_member(id,"z",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dvZ",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DVECTOR");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_D3DVECTOR::$681612F8DC6DDCA79CBEF9228C3A67A0"),	4);
	mid = add_struc_member(id,"anonymous_1",	0X4,	0x60000400,	get_struc_id("_D3DVECTOR::$2970DA2ECFB38188FCB670891BDDBDFA"),	4);
	mid = add_struc_member(id,"anonymous_2",	0X8,	0x60000400,	get_struc_id("_D3DVECTOR::$3781A3F6A2280FF9BE972B852E87FD21"),	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DLIGHT9");
	mid = add_struc_member(id,"Type",	0,	0x28800400,	get_enum("D3DLIGHTTYPE"),	4);
	mid = add_struc_member(id,"Diffuse",	0X4,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Specular",	0X14,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Ambient",	0X24,	0x60000400,	get_struc_id("D3DCOLORVALUE"),	16);
	mid = add_struc_member(id,"Position",	0X34,	0x60000400,	get_struc_id("D3DVECTOR"),	12);
	mid = add_struc_member(id,"Direction",	0X40,	0x60000400,	get_struc_id("D3DVECTOR"),	12);
	mid = add_struc_member(id,"Range",	0X4C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Falloff",	0X50,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Attenuation0",	0X54,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Attenuation1",	0X58,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Attenuation2",	0X5C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Theta",	0X60,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Phi",	0X64,	0x80000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("D3DGAMMARAMP");
	mid = add_struc_member(id,"red",	0,	0x10000400,	-1,	512);
	mid = add_struc_member(id,"green",	0X200,	0x10000400,	-1,	512);
	mid = add_struc_member(id,"blue",	0X400,	0x10000400,	-1,	512);
	set_struc_align(id,1);

	id = get_struc_id("IDirect3DDevice9Vtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TestCooperativeLevel",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetAvailableTextureMem",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EvictManagedResources",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDirect3D",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDeviceCaps",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDisplayMode",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCreationParameters",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetCursorProperties",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetCursorPosition",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ShowCursor",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateAdditionalSwapChain",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetSwapChain",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetNumberOfSwapChains",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Reset",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Present",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetBackBuffer",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetRasterStatus",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetDialogBoxMode",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetGammaRamp",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetGammaRamp",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateTexture",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateVolumeTexture",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateCubeTexture",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateVertexBuffer",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateIndexBuffer",	0X6C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateRenderTarget",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateDepthStencilSurface",	0X74,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UpdateSurface",	0X78,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UpdateTexture",	0X7C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetRenderTargetData",	0X80,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetFrontBufferData",	0X84,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StretchRect",	0X88,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ColorFill",	0X8C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateOffscreenPlainSurface",	0X90,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetRenderTarget",	0X94,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetRenderTarget",	0X98,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetDepthStencilSurface",	0X9C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDepthStencilSurface",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BeginScene",	0XA4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EndScene",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Clear",	0XAC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetTransform",	0XB0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetTransform",	0XB4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MultiplyTransform",	0XB8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetViewport",	0XBC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetViewport",	0XC0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetMaterial",	0XC4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetMaterial",	0XC8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetLight",	0XCC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetLight",	0XD0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LightEnable",	0XD4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetLightEnable",	0XD8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetClipPlane",	0XDC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetClipPlane",	0XE0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetRenderState",	0XE4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetRenderState",	0XE8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateStateBlock",	0XEC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BeginStateBlock",	0XF0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EndStateBlock",	0XF4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetClipStatus",	0XF8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetClipStatus",	0XFC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetTexture",	0X100,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetTexture",	0X104,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetTextureStageState",	0X108,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetTextureStageState",	0X10C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetSamplerState",	0X110,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetSamplerState",	0X114,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ValidateDevice",	0X118,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPaletteEntries",	0X11C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPaletteEntries",	0X120,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetCurrentTexturePalette",	0X124,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCurrentTexturePalette",	0X128,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetScissorRect",	0X12C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetScissorRect",	0X130,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetSoftwareVertexProcessing",	0X134,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetSoftwareVertexProcessing",	0X138,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetNPatchMode",	0X13C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetNPatchMode",	0X140,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawPrimitive",	0X144,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawIndexedPrimitive",	0X148,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawPrimitiveUP",	0X14C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawIndexedPrimitiveUP",	0X150,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ProcessVertices",	0X154,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateVertexDeclaration",	0X158,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetVertexDeclaration",	0X15C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVertexDeclaration",	0X160,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetFVF",	0X164,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetFVF",	0X168,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateVertexShader",	0X16C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetVertexShader",	0X170,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVertexShader",	0X174,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetVertexShaderConstantF",	0X178,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVertexShaderConstantF",	0X17C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetVertexShaderConstantI",	0X180,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVertexShaderConstantI",	0X184,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetVertexShaderConstantB",	0X188,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetVertexShaderConstantB",	0X18C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetStreamSource",	0X190,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetStreamSource",	0X194,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetStreamSourceFreq",	0X198,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetStreamSourceFreq",	0X19C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetIndices",	0X1A0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetIndices",	0X1A4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreatePixelShader",	0X1A8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPixelShader",	0X1AC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPixelShader",	0X1B0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPixelShaderConstantF",	0X1B4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPixelShaderConstantF",	0X1B8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPixelShaderConstantI",	0X1BC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPixelShaderConstantI",	0X1C0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetPixelShaderConstantB",	0X1C4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPixelShaderConstantB",	0X1C8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawRectPatch",	0X1CC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawTriPatch",	0X1D0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DeletePatch",	0X1D4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateQuery",	0X1D8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreationParameters",	0X1DC,	0x60000400,	get_struc_id("D3DDEVICE_CREATION_PARAMETERS"),	16);
	mid = add_struc_member(id,"PresentParameters",	0X1EC,	0x60000400,	get_struc_id("D3DPRESENT_PARAMETERS"),	56);
	mid = add_struc_member(id,"DisplayMode",	0X224,	0x60000400,	get_struc_id("D3DDISPLAYMODE"),	16);
	mid = add_struc_member(id,"Caps",	0X234,	0x60000400,	get_struc_id("D3DCAPS9"),	304);
	mid = add_struc_member(id,"AvailableTextureMem",	0X364,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SwapChains",	0X368,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Textures",	0X36C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VertexBuffers",	0X370,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IndexBuffers",	0X374,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VertexShaders",	0X378,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PixelShaders",	0X37C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Viewport",	0X380,	0x60000400,	get_struc_id("D3DVIEWPORT9"),	24);
	mid = add_struc_member(id,"ProjectionMatrix",	0X398,	0x60000400,	get_struc_id("D3DMATRIX"),	64);
	mid = add_struc_member(id,"ViewMatrix",	0X3D8,	0x60000400,	get_struc_id("D3DMATRIX"),	64);
	mid = add_struc_member(id,"WorldMatrix",	0X418,	0x60000400,	get_struc_id("D3DMATRIX"),	64);
	mid = add_struc_member(id,"TextureMatrices",	0X458,	0x60000400,	get_struc_id("D3DMATRIX"),	512);
	mid = add_struc_member(id,"FVF",	0X658,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VertexSize",	0X65C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VertexShaderVersion",	0X660,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PixelShaderVersion",	0X664,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SoftwareVertexProcessing",	0X668,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Material",	0X66C,	0x60000400,	get_struc_id("D3DMATERIAL9"),	68);
	mid = add_struc_member(id,"Lights",	0X6B0,	0x60000400,	get_struc_id("D3DLIGHT9"),	1664);
	mid = add_struc_member(id,"LightsEnabled",	0XD30,	0x20000400,	-1,	64);
	mid = add_struc_member(id,"GammaRamp",	0XD70,	0x60000400,	get_struc_id("D3DGAMMARAMP"),	1536);
	mid = add_struc_member(id,"ScissorRect",	0X1370,	0x60000400,	get_struc_id("RECT"),	16);
	mid = add_struc_member(id,"DialogBoxMode",	0X1380,	0x20000400,	-1,	4);
	set_struc_align(id,2);

	id = get_struc_id("IDirectInput8AVtbl");
	mid = add_struc_member(id,"QueryInterface",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AddRef",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Release",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CreateDevice",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumDevices",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDeviceStatus",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RunControlPanel",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Initialize",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindDevice",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EnumDevicesBySemantics",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ConfigureDevices",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
	id = Structures_1(id);
	id = Structures_2(id);
	id = Structures_3(id);
	id = Structures_4(id);
        end_type_updating(UTP_STRUCT);
}

// End of file.
